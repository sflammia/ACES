(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[   2126275,      41427]
NotebookOptionsPosition[   2115060,      41252]
NotebookOutlinePosition[   2115565,      41271]
CellTagsIndexPosition[   2115522,      41268]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Averaged Circuit Eigenvalue Sampling", "Chapter",
 CellChangeTimes->{{3.827882523153749*^9, 
  3.827882536608982*^9}},ExpressionUUID->"d501fe16-a944-4b5b-8a66-\
7091374bd53a"],

Cell[CellGroupData[{

Cell["Simulations of ACES with 1D circuits", "Section",
 CellChangeTimes->{{3.827336049579541*^9, 3.8273360632633953`*^9}, {
  3.827400926640875*^9, 3.8274009359206133`*^9}, {3.828202640461975*^9, 
  3.828202640831039*^9}},ExpressionUUID->"ccf9d091-0aac-4e5f-ad0d-\
ec0e430a876b"],

Cell[CellGroupData[{

Cell["Function definitions", "Subsection",
 CellChangeTimes->{{3.8275875175839777`*^9, 3.827587523061647*^9}, {
   3.827604552687319*^9, 3.827604552979074*^9}, {3.8276046589875298`*^9, 
   3.827604660577235*^9}, {3.8276638803541527`*^9, 3.827663880846653*^9}, {
   3.8278761542449636`*^9, 3.82787615454638*^9}, {3.8292264123162193`*^9, 
   3.8292264148351517`*^9}, 
   3.829230024972937*^9},ExpressionUUID->"c2c91782-a176-404c-9c0e-\
c3fec582a7a8"],

Cell[TextData[{
 "These are the primitive Clifford gates (excluding measurement) for which we\
\[CloseCurlyQuote]ll model the noise. The GateNames variable is a list of \
names of the gates. The ",
 Cell[BoxData[
  FormBox["XC", TraditionalForm]],ExpressionUUID->
  "1f86fca7-6400-4eb6-8e51-73656130f998"],
 " gate is the ",
 Cell[BoxData[
  FormBox["CX", TraditionalForm]],ExpressionUUID->
  "2e27c7ab-a28d-4ea3-b441-5b479fa16c76"],
 " gate with the control and target reversed. The single-qubit gates are \
labeled by the permutation that they induce on XYZ, ignoring signs. So, for \
example, the fourth gate is the Hadamard gate ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", "H"}], TraditionalForm]],ExpressionUUID->
  "6214d34f-67bc-4758-b5b7-5c2e2b5bb093"],
 ") and the fifth is the phase gate ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", "S"}], TraditionalForm]],ExpressionUUID->
  "f224c987-b321-4191-9ec6-3cacad41af99"],
 "). All of these gates ignore the overall phase of the Pauli basis since \
this can always be corrected afterwards. For example, the inverse of ",
 Cell[BoxData[
  FormBox["S", TraditionalForm]],ExpressionUUID->
  "fe85e94e-2cf5-4873-9c28-1331092ed29e"],
 " is itself up to a Pauli gate ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["S", "2"], "\[Equal]", "Z"}]}], TraditionalForm]],
  ExpressionUUID->"806f81e3-817e-4313-85dc-1d240089d155"],
 "). So for mirror circuits (where we never need to track the \[PlusMinus] \
signs) we can just keep track of the matrix action below. These gates act on \
the binary vector with the basis order ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["x", "1"], ",", 
     SubscriptBox["z", "1"], ",", 
     SubscriptBox["x", "2"], ",", 
     SubscriptBox["z", "2"]}]}], TraditionalForm]],ExpressionUUID->
  "0741c989-6f43-44a2-af86-f0a5ec437b88"],
 "}. "
}], "Text",
 CellChangeTimes->{{3.827400654225624*^9, 3.827400839166527*^9}, {
  3.827678639768738*^9, 3.8276786521226263`*^9}, {3.827843491129114*^9, 
  3.827843501835991*^9}, {3.827875177802178*^9, 3.8278753281793013`*^9}, {
  3.827875372699822*^9, 
  3.8278754066048822`*^9}},ExpressionUUID->"cfbbd463-515e-4775-920d-\
8c1d994439fc"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"GateNames", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<CX\>\"", ",", "\"\<XC\>\"", ",", "\"\<XYZ\>\"", ",", "\"\<ZYX\>\"", 
     ",", "\"\<YXZ\>\"", ",", "\"\<XZY\>\"", ",", "\"\<ZXY\>\"", ",", 
     "\"\<YZX\>\"", ",", "\"\<Measure\>\""}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Gates", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"1", "0", "0", "0"},
        {"0", "1", "0", "1"},
        {"1", "0", "1", "0"},
        {"0", "0", "0", "1"}
       }], "\[NoBreak]", ")"}], ",", 
     TagBox[
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"1", "0", "1", "0"},
         {"0", "1", "0", "0"},
         {"0", "0", "1", "0"},
         {"0", "1", "0", "1"}
        },
        GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}}], "\[NoBreak]", ")"}],
      Function[BoxForm`e$, 
       MatrixForm[BoxForm`e$]]], ",", 
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"1", "0"},
        {"0", "1"}
       }], "\[NoBreak]", ")"}], ",", 
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"0", "1"},
        {"1", "0"}
       }], "\[NoBreak]", ")"}], ",", 
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"1", "0"},
        {"1", "1"}
       }], "\[NoBreak]", ")"}], ",", 
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"1", "1"},
        {"0", "1"}
       }], "\[NoBreak]", ")"}], ",", 
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"0", "1"},
        {"1", "1"}
       }], "\[NoBreak]", ")"}], ",", 
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"1", "1"},
        {"1", "0"}
       }], "\[NoBreak]", ")"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"InverseGates", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Inverse", "[", 
      RowBox[{"#", ",", 
       RowBox[{"Modulus", "\[Rule]", "2"}]}], "]"}], "&"}], "/@", "Gates"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AllOneQubitGates", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Position", "[", 
     RowBox[{
      RowBox[{"Length", "/@", "Gates"}], ",", 
      RowBox[{"_", "?", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"#", "\[Equal]", "2"}], "&"}], ")"}]}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AllTwoQubitGates", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Position", "[", 
     RowBox[{
      RowBox[{"Length", "/@", "Gates"}], ",", 
      RowBox[{"_", "?", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"#", "\[Equal]", "4"}], "&"}], ")"}]}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NumberOfOneQubitGates", "=", 
   RowBox[{"Length", "[", "AllOneQubitGates", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NumberOfTwoQubitGates", "=", 
   RowBox[{"Length", "[", "AllTwoQubitGates", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GateInversion", "[", "k_", "]"}], ":=", 
   RowBox[{
    RowBox[{"GateInversion", "[", "k", "]"}], "=", 
    RowBox[{"PermutationReplace", "[", 
     RowBox[{"k", ",", 
      RowBox[{"FindPermutation", "[", 
       RowBox[{"Gates", ",", "InverseGates"}], "]"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"GateInversion", "[", "k", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "0", ",", 
      RowBox[{
      "NumberOfOneQubitGates", "+", "NumberOfTwoQubitGates", "+", "1"}]}], 
     "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"G", "[", "0", "]"}], "=", "Nothing"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"G", "[", "k", "]"}], "=", 
      RowBox[{
      "Gates", "\[LeftDoubleBracket]", "k", "\[RightDoubleBracket]"}]}], 
     ";"}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", 
      RowBox[{"Length", "[", "Gates", "]"}]}], "}"}]}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.827749252440547*^9, 3.8277493968932667`*^9}, {
   3.8278747972325773`*^9, 3.827874821587205*^9}, {3.8278750198832827`*^9, 
   3.8278750215576763`*^9}, {3.827875060697418*^9, 3.82787508817423*^9}, {
   3.827875121356531*^9, 3.827875138369001*^9}, {3.827877229710823*^9, 
   3.8278772306141148`*^9}, {3.8280255019765997`*^9, 3.828025504595483*^9}, {
   3.8281616902532663`*^9, 3.828161744062294*^9}, {3.828808559016054*^9, 
   3.828808567572813*^9}, {3.828808599277673*^9, 3.828808763445608*^9}, {
   3.828808989700457*^9, 3.8288090121250134`*^9}, {3.828809169691647*^9, 
   3.8288091710929117`*^9}, {3.828813304494416*^9, 3.828813307399226*^9}, {
   3.8288134640746603`*^9, 3.8288134662934847`*^9}, 3.8288920020653553`*^9, {
   3.828960863843359*^9, 3.828960879293089*^9}, {3.8290520828177423`*^9, 
   3.829052084601263*^9}, {3.829225983160857*^9, 3.8292260135544777`*^9}, {
   3.829226156469862*^9, 3.8292261616824837`*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"e189e09d-98c2-4d4a-8b7a-3e9d441bccaf"],

Cell["\<\
Our circuits are 1D circuits that have randomly alternating layers of 1-qubit \
gates and 2-qubit gates. The 2-qubit gate layers tile the 1D chain and \
alternate between starting on the first or second qubit. Extra space on the \
boundary is labeled with random one-qubit gates. Note that our circuits are \
not ragged arrays: we pad by 0 when there is a two-qubit gate. We wouldn\
\[CloseCurlyQuote]t save much space by using ragged arrays since the circuits \
are dense, and it would complicate the code later on to deal with ragged \
arrays. The last function inserts a layer that tiles the chain with the exact \
same gate (possibly with an offset).\
\>", "Text",
 CellChangeTimes->{{3.82740104276612*^9, 3.827401058807673*^9}, {
  3.827404810313298*^9, 3.827404838382203*^9}, {3.827404934486618*^9, 
  3.827404934855185*^9}, {3.8274050909642*^9, 3.827405118573392*^9}, {
  3.827875457845519*^9, 3.827875462014039*^9}, {3.827875507839733*^9, 
  3.827875508978223*^9}, {3.828161796674602*^9, 3.8281618669722433`*^9}, {
  3.828179843714813*^9, 
  3.8281798725901957`*^9}},ExpressionUUID->"6d93d8df-1510-495d-a87b-\
5916e1117626"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"RandomOneQubitLayer", "[", "n_Integer", "]"}], ":=", 
    RowBox[{"RandomChoice", "[", 
     RowBox[{"AllOneQubitGates", ",", "n"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"RandomTwoQubitLayer", "[", 
    RowBox[{"n_Integer", ",", "offset_Integer"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{"o", "=", 
        RowBox[{"Mod", "[", 
         RowBox[{"offset", ",", "2"}], "]"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"t", "=", 
       RowBox[{"RandomChoice", "[", 
        RowBox[{"AllTwoQubitGates", ",", 
         RowBox[{
          RowBox[{"Floor", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"n", "+", "o"}], ")"}], "/", "2"}], "]"}], "-", "o"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"t", "=", 
       RowBox[{"Riffle", "[", 
        RowBox[{"t", ",", "0", ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", 
           RowBox[{"-", "1"}], ",", "2"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"OddQ", "[", 
         RowBox[{"n", "+", "o"}], "]"}], ",", 
        RowBox[{
         RowBox[{"AppendTo", "[", 
          RowBox[{"t", ",", 
           RowBox[{"RandomChoice", "[", "AllOneQubitGates", "]"}]}], "]"}], 
         ";"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"o", "\[Equal]", "1"}], ",", 
        RowBox[{
         RowBox[{"PrependTo", "[", 
          RowBox[{"t", ",", 
           RowBox[{"RandomChoice", "[", "AllOneQubitGates", "]"}]}], "]"}], 
         ";"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "t", "]"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.827327386201044*^9, 3.827327459340331*^9}, {
   3.82732752520963*^9, 3.827327560353093*^9}, {3.827327606362845*^9, 
   3.827327610755329*^9}, {3.827327697986835*^9, 3.827327699815159*^9}, {
   3.827327782333082*^9, 3.827327783653899*^9}, {3.82732817568402*^9, 
   3.827328206689495*^9}, {3.827328565237444*^9, 3.827328591426147*^9}, {
   3.827328858936269*^9, 3.8273289846254673`*^9}, {3.827330012523871*^9, 
   3.8273300243325357`*^9}, {3.827330227131528*^9, 3.827330242268466*^9}, {
   3.827330272552463*^9, 3.8273305163562193`*^9}, {3.827330581250491*^9, 
   3.8273305838146048`*^9}, {3.827331036128316*^9, 3.827331058883662*^9}, {
   3.8273312025127897`*^9, 3.827331204777296*^9}, {3.827331265184306*^9, 
   3.827331554574027*^9}, {3.827331704422668*^9, 3.827331728746992*^9}, {
   3.827334962395287*^9, 3.8273349729574947`*^9}, {3.82733607839828*^9, 
   3.827336119962556*^9}, {3.827336231341621*^9, 3.8273362535087013`*^9}, {
   3.827341912124463*^9, 3.827341915828765*^9}, {3.82734196219477*^9, 
   3.8273419665290327`*^9}, {3.827400983647921*^9, 3.827400988136812*^9}, {
   3.82740513658573*^9, 3.82740518979853*^9}, {3.827405252858651*^9, 
   3.8274052540642557`*^9}, 3.8274058958093987`*^9, {3.827406129786044*^9, 
   3.827406136896111*^9}, {3.827406189529809*^9, 3.8274062415494223`*^9}, {
   3.827406281061419*^9, 3.827406281117847*^9}, {3.8274063126202106`*^9, 
   3.827406321596158*^9}, {3.8274063577117167`*^9, 3.827406375523961*^9}, {
   3.827406440076372*^9, 3.827406489892696*^9}, {3.8274072069541483`*^9, 
   3.8274072093121634`*^9}, {3.827409624120363*^9, 3.8274096281851187`*^9}, {
   3.8276783572477627`*^9, 3.827678389860824*^9}, {3.827678669090434*^9, 
   3.827678674343264*^9}, {3.827678858841112*^9, 3.827678861135252*^9}, 
   3.827749432965342*^9, 3.8277495469432583`*^9, {3.827749604667203*^9, 
   3.827749650621607*^9}, 3.827749694756668*^9, {3.827750330855122*^9, 
   3.827750335463232*^9}, {3.82775037760568*^9, 3.8277503780523777`*^9}, {
   3.8277504223562593`*^9, 3.8277504268861647`*^9}, {3.8278588214831257`*^9, 
   3.827858862908741*^9}, {3.828161906062089*^9, 3.828161912499196*^9}, {
   3.828161948257101*^9, 3.828161952081324*^9}, {3.8281792265427732`*^9, 
   3.828179276585833*^9}, {3.828179447008273*^9, 3.8281794507718678`*^9}, {
   3.828179704042117*^9, 3.8281798320590878`*^9}, {3.828179957600477*^9, 
   3.8281799597895517`*^9}, {3.828188507049282*^9, 3.82818853917951*^9}, {
   3.828808916061713*^9, 3.828808972549713*^9}, {3.828809046315146*^9, 
   3.8288090505226717`*^9}, {3.828809108720318*^9, 3.828809131177648*^9}, {
   3.8288900096431313`*^9, 3.8288900102757177`*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"9f36c2f9-dc50-4f57-ae53-8131f11b9ac8"],

Cell[TextData[{
 "This function forms a sparse direct sum of the matrices in the list ",
 Cell[BoxData[
  FormBox["c", TraditionalForm]],ExpressionUUID->
  "5f36fed0-285a-4920-a52c-84dbe6e08dda"],
 ". This effectively compiles each circuit layer into a specific matrix."
}], "Text",
 CellChangeTimes->{{3.827405775772653*^9, 3.827405789651896*^9}, {
  3.827405836706946*^9, 3.8274058576682043`*^9}, {3.827751772077219*^9, 
  3.8277517775288877`*^9}, {3.827875468377787*^9, 
  3.82787546837951*^9}},ExpressionUUID->"d315c8bc-399c-4036-8336-\
d5d94b27df6d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"DirectSum", "[", "c_List", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"SparseArray", "[", 
      RowBox[{
       RowBox[{"Band", "[", 
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}], "]"}], "\[Rule]", 
       RowBox[{"{", "##", "}"}]}], "]"}], "&"}], "@@", 
    RowBox[{"(", 
     RowBox[{"G", "/@", "c"}], ")"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.827405424881393*^9, 3.8274054316543922`*^9}, 
   3.827405498335232*^9, {3.827405538033057*^9, 3.8274055524716063`*^9}, {
   3.827405733334901*^9, 3.827405735606411*^9}, {3.827751561059655*^9, 
   3.827751568868162*^9}, {3.8277516005298147`*^9, 3.827751602943323*^9}, {
   3.827761587973805*^9, 3.827761595790716*^9}, {3.8277644716108837`*^9, 
   3.8277644722405367`*^9}, {3.827778060063621*^9, 3.827778075378729*^9}, 
   3.828161982866601*^9},
 CellLabel->"In[37]:=",ExpressionUUID->"685e8b64-0066-4d8d-a9f1-3f6db813e97d"],

Cell[TextData[{
 "We can create a random circuit on ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "8d68f3f5-9e53-4ef0-abdc-a710545be6a1"],
 " qubits having depth ",
 Cell[BoxData[
  FormBox["d", TraditionalForm]],ExpressionUUID->
  "1cec8b69-99a6-4da1-8975-84b703d48902"],
 " as a matrix whose rows are alternating circuit layers. We can introduce \
more randomness by choosing each layer at random (RandomCircuit2). Finally, \
we can run a circuit where a specific gate layer is interleaved into the \
circuit. "
}], "Text",
 CellChangeTimes->{{3.827407556558251*^9, 3.8274075939411707`*^9}, {
  3.827531198835607*^9, 3.8275312005892563`*^9}, {3.828180000284801*^9, 
  3.828180035495159*^9}, {3.828657069258936*^9, 3.828657087843298*^9}, {
  3.828657132087105*^9, 
  3.828657142570383*^9}},ExpressionUUID->"dd5a95a1-3fdf-45c3-8181-\
df2bbcb23615"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"RandomCircuit", "[", 
     RowBox[{"n_Integer", ",", "d_Integer"}], "]"}], ":=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"OddQ", "[", "k", "]"}], ",", 
        RowBox[{"RandomOneQubitLayer", "[", "n", "]"}], ",", 
        RowBox[{"RandomTwoQubitLayer", "[", 
         RowBox[{"n", ",", 
          RowBox[{"Mod", "[", 
           RowBox[{
            RowBox[{
             FractionBox["k", "2"], "-", "1"}], ",", "2"}], "]"}]}], "]"}]}], 
       "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "d"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"RandomCircuit2", "[", 
    RowBox[{"n_Integer", ",", "d_Integer"}], "]"}], ":=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"OddQ", "[", 
        RowBox[{"RandomInteger", "[", "]"}], "]"}], ",", 
       RowBox[{"RandomOneQubitLayer", "[", "n", "]"}], ",", 
       RowBox[{"RandomTwoQubitLayer", "[", 
        RowBox[{"n", ",", 
         RowBox[{"RandomInteger", "[", "]"}]}], "]"}]}], "]"}], ",", 
     RowBox[{"{", "d", "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.827407541999363*^9, 3.827407554315707*^9}, {
  3.827407599396001*^9, 3.8274076181851063`*^9}, {3.827407655277603*^9, 
  3.827407674932723*^9}, {3.8274077079879417`*^9, 3.8274077082678537`*^9}, {
  3.827407739850029*^9, 3.8274077400169563`*^9}, {3.8274077846394567`*^9, 
  3.827407784681829*^9}, {3.827408363091597*^9, 3.827408370191825*^9}, {
  3.827875517671743*^9, 3.827875519785747*^9}, {3.828180013211028*^9, 
  3.82818008397895*^9}, {3.828184170676444*^9, 3.8281841756391582`*^9}, {
  3.828185797310896*^9, 3.828185816649501*^9}, {3.828186118023652*^9, 
  3.828186187461804*^9}, {3.828186246926793*^9, 3.828186273926396*^9}, {
  3.828187266717746*^9, 3.8281872675460873`*^9}, {3.8288900286182327`*^9, 
  3.828890137523678*^9}, {3.8292252716781387`*^9, 3.829225272324774*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"c33f1d63-7e4c-481e-90e7-dc93f5c0f99d"],

Cell[TextData[{
 "The next function takes a circuit and computes its \
\[OpenCurlyDoubleQuote]mirror\[CloseCurlyDoubleQuote], i.e., the time reverse \
of the original circuit, with total depth ",
 Cell[BoxData[
  FormBox["d", TraditionalForm]],ExpressionUUID->
  "46f71412-01df-477b-84f7-f01d84c728d5"],
 ". If ",
 Cell[BoxData[
  FormBox["d", TraditionalForm]],ExpressionUUID->
  "90aeb15f-a22a-4cd8-be0f-674448080757"],
 " is odd it adds an extra layer of random one-qubit gates."
}], "Text",
 CellChangeTimes->{{3.8274083725762253`*^9, 3.827408415730361*^9}, {
  3.8275748984261713`*^9, 3.827574912704775*^9}, {3.827875595098647*^9, 
  3.8278756374615993`*^9}, {3.8278757130168943`*^9, 
  3.827875730012763*^9}},ExpressionUUID->"2b42e94f-1c0e-4a4d-a393-\
940c5f7826d9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"InverseCircuit", "[", 
     RowBox[{"c_", "?", "MatrixQ"}], "]"}], ":=", 
    RowBox[{"Map", "[", 
     RowBox[{"GateInversion", ",", 
      RowBox[{"Reverse", "[", "c", "]"}], ",", 
      RowBox[{"{", "2", "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"RandomMirrorCircuit", "[", 
     RowBox[{"n_Integer", ",", "d_Integer"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "t", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"t", "=", 
        RowBox[{"RandomCircuit", "[", 
         RowBox[{"n", ",", 
          RowBox[{"Floor", "[", 
           RowBox[{"d", "/", "2"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"t", "=", 
        RowBox[{"Join", "[", 
         RowBox[{"t", ",", 
          RowBox[{"InverseCircuit", "[", "t", "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"EvenQ", "[", "d", "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Return", "[", "t", "]"}], ";"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Return", "[", 
           RowBox[{"Join", "[", 
            RowBox[{"t", ",", 
             RowBox[{"{", 
              RowBox[{"RandomOneQubitLayer", "[", "n", "]"}], "}"}]}], "]"}], 
           "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RandomMirrorCircuit2", "[", 
    RowBox[{"n_Integer", ",", "d_Integer"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "t", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"t", "=", 
       RowBox[{"RandomCircuit2", "[", 
        RowBox[{"n", ",", 
         RowBox[{"Floor", "[", 
          RowBox[{"d", "/", "2"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"t", "=", 
       RowBox[{"Join", "[", 
        RowBox[{"t", ",", 
         RowBox[{"InverseCircuit", "[", "t", "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"EvenQ", "[", "d", "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Return", "[", "t", "]"}], ";"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Return", "[", 
          RowBox[{"Join", "[", 
           RowBox[{"t", ",", 
            RowBox[{"{", 
             RowBox[{"RandomOneQubitLayer", "[", "n", "]"}], "}"}]}], "]"}], 
          "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.827407541999363*^9, 3.827407554315707*^9}, {
   3.827407599396001*^9, 3.8274076181851063`*^9}, {3.827407655277603*^9, 
   3.827407674932723*^9}, {3.8274077079879417`*^9, 3.8274077082678537`*^9}, {
   3.827407739850029*^9, 3.8274077400169563`*^9}, {3.8274077846394567`*^9, 
   3.827407784681829*^9}, {3.827408363091597*^9, 3.827408370191825*^9}, {
   3.827408673910323*^9, 3.827408674246426*^9}, {3.827531302851625*^9, 
   3.827531306009626*^9}, {3.827574891693047*^9, 3.827574948062839*^9}, {
   3.827574991024658*^9, 3.827574993430312*^9}, {3.827575078087873*^9, 
   3.827575079736903*^9}, {3.82768580793649*^9, 3.827686062552549*^9}, {
   3.827753429711738*^9, 3.827753438313531*^9}, {3.827853306722776*^9, 
   3.8278533337357483`*^9}, {3.8278750294337187`*^9, 3.827875035250718*^9}, {
   3.82787559030342*^9, 3.827875590717445*^9}, {3.82809423515268*^9, 
   3.8280942510232897`*^9}, {3.8280945364682293`*^9, 3.82809454054797*^9}, {
   3.8281804400182*^9, 3.828180442883946*^9}, {3.828187954413775*^9, 
   3.828187989362855*^9}, {3.828188022230151*^9, 3.8281880569421988`*^9}, 
   3.8288896667464743`*^9, {3.828889737842608*^9, 3.828889745083069*^9}, {
   3.8288920749046383`*^9, 3.828892090499572*^9}, {3.828892668577434*^9, 
   3.828892672031437*^9}, {3.828892761885075*^9, 3.828892772429706*^9}, {
   3.829225267110209*^9, 3.829225267503892*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"210d2605-7036-49e2-81a4-d988a00871b1"],

Cell[TextData[{
 "CircuitHistory writes the net action of the circuit for each time step. \
PauliHistory finds the entire history of the circuit action acting on the \
standard Pauli basis. So, of p=PauliHistory[c], then p\[LeftDoubleBracket]1\
\[RightDoubleBracket] is the action on ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "1"], TraditionalForm]],ExpressionUUID->
  "8eaba123-4dee-4652-98a6-7e135a7be20b"],
 ", etc.  The Pauli history is labeled as p\[LeftDoubleBracket]Pauli, Time, \
Space\[RightDoubleBracket], in other words."
}], "Text",
 CellChangeTimes->{{3.827764262932341*^9, 3.82776429762599*^9}, {
  3.827789984884494*^9, 3.827790035962186*^9}, {3.827874327078191*^9, 
  3.827874334068344*^9}},ExpressionUUID->"67f78d7a-540b-4f28-9e3d-\
e75ff920e433"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"CircuitHistory", "[", 
     RowBox[{"c_", "?", "MatrixQ"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "cc", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"cc", "=", 
        RowBox[{"DirectSum", "/@", "c"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"FoldList", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Mod", "[", 
            RowBox[{
             RowBox[{"Dot", "[", 
              RowBox[{"#2", ",", "#1"}], "]"}], ",", "2"}], "]"}], "&"}], ",",
           "cc"}], "]"}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PauliHistory", "[", 
    RowBox[{"c_", "?", "MatrixQ"}], "]"}], ":=", 
   RowBox[{"Transpose", "[", 
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"IdentityMatrix", "[", 
         RowBox[{
          RowBox[{"2", "n"}], ",", "SparseArray"}], "]"}], "}"}], ",", 
       RowBox[{"CircuitHistory", "[", "c", "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3", ",", "1"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8273361559375763`*^9, 3.8273361865485992`*^9}, {
   3.827336683144867*^9, 3.8273367346274347`*^9}, {3.827337018710602*^9, 
   3.827337143903124*^9}, {3.827337199072432*^9, 3.8273373558009043`*^9}, {
   3.8273403874271603`*^9, 3.827340428124909*^9}, {3.827340500670514*^9, 
   3.827340502288125*^9}, {3.827340566358592*^9, 3.827340588345565*^9}, {
   3.827341508590592*^9, 3.827341531522188*^9}, {3.8273420281662807`*^9, 
   3.8273420293640137`*^9}, {3.827342110557946*^9, 3.827342112688171*^9}, {
   3.827342168429538*^9, 3.8273423193461323`*^9}, 3.82734236322049*^9, {
   3.8273424034347677`*^9, 3.827342414639247*^9}, {3.8273424603480883`*^9, 
   3.827342530243795*^9}, {3.827342564042068*^9, 3.827342572184476*^9}, {
   3.827342603324844*^9, 3.82734265896006*^9}, {3.827342713627778*^9, 
   3.827342713912095*^9}, {3.8273427673293247`*^9, 3.8273427765661716`*^9}, {
   3.827342823627174*^9, 3.8273428428692083`*^9}, {3.827342995647827*^9, 
   3.8273430253465843`*^9}, 3.827343279182188*^9, {3.827343310832898*^9, 
   3.8273433213168*^9}, {3.8273434827361193`*^9, 3.8273434930233994`*^9}, {
   3.827344416062687*^9, 3.8273444205017147`*^9}, {3.827344634047571*^9, 
   3.827344650996339*^9}, 3.827408552003183*^9, {3.827408970447878*^9, 
   3.82740901019381*^9}, {3.8274101223050327`*^9, 3.827410288914803*^9}, {
   3.827428478308263*^9, 3.827428480550809*^9}, {3.827764190536977*^9, 
   3.8277642497941523`*^9}, {3.827789893238676*^9, 3.827789910833415*^9}, {
   3.8277899523038588`*^9, 3.8277899559084377`*^9}, 3.828040722104476*^9, 
   3.828042681527854*^9, {3.828042833486006*^9, 3.828042834309779*^9}, {
   3.828180106286612*^9, 3.8281801206700287`*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"2c8ef934-6c47-461a-994a-c182cf2303c7"],

Cell[TextData[{
 "This function chooses at random a set of ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "2fbec94d-3974-4d35-9004-0a03d1c03f00"],
 " single-qubit Pauli matrices that defines a local basis. These will be the \
probe states for the ACES experiments. We can also get a list of all the ",
 Cell[BoxData[
  FormBox[
   RowBox[{"3", "n"}], TraditionalForm]],ExpressionUUID->
  "97ff75a1-a091-4176-8fee-780780612565"],
 " single-qubit Paulis that we might use as probes, and a list of all Paulis \
of weight at most two."
}], "Text",
 CellChangeTimes->{{3.827426956669276*^9, 3.827427003370186*^9}, {
  3.8274290588453217`*^9, 3.827429090068954*^9}, {3.8274291435313253`*^9, 
  3.8274291439348173`*^9}, {3.827587652918694*^9, 
  3.827587664751626*^9}},ExpressionUUID->"9edf9123-e84d-45fe-9d95-\
d95746efae49"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"KNNPaulis", "[", 
    RowBox[{"n_Integer", ",", "k_Integer"}], "]"}], ":=", 
   RowBox[{"SparseArray", "[", 
    RowBox[{"DeleteDuplicates", "[", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"RotateRight", "[", 
          RowBox[{
           RowBox[{"PadRight", "[", 
            RowBox[{
             RowBox[{"IntegerDigits", "[", 
              RowBox[{"m", ",", "2", ",", 
               RowBox[{"2", "k"}]}], "]"}], ",", 
             RowBox[{"2", "n"}]}], "]"}], ",", 
           RowBox[{"2", "j"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "0", ",", 
           RowBox[{"n", "-", "k"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"m", ",", 
           RowBox[{
            SuperscriptBox["4", "k"], "-", "1"}]}], "}"}]}], "]"}], ",", 
       "1"}], "]"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.827426465867999*^9, 3.827426653206924*^9}, 
   3.827427966677518*^9, {3.827428013044374*^9, 3.8274280140771713`*^9}, 
   3.827428071967433*^9, {3.827429053903504*^9, 3.827429073778061*^9}, 
   3.827429523926403*^9, {3.827429607584804*^9, 3.827429613717297*^9}, {
   3.827444825672823*^9, 3.827444826434724*^9}, {3.8274448628429127`*^9, 
   3.827444864012534*^9}, {3.827587552446752*^9, 3.827587641877142*^9}, {
   3.827590849790655*^9, 3.827590855129219*^9}, 3.827590900613194*^9, {
   3.827604412259006*^9, 3.8276044360680027`*^9}, 3.827875785435151*^9, {
   3.8280325731050787`*^9, 3.8280325738218107`*^9}, {3.828046971139649*^9, 
   3.828046971388762*^9}, 3.828047029510866*^9, {3.828108232389625*^9, 
   3.828108243804248*^9}, 3.8281092927732267`*^9, {3.82810946612728*^9, 
   3.828109532639379*^9}, {3.828109772706855*^9, 3.828109777536174*^9}, {
   3.828311012954842*^9, 3.828311016455208*^9}, {3.829225279630373*^9, 
   3.829225291660179*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"46c80772-34eb-4fd0-8f1b-b086028ef35b"],

Cell[TextData[{
 "Given a Clifford circuit, the next function tracks the Pauli frame through \
the circuit layer by layer beginning with the input Pauli ",
 Cell[BoxData[
  FormBox["P", TraditionalForm]],ExpressionUUID->
  "58bcfe88-215e-4b92-914e-5e25e8df8383"],
 ". The vector ",
 Cell[BoxData[
  FormBox["P", TraditionalForm]],ExpressionUUID->
  "6249c53c-967a-4a6b-9258-585dc47e0add"],
 " is a binary array in the basis ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["x", "1"], ",", 
     SubscriptBox["z", "1"], ",", 
     SubscriptBox["x", "2"], ",", 
     SubscriptBox["z", "2"], ",", "...", ",", 
     SubscriptBox["x", "n"], ",", 
     SubscriptBox["z", "n"]}], "}"}], TraditionalForm]],ExpressionUUID->
  "43f4448b-0005-47e8-87d6-f9fd05164ad9"],
 ". We ignore the overall \[PlusMinus]1 signs since we can always correct for \
this in postprocessing."
}], "Text",
 CellChangeTimes->{{3.827409838907569*^9, 3.827409842449242*^9}, {
   3.827410384926907*^9, 3.827410402545721*^9}, 3.827443961813478*^9, {
   3.8323706223747997`*^9, 
   3.8323706281775837`*^9}},ExpressionUUID->"b748ddfb-f6a9-4a36-b7aa-\
3ac871f3b98c"],

Cell[TextData[{
 "This function defines an array of variables labeled ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "[", 
    RowBox[{"G", ",", " ", "q", ",", 
     RowBox[{
      RowBox[{"2", 
       SubscriptBox["x", "q"]}], "+", 
      SubscriptBox["z", "q"]}]}], "]"}], TraditionalForm]],ExpressionUUID->
  "e1b26cd6-9e1d-41cf-a469-3bdf4c5cae5d"],
 " for single-qubit gates and similarly for two-qubit gates ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "[", 
    RowBox[{"G", ",", " ", "q1", ",", 
     RowBox[{"FromDigits", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         SubscriptBox["x", "q1"], ",", 
         SubscriptBox["z", "q1"], ",", 
         SubscriptBox["x", "q2"], ",", 
         SubscriptBox["z", "q2"]}], "}"}], ",", "2"}], "]"}]}], "]"}], 
   TraditionalForm]],ExpressionUUID->"a8c43368-10bf-41dc-9577-17db9a4ca2cd"],
 ". The first label is the gate, the second label is the first qubit that the \
gate acts on, and the third label is the integer formed from the ",
 Cell[BoxData[
  FormBox[
   RowBox[{"2", "n"}], TraditionalForm]],ExpressionUUID->
  "20e47e97-a53c-421d-9346-c3c05f35d5ab"],
 "-bit string labeling the Pauli eigenvalue. This is hard coded for 2 \
two-qubit gates, 6 one-qubit gates and a measurement gate."
}], "Text",
 CellChangeTimes->{{3.827489837384533*^9, 3.8274900069709272`*^9}, {
  3.827490046797353*^9, 3.827490065270617*^9}, {3.82749101764815*^9, 
  3.82749106375169*^9}, {3.827491354767634*^9, 3.827491356060856*^9}, {
  3.8277874295357924`*^9, 3.827787482709504*^9}, {3.8278758482696037`*^9, 
  3.827875884242436*^9}},ExpressionUUID->"13b4ad4c-fb96-4d71-8ed4-\
0a57054af95b"],

Cell[TextData[{
 "Given a Pauli or a list of Paulis ",
 Cell[BoxData[
  FormBox["P", TraditionalForm]],ExpressionUUID->
  "b0126450-b3bb-44ab-8e95-8ae1b47bd592"],
 ", compute the symbolic circuit log-eigenvalue as a function of the \
log-eigenvalues of the noisy circuit elements. The variable ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "4fe8b228-aebd-469e-ba3e-9087826d9d4c"],
 " is used to label the circuit log-eigenvalues and ",
 Cell[BoxData[
  FormBox["c", TraditionalForm]],ExpressionUUID->
  "99952d30-8b6f-4bc9-bac1-c7a4d05d833e"],
 " is the circuit. The first function is a helper function that splits each \
Pauli in the Pauli history into Paulis that are \
\[OpenCurlyDoubleQuote]commensurate\[CloseCurlyDoubleQuote] with the gates \
they encounter at this time step. So, if a Pauli will encounter a two-qubit \
gate or a one-qubit gate, it will group the Pauli history accordingly and \
return a Pauli from one of 16 or 4 choices, respectively. "
}], "Text",
 CellChangeTimes->{{3.8275035064071712`*^9, 3.8275036500134277`*^9}, {
  3.827876013662994*^9, 
  3.827876113445476*^9}},ExpressionUUID->"e0f72c30-b7e0-4bcd-91a5-\
c40f32095282"],

Cell["\<\
This function returns a list that describes each circuit layer as \
single-qubit (1), two-qubit with no offset (2), or two-qubit with an offset \
(3).\
\>", "Text",
 CellChangeTimes->{{3.828164337977818*^9, 
  3.828164430604961*^9}},ExpressionUUID->"5db6c958-8a02-46ab-a839-\
b442a3651585"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"CircuitLayerType", "[", 
     RowBox[{"c_", "?", "MatrixQ"}], "]"}], ":=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Which", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"c", "\[LeftDoubleBracket]", 
          RowBox[{"k", ",", "1"}], "\[RightDoubleBracket]"}], "\[LessEqual]", 
         "NumberOfTwoQubitGates"}], ",", "2", ",", 
        RowBox[{
         RowBox[{"c", "\[LeftDoubleBracket]", 
          RowBox[{"k", ",", "2"}], "\[RightDoubleBracket]"}], "\[LessEqual]", 
         "NumberOfTwoQubitGates"}], ",", "3", ",", "True", ",", "1"}], "]"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", 
        RowBox[{"Length", "[", "c", "]"}]}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"CircuitPauliPartition", "[", 
     RowBox[{
      RowBox[{"c_", "?", "MatrixQ"}], ",", 
      RowBox[{"p_", "?", "ArrayQ"}], ",", "n_Integer"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"t", ",", "tL", ",", 
        RowBox[{"tt", "=", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", "pp", ",", "j"}], 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"t", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"Position", "[", 
            RowBox[{
             RowBox[{"CircuitLayerType", "[", "c", "]"}], ",", "#"}], "]"}], 
           "]"}], "&"}], "/@", 
         RowBox[{"{", 
          RowBox[{"1", ",", "2", ",", "3"}], "}"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"tL", "=", 
        RowBox[{"Length", "/@", "t"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"tt", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
        "=", 
        RowBox[{
         RowBox[{
          RowBox[{"SparseArray", "[", 
           RowBox[{
            RowBox[{"Band", "[", 
             RowBox[{"{", 
              RowBox[{"1", ",", "1"}], "}"}], "]"}], "\[Rule]", 
            RowBox[{"{", "##", "}"}]}], "]"}], "&"}], "@@", 
         RowBox[{"(", 
          RowBox[{"ConstantArray", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", "2", "}"}], ",", 
              RowBox[{"{", "1", "}"}]}], "}"}], ",", 
            RowBox[{"{", "n", "}"}]}], "]"}], ")"}]}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"OddQ", "[", "n", "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{
           "tt", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], "=", 
           
           RowBox[{
            RowBox[{
             RowBox[{"SparseArray", "[", 
              RowBox[{
               RowBox[{"Band", "[", 
                RowBox[{"{", 
                 RowBox[{"1", ",", "1"}], "}"}], "]"}], "\[Rule]", 
               RowBox[{"{", "##", "}"}]}], "]"}], "&"}], "@@", 
            RowBox[{"(", 
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{"ConstantArray", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"8", ",", "0"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"4", ",", "0"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"2", ",", "0"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"Floor", "[", 
                   RowBox[{"n", "/", "2"}], "]"}], "}"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", "2", "}"}], ",", 
                  RowBox[{"{", "1", "}"}]}], "}"}], "}"}]}], "]"}], ")"}]}]}],
           ";", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
           "tt", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], "=", 
           
           RowBox[{
            RowBox[{
             RowBox[{"SparseArray", "[", 
              RowBox[{
               RowBox[{"Band", "[", 
                RowBox[{"{", 
                 RowBox[{"1", ",", "1"}], "}"}], "]"}], "\[Rule]", 
               RowBox[{"{", "##", "}"}]}], "]"}], "&"}], "@@", 
            RowBox[{"(", 
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", "2", "}"}], ",", 
                  RowBox[{"{", "1", "}"}]}], "}"}], "}"}], ",", 
               RowBox[{"ConstantArray", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"8", ",", "0"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"4", ",", "0"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"2", ",", "0"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"Floor", "[", 
                   RowBox[{"n", "/", "2"}], "]"}], "}"}]}], "]"}]}], "]"}], 
             ")"}]}]}], ";"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{
           "tt", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], "=", 
           
           RowBox[{
            RowBox[{
             RowBox[{"SparseArray", "[", 
              RowBox[{
               RowBox[{"Band", "[", 
                RowBox[{"{", 
                 RowBox[{"1", ",", "1"}], "}"}], "]"}], "\[Rule]", 
               RowBox[{"{", "##", "}"}]}], "]"}], "&"}], "@@", 
            RowBox[{"(", 
             RowBox[{"ConstantArray", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"8", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"4", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"2", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "0"}], "}"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"n", "/", "2"}], "}"}]}], "]"}], ")"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
           "tt", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], "=", 
           
           RowBox[{
            RowBox[{
             RowBox[{"SparseArray", "[", 
              RowBox[{
               RowBox[{"Band", "[", 
                RowBox[{"{", 
                 RowBox[{"1", ",", "1"}], "}"}], "]"}], "\[Rule]", 
               RowBox[{"{", "##", "}"}]}], "]"}], "&"}], "@@", 
            RowBox[{"(", 
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", "2", "}"}], ",", 
                  RowBox[{"{", "1", "}"}]}], "}"}], "}"}], ",", 
               RowBox[{"ConstantArray", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"8", ",", "0"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"4", ",", "0"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"2", ",", "0"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"n", "/", "2"}], "-", "1"}], "}"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", "2", "}"}], ",", 
                  RowBox[{"{", "1", "}"}]}], "}"}], "}"}]}], "]"}], ")"}]}]}],
           ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"pp", "=", 
        RowBox[{"SparseArray", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"2", "n"}], ",", 
            RowBox[{"Length", "[", "c", "]"}], ",", "n"}], "}"}], "\[Rule]", 
          "0"}], "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"j", "=", "1"}], ",", 
         RowBox[{"j", "\[LessEqual]", "3"}], ",", 
         RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
             "tL", "\[LeftDoubleBracket]", "j", "\[RightDoubleBracket]"}], 
             ">", "0"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"pp", "\[LeftDoubleBracket]", 
               RowBox[{"All", ",", 
                RowBox[{
                "t", "\[LeftDoubleBracket]", "j", "\[RightDoubleBracket]"}]}],
                "\[RightDoubleBracket]"}], "=", 
              RowBox[{
               RowBox[{"p", "\[LeftDoubleBracket]", 
                RowBox[{"All", ",", 
                 RowBox[{
                 "t", "\[LeftDoubleBracket]", "j", "\[RightDoubleBracket]"}], 
                 ",", "All"}], "\[RightDoubleBracket]"}], ".", 
               RowBox[{
               "tt", "\[LeftDoubleBracket]", "j", 
                "\[RightDoubleBracket]"}]}]}], ";"}]}], "\[IndentingNewLine]",
            "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "pp", "]"}], ";"}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Arow", "[", 
     RowBox[{
      RowBox[{"c_", "?", "MatrixQ"}], ",", 
      RowBox[{"cpp_", "?", "ArrayQ"}], ",", 
      RowBox[{"ip_", "?", "VectorQ"}], ",", "x_Symbol"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"cases", ",", "keys", ",", "values"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"cases", "=", 
        RowBox[{"ArrayRules", "[", 
         RowBox[{"SparseArray", "[", 
          RowBox[{"Tr", "[", 
           RowBox[{
            RowBox[{
            "cpp", "\[LeftDoubleBracket]", "ip", "\[RightDoubleBracket]"}], 
            ",", "BitXor", ",", "1"}], "]"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"keys", "=", 
        RowBox[{"Most", "[", 
         RowBox[{"Keys", "[", "cases", "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"values", "=", 
        RowBox[{"Most", "[", 
         RowBox[{"Values", "[", "cases", "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"Total", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"x", "@@", "#"}], "&"}], "/@", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Extract", "[", 
                 RowBox[{"c", ",", "#"}], "]"}], "&"}], "/@", "keys"}], ",", 
              RowBox[{"keys", "\[LeftDoubleBracket]", 
               RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
              "values"}], "}"}], "\[Transpose]"}], ")"}]}], "]"}], "]"}], 
       ";"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Amat", "[", 
    RowBox[{
     RowBox[{"c_", "?", "MatrixQ"}], ",", 
     RowBox[{"cpp_", "?", "ArrayQ"}], ",", 
     RowBox[{"ip_", "?", "MatrixQ"}]}], "]"}], ":=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"n", "=", 
        RowBox[{
         RowBox[{"Dimensions", "[", "c", "]"}], "\[LeftDoubleBracket]", "2", 
         "\[RightDoubleBracket]"}]}], ",", 
       RowBox[{"P", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"Keys", "[", 
            RowBox[{"Most", "[", 
             RowBox[{"ArrayRules", "[", "#", "]"}], "]"}], "]"}], "]"}], 
          "&"}], "/@", "ip"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Return", "[", 
       RowBox[{
        RowBox[{"CoefficientArrays", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Arow", "[", 
             RowBox[{"c", ",", "cpp", ",", 
              RowBox[{
              "P", "\[LeftDoubleBracket]", "k", "\[RightDoubleBracket]"}], 
              ",", "x"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"k", ",", 
              RowBox[{"Length", "[", "ip", "]"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"GateVariables", "[", 
           RowBox[{"n", ",", "x"}], "]"}]}], "]"}], "\[LeftDoubleBracket]", 
        "2", "\[RightDoubleBracket]"}], "]"}], ";"}]}], "\[IndentingNewLine]",
     "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.828164308122101*^9, 3.828164328519409*^9}, {
   3.828180218247738*^9, 3.828180219869196*^9}, 3.828180349459632*^9, {
   3.828180566534416*^9, 3.8281807983213587`*^9}, {3.828180831112135*^9, 
   3.828181039145842*^9}, {3.82818107549225*^9, 3.8281810773821087`*^9}, {
   3.828810650618227*^9, 3.8288106939693604`*^9}, {3.829225349887322*^9, 
   3.829225351816115*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"aef7c2a1-5704-49e3-b532-bff5dd24e011"],

Cell[TextData[{
 "If we want the model to be a little coarser than allowing arbitrary errors \
on each gate, we can reduce some of the model parameters. \n\nHere is a new \
function that tries to give the model as a parameter. It is a string that \
says which error parameters are allowed as we vary the gate \
\[OpenCurlyDoubleQuote]G\[CloseCurlyDoubleQuote], the qubit that it acts on \
\[OpenCurlyDoubleQuote]Q\[CloseCurlyDoubleQuote], and the Pauli eigenvalue \
\[OpenCurlyDoubleQuote]P\[CloseCurlyDoubleQuote]. The full model is given by \
the string \[OpenCurlyDoubleQuote]GQP\[CloseCurlyDoubleQuote] and is the \
default. The minimal model given by the empty string \[OpenCurlyDoubleQuote]\
\[CloseCurlyDoubleQuote], has only three parameters and varies only with \
single-qubit gate, two-qubit gate, and measurement. \n\nIn this notebook, we \
consider the \[OpenCurlyDoubleQuote]maximal\[CloseCurlyDoubleQuote] model of \
noise which is time-stationary, uncorrelated, and with zero leakage. By this \
we mean that the noise does not depend on the time step (time-stationary) or \
on the other adjacent gates (uncorrelated), and the Pauli eigenvalue \
associated to the identity is 1 for every noise channel. Obviously, larger \
models that take these time- and space-like correlations as well as leakage \
into account could be formulated in this same framework, but we do not \
consider that here. Instead, we also consider more parsimonious models that \
reduce the number of parameters from the maximal model. \n\nIn the maximal \
model, each noise parameter is specified by a gate \[OpenCurlyDoubleQuote]G\
\[CloseCurlyDoubleQuote], the qubit(s) \[OpenCurlyDoubleQuote]Q\
\[CloseCurlyDoubleQuote] upon which the gate acts, and the specific Pauli \
eigenvalue \[OpenCurlyDoubleQuote]P\[CloseCurlyDoubleQuote] in the \
corresponding noise channel. To specify a reduced model, we input a string \
that tells us which of these dependencies to marginalize over. To keep things \
as simple as possible, this code can only marginalize over the entirety of \
one or more of these dependencies. So for example, we cannot at this time \
marginalize separately on specific gate or qubit dependencies, or over (say) \
X and Y errors separate from Z errors, even though these are reasonable \
models to consider. It would be straightforward to add this functionality, \
but we leave this to future work. \n\nThe variable ",
 Cell[BoxData[
  FormBox["model", TraditionalForm]],ExpressionUUID->
  "182bc481-1cf0-46b1-9833-67a8eee11539"],
 " is a string that is a subset of \[OpenCurlyDoubleQuote]GQP\
\[CloseCurlyDoubleQuote] in any order. WHen the model is maximal, nothing is \
marginalized over: ",
 Cell[BoxData[
  FormBox[
   RowBox[{"model", " ", "=", " ", "\"\<\>\""}], TraditionalForm]],
  ExpressionUUID->"676521e1-6a9b-4588-9709-4957ec654af0"],
 ". If \[OpenCurlyDoubleQuote]G\[CloseCurlyDoubleQuote] is present, then the \
type of gate is marginalized except for whether the gate is a 1-qubit, \
2-qubit, or measurement gate. If \[OpenCurlyDoubleQuote]Q\
\[CloseCurlyDoubleQuote] is present, then the qubit that the gate acts on is \
marginalized. If \[OpenCurlyDoubleQuote]P\[CloseCurlyDoubleQuote] is present, \
then the type of Pauli eigenvalue is marginalized (that is, we effectively \
assume local depolarizing noise on each gate). If no model is specified, we \
default to the maximal model. \n\nWe also allow specifying to marginalize \
just over the Pauli degree of freedom on the measurements only, \
\[OpenCurlyDoubleQuote]M\[CloseCurlyDoubleQuote]. This is useful if the \
measurement error doesn\[CloseCurlyQuote]t depend on the basis in which the \
measurement takes place. "
}], "Text",
 CellChangeTimes->{{3.828461243022615*^9, 3.8284612938410187`*^9}, {
  3.828461323983593*^9, 3.828461354139368*^9}, {3.828461443084167*^9, 
  3.828461518705072*^9}, {3.828657294026575*^9, 3.82865732496696*^9}, {
  3.8292255072339087`*^9, 
  3.829225546586788*^9}},ExpressionUUID->"3371b452-2d2d-486f-8b18-\
8637e4851ebc"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"GateVariables", "[", "n_Integer", "]"}], ":=", 
    RowBox[{"GateVariables", "[", 
     RowBox[{"n", ",", "\"\<\>\""}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"GateVariables", "[", 
     RowBox[{"n_Integer", ",", "model_String"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"m", "=", 
         RowBox[{"StringPartition", "[", 
          RowBox[{"model", ",", "1"}], "]"}]}], ",", 
        RowBox[{"a", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "1", "}"}], ",", 
           RowBox[{"{", "1", "}"}], ",", 
           RowBox[{"{", "1", "}"}]}], "}"}]}], ",", 
        RowBox[{"b", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"NumberofTwoQubitGates", "+", "1"}], "}"}], ",", 
           RowBox[{"{", "1", "}"}], ",", 
           RowBox[{"{", "1", "}"}]}], "}"}]}], ",", 
        RowBox[{"c", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "NumberOfOneQubitGates", "+", "NumberOfTwoQubitGates", "+", "1"}],
             "}"}], ",", 
           RowBox[{"{", "1", "}"}], ",", 
           RowBox[{"{", "1", "}"}]}], "}"}]}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"Not", "[", 
          RowBox[{"SubsetQ", "[", 
           RowBox[{"m", ",", 
            RowBox[{"{", "\"\<G\>\"", "}"}]}], "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{
           "a", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "=", 
           "AllTwoQubitGates"}], ";", " ", 
          RowBox[{
           RowBox[{
           "b", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "=", 
           "AllOneQubitGates"}], ";"}]}], "]"}], ";", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"Not", "[", 
          RowBox[{"SubsetQ", "[", 
           RowBox[{"m", ",", 
            RowBox[{"{", "\"\<Q\>\"", "}"}]}], "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{
           "a", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], "=", 
           RowBox[{"Range", "[", 
            RowBox[{"n", "-", "1"}], "]"}]}], ";", " ", 
          RowBox[{
           RowBox[{
           "b", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], "=", 
           RowBox[{"Range", "[", "n", "]"}]}], ";", " ", 
          RowBox[{
           RowBox[{
           "c", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], "=", 
           RowBox[{"Range", "[", "n", "]"}]}], ";"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"Not", "[", 
          RowBox[{"SubsetQ", "[", 
           RowBox[{"m", ",", 
            RowBox[{"{", "\"\<P\>\"", "}"}]}], "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{
           "a", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], "=", 
           RowBox[{"Range", "[", 
            RowBox[{
             SuperscriptBox["4", "2"], "-", "1"}], "]"}]}], ";", " ", 
          RowBox[{
           RowBox[{
           "b", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], "=", 
           RowBox[{"Range", "[", 
            RowBox[{
             SuperscriptBox["4", "1"], "-", "1"}], "]"}]}], ";"}]}], "]"}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"Not", "[", 
          RowBox[{"SubsetQ", "[", 
           RowBox[{"m", ",", 
            RowBox[{"{", "\"\<M\>\"", "}"}]}], "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{
           "c", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], "=", 
           RowBox[{"Range", "[", 
            RowBox[{
             SuperscriptBox["4", "1"], "-", "1"}], "]"}]}], ";"}]}], "]"}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"Tuples", "[", "a", "]"}], ",", 
          RowBox[{"Tuples", "[", "b", "]"}], ",", 
          RowBox[{"Tuples", "[", "c", "]"}]}], "]"}], "]"}], ";"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"GateVariables", "[", 
     RowBox[{"n_Integer", ",", "x_Symbol"}], "]"}], ":=", 
    RowBox[{"GateVariables", "[", 
     RowBox[{"n", ",", "x", ",", "\"\<\>\""}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"GateVariables", "[", 
    RowBox[{"n_Integer", ",", "x_Symbol", ",", "model_String"}], "]"}], ":=", 
   
   RowBox[{"Apply", "[", 
    RowBox[{"x", ",", 
     RowBox[{"GateVariables", "[", 
      RowBox[{"n", ",", "model"}], "]"}], ",", "1"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.8284612351381893`*^9, 3.82846123937704*^9}, {
   3.828461300860631*^9, 3.828461318305256*^9}, {3.8284616574545927`*^9, 
   3.828461707882412*^9}, {3.828462079172452*^9, 3.828462126755288*^9}, {
   3.8284638267355337`*^9, 3.8284638363850117`*^9}, {3.828464083823649*^9, 
   3.828464121639872*^9}, {3.8284642041852703`*^9, 3.828464207587625*^9}, {
   3.828465637788994*^9, 3.828465784306175*^9}, {3.828465960931581*^9, 
   3.828465961059772*^9}, {3.828466024238492*^9, 3.828466038760961*^9}, {
   3.828466087752748*^9, 3.828466105692869*^9}, {3.82846616453231*^9, 
   3.828466171833849*^9}, {3.828466946106806*^9, 3.828466983823051*^9}, {
   3.828468997429365*^9, 3.828469011404765*^9}, {3.828469080111685*^9, 
   3.8284691066909113`*^9}, {3.8284691946661453`*^9, 3.828469258851098*^9}, {
   3.828525358290825*^9, 3.8285253678236113`*^9}, 3.8285254602907753`*^9, 
   3.828609972421196*^9, {3.828610595129179*^9, 3.828610628138888*^9}, {
   3.8286134036197577`*^9, 3.828613530820499*^9}, {3.8286136925436573`*^9, 
   3.828613700391098*^9}, {3.828613740230754*^9, 3.8286137440521297`*^9}, 
   3.828613848814399*^9, {3.82861392841501*^9, 3.828613964851684*^9}, {
   3.8286140328519773`*^9, 3.8286140723059063`*^9}, {3.8286143446323977`*^9, 
   3.828614436192322*^9}, {3.828614513869533*^9, 3.828614546099519*^9}, {
   3.828614709906781*^9, 3.828614728867552*^9}, {3.828615098284732*^9, 
   3.828615104004774*^9}, {3.828615298711688*^9, 3.8286154028525963`*^9}, {
   3.828615822224635*^9, 3.828615837376486*^9}, {3.828616178741939*^9, 
   3.828616188475781*^9}, {3.828616727583272*^9, 3.828616761035081*^9}, {
   3.828616828177219*^9, 3.8286168704414*^9}, {3.828616986203861*^9, 
   3.828616995322028*^9}, {3.828617051236104*^9, 3.828617100316518*^9}, {
   3.8286173843343477`*^9, 3.828617389419799*^9}, {3.828618145786797*^9, 
   3.828618332864106*^9}, {3.828618371290667*^9, 3.828618454971704*^9}, {
   3.828618613806732*^9, 3.828618647268918*^9}, {3.82861869836644*^9, 
   3.828618781686646*^9}, {3.8286199569817877`*^9, 3.828620095919444*^9}, {
   3.828620217050102*^9, 3.8286202253468657`*^9}, {3.8288108061006317`*^9, 
   3.828810901510818*^9}, {3.828810932852992*^9, 3.828810967284004*^9}, {
   3.828810997449587*^9, 3.8288110283785753`*^9}, {3.8288111642073402`*^9, 
   3.8288111662932262`*^9}, {3.829225690303172*^9, 3.829225704022691*^9}, {
   3.829225870289197*^9, 3.829225880062772*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"97b0c15b-36aa-4d4b-84c0-3094cca51f2a"],

Cell[TextData[{
 "This takes the full matrix ",
 Cell[BoxData[
  FormBox["A", TraditionalForm]],ExpressionUUID->
  "1e2d3c92-78db-4fd6-89de-b50f22ed7cf7"],
 " and marginalizes it to one of the smaller models. "
}], "Text",
 CellChangeTimes->{{3.82862565389727*^9, 
  3.8286256717729483`*^9}},ExpressionUUID->"c46662e5-be1e-4e00-a006-\
f22483a79c10"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Pmarg", "[", 
    RowBox[{"{", 
     RowBox[{"i_Integer", ",", "j_Integer", ",", "k_Integer"}], "}"}], "]"}], 
   ":=", 
   RowBox[{"{", 
    RowBox[{"i", ",", "j", ",", "1"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Qmarg", "[", 
    RowBox[{"{", 
     RowBox[{"i_Integer", ",", "j_Integer", ",", "k_Integer"}], "}"}], "]"}], 
   ":=", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "k"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Mmarg", "[", 
    RowBox[{"{", 
     RowBox[{"i_Integer", ",", "j_Integer", ",", "k_Integer"}], "}"}], "]"}], 
   ":=", 
   RowBox[{"{", 
    RowBox[{"i", ",", "j", ",", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"i", ">", 
        RowBox[{"NumberOfOneQubitGates", "+", "NumberOfTwoQubitGates"}]}], 
       ",", "1", ",", "k"}], "]"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Gmarg", "[", 
     RowBox[{"{", 
      RowBox[{"i_Integer", ",", "j_Integer", ",", "k_Integer"}], "}"}], "]"}],
     ":=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Which", "[", 
       RowBox[{
        RowBox[{"i", "\[LessEqual]", "NumberOfTwoQubitGates"}], ",", "1", ",", 
        RowBox[{"i", "\[LessEqual]", 
         RowBox[{"NumberOfOneQubitGates", "+", "NumberOfTwoQubitGates"}]}], 
        ",", "2", ",", "True", ",", "3"}], "]"}], ",", "j", ",", "k"}], 
     "}"}]}], ";"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"MarginalizeA", "[", 
     RowBox[{
      RowBox[{"A_", "?", "MatrixQ"}], ",", "n_Integer", ",", "\"\<\>\""}], 
     "]"}], ":=", "A"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MarginalizeA", "[", 
    RowBox[{
     RowBox[{"A_", "?", "MatrixQ"}], ",", "n_Integer", ",", "model_String"}], 
    "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"row", ",", "col", ",", 
       RowBox[{"m", "=", 
        RowBox[{"StringPartition", "[", 
         RowBox[{"model", ",", "1"}], "]"}]}], ",", "pos"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"col", "=", 
       RowBox[{"GateVariables", "[", "n", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"SubsetQ", "[", 
         RowBox[{"m", ",", 
          RowBox[{"{", "\"\<Q\>\"", "}"}]}], "]"}], ",", 
        RowBox[{
         RowBox[{"col", "=", 
          RowBox[{"Qmarg", "/@", "col"}]}], ";"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"SubsetQ", "[", 
         RowBox[{"m", ",", 
          RowBox[{"{", "\"\<P\>\"", "}"}]}], "]"}], ",", 
        RowBox[{
         RowBox[{"col", "=", 
          RowBox[{"Pmarg", "/@", "col"}]}], ";"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"SubsetQ", "[", 
         RowBox[{"m", ",", 
          RowBox[{"{", "\"\<M\>\"", "}"}]}], "]"}], ",", 
        RowBox[{
         RowBox[{"col", "=", 
          RowBox[{"Mmarg", "/@", "col"}]}], ";"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"SubsetQ", "[", 
         RowBox[{"m", ",", 
          RowBox[{"{", "\"\<G\>\"", "}"}]}], "]"}], ",", 
        RowBox[{
         RowBox[{"col", "=", 
          RowBox[{"Gmarg", "/@", "col"}]}], ";"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"row", "=", 
       RowBox[{"Values", "[", 
        RowBox[{"PositionIndex", "[", "col", "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"col", "=", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Range", "[", 
          RowBox[{"Length", "[", "row", "]"}], "]"}], "}"}], 
        "\[Transpose]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"pos", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Tuples", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
              "row", "\[LeftDoubleBracket]", "k", "\[RightDoubleBracket]"}], 
              ",", 
              RowBox[{
              "col", "\[LeftDoubleBracket]", "k", "\[RightDoubleBracket]"}]}],
              "}"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"k", ",", 
             RowBox[{"Length", "[", "row", "]"}]}], "}"}]}], "]"}], ",", 
         "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"A", ".", 
        RowBox[{"SparseArray", "[", 
         RowBox[{"Thread", "[", 
          RowBox[{"pos", "\[Rule]", "1"}], "]"}], "]"}]}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.828616302878244*^9, 3.8286163520036993`*^9}, 
   3.828619091227213*^9, {3.828619700437339*^9, 3.8286197303318167`*^9}, {
   3.828620290515469*^9, 3.828620323612562*^9}, {3.82862152482373*^9, 
   3.828621544245996*^9}, {3.828621928422014*^9, 3.828621964812954*^9}, {
   3.828622019756546*^9, 3.828622044239258*^9}, {3.828623235537446*^9, 
   3.8286232503612337`*^9}, {3.828623302706071*^9, 3.828623398531391*^9}, {
   3.8286234538521852`*^9, 3.828623475724324*^9}, {3.828623535766038*^9, 
   3.828623537501101*^9}, {3.828623623454307*^9, 3.828623711510504*^9}, {
   3.828623963944387*^9, 3.828623999224663*^9}, {3.828624064347466*^9, 
   3.828624066667398*^9}, {3.82862418539097*^9, 3.828624235063293*^9}, {
   3.828624472720305*^9, 3.8286244738530617`*^9}, {3.8286247071737413`*^9, 
   3.828624709757285*^9}, {3.82862513440478*^9, 3.828625144877056*^9}, {
   3.828625386009351*^9, 3.8286254693847427`*^9}, 3.828625544116384*^9, {
   3.828625591901126*^9, 3.828625594188381*^9}, {3.828809910038686*^9, 
   3.8288099152113047`*^9}, {3.828809946564399*^9, 3.828809994221616*^9}, {
   3.828961544007079*^9, 3.828961563563586*^9}, {3.828961684179887*^9, 
   3.828961687075843*^9}, {3.828961779962124*^9, 3.828961782362712*^9}, {
   3.828961876901053*^9, 3.828961883273511*^9}, 3.8289619451315203`*^9, {
   3.828962274600423*^9, 3.8289623326158943`*^9}, {3.828983931303246*^9, 
   3.828983970814684*^9}, {3.828984041528639*^9, 3.8289840894811563`*^9}, {
   3.8289841253949127`*^9, 3.828984126897448*^9}, {3.82898417276653*^9, 
   3.8289842676969633`*^9}, {3.828984427499514*^9, 3.8289844992564573`*^9}, {
   3.8289845367476377`*^9, 3.828984539127853*^9}, {3.8292253608552237`*^9, 
   3.829225363196074*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"1226bef0-0376-4df3-a64f-9d0033c889d5"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Generating random circuits", "Subsection",
 CellChangeTimes->{{3.827444013517852*^9, 3.827444024407633*^9}, {
  3.8274897302604513`*^9, 3.827489731467922*^9}, {3.827876341961104*^9, 
  3.827876348341278*^9}},ExpressionUUID->"4b9ce8ca-f72f-4615-a453-\
b4253fcb5529"],

Cell[TextData[{
 "In the gate set that we are considering, there are ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"51", "n"}], "-", "30"}], TraditionalForm]],ExpressionUUID->
  "fe31dc4e-d9f4-4dba-9122-d46ab59b75ab"],
 " different variables in the model. We need to pick enough Paulis to send \
through enough circuits so that we have at least this many equations. Note \
that we want to preferentially look at low-weight Paulis since these \
typically require fewer samples to resolve. To keep things as simple as \
possible, we will only look at ",
 Cell[BoxData[
  FormBox["k", TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "7cd6219e-8685-4245-8b5f-fce60025ab5e"],
 " nearest neighbors at the input, and we use ",
 Cell[BoxData[
  FormBox[
   RowBox[{"k", "=", "1"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "aff702dc-5208-4453-a6e8-b8e04fc91921"],
 " or ",
 Cell[BoxData[
  FormBox["2", TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "ad7e3f2d-5baa-43fd-8444-4861cf101134"],
 ". Instead of using exact mirror circuits, we add a small random layer of \
depth ",
 Cell[BoxData[
  FormBox["r", TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "f72c14c1-4578-4ffa-aeee-d14c31229b20"],
 " to a perfect mirror circuit, and we use ",
 Cell[BoxData[
  FormBox[
   RowBox[{"r", "\[LessEqual]", "5"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "9afdd9fe-6544-437e-98b1-8f008ace1174"],
 ". This means that each Pauli channel eigenvalue that we estimate will have \
weight at most ",
 Cell[BoxData[
  FormBox[
   RowBox[{"k", "+", "r", "+", "1"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "cc1f8673-ac20-4842-ad1b-6f1bed2a66f1"],
 ". \n\nHere is the procedure we used to generate some random circuits. \n\n\
With the constraints on ",
 Cell[BoxData[
  FormBox["k", TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "81a0bb5f-b9dc-42ce-a8d8-d64f6b3ad7a3"],
 " and ",
 Cell[BoxData[
  FormBox["r", TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "6073f37a-1fa9-4a02-82d1-28f94babc303"],
 " above, we sample random circuits of varying depths until the design matrix \
",
 Cell[BoxData[
  FormBox["A", TraditionalForm]],ExpressionUUID->
  "e4cc9501-7cba-474c-afb3-6f9c579595eb"],
 " is full rank. Since each random circuit adds ",
 Cell[BoxData[
  FormBox[
   RowBox[{"O", "(", "n", ")"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "0ce5dde8-7a71-4027-94d1-bd85d0205523"],
 " rows to ",
 Cell[BoxData[
  FormBox["A", TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "233a6314-69b1-4631-b1e9-02b154f116a2"],
 " and ",
 Cell[BoxData[
  FormBox["A", TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "a13799dc-0b22-41c7-88b9-e1b927d1db38"],
 " has only ",
 Cell[BoxData[
  FormBox[
   RowBox[{"O", "(", "n", ")"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "41f3afa2-fd39-4b1b-a5d0-ad8ae7862b90"],
 " columns, we expect that we only need ",
 Cell[BoxData[
  FormBox[
   RowBox[{"O", "(", "1", ")"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "4d3730cf-c35c-43a2-8df6-46e64c10fcf7"],
 " random circuits before the rank saturates. We pick a series of depths by \
hand, starting with a few very low-depth circuits, and then adding depth \
according to the Fibonacci series. We try to keep the maximum depth not much \
larger than ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "5ef88611-7467-4e53-8f74-ff191ba763c0"],
 ". After trying 100 times, we change the parameters a little and try again. \
The circuits are stacked into a matrix ",
 Cell[BoxData[
  FormBox["M", TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "31138209-fddf-4d6d-a9e2-2a56288521fd"],
 " that has measurement layers built into it. Together with the list of which \
circuits have which Pauli locality ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"k", "=", "1"}]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "9309a07d-e674-4900-a7bd-f9958b5343e1"],
 " or ",
 Cell[BoxData[
  FormBox[
   RowBox[{"k", "=", "2"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "7f0bc301-3e37-43ff-9521-4a0d799751cc"],
 " for each circuit, stored in the variable ",
 Cell[BoxData[
  FormBox["kk", TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "c63262cb-5d9f-4f6b-bb6e-a6663076c99f"],
 "), this is enough to reproduce the calculation. We store ",
 Cell[BoxData[
  FormBox["A", TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "57e31bd2-c3b2-4d07-9418-f141d08ca48d"],
 " and ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "5c81be19-f7f9-4a3d-b437-b724d145f437"],
 " too for ease of use. The example below is for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", "10"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "a9d9df07-9a37-4963-8621-abd2e63977f0"],
 ".\n\nThis is all done by hand, so obviously there is room for improvement! \
"
}], "Text",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQA2IQ3fLntkNqyxvHuXITnEF0y7zn3iB68kf+IBAdu3nK
VRD9xrDwDohW9+XLzQTSDx8oF4HosIxEtXwgPUv0siGItil/aw6ireyyLUH0
xvhcZxCt0WzuAaIZWOK/gegCnxu/QbT2T0NvidY3jkpqpmD6W4xWEIjmcNcB
0/nhh8NB9N8Ntskg+p59bBaIfmd2JwdEe1ytvgeit1gz3QfRAbP5vKe3vXFM
65rqA6KVUheEgeiFejbhIFrhkILiyvY3jqv6P5iA6LocR3sQvfxmcTCIvrU1
vglE7zmxuQ1ESy1ZsWI1kP66O2IriJ5w7t0uEJ1Q/HIviJaQ2MqzFkinfGOQ
AtESChf51gFpFzFLARANAIEQr38=
  
  "],ExpressionUUID->"10d0ecbf-5f2c-48f1-95b4-08d12bf51076"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "10"}], ";", 
  RowBox[{"r", "=", "4"}], ";", 
  RowBox[{"j", "=", "0"}], ";", 
  RowBox[{"m", "=", 
   RowBox[{"Length", "[", 
    RowBox[{"GateVariables", "[", "n", "]"}], "]"}]}], ";", 
  RowBox[{"rank", "=", "0"}], ";", 
  RowBox[{"jmax", "=", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"While", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"rank", "\[NotEqual]", "m"}], "\[And]", 
     RowBox[{"j", "<", "jmax"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"j", "++"}], ";", 
     RowBox[{"A", "=", 
      RowBox[{"{", "}"}]}], ";", 
     RowBox[{"M", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"dd", "=", 
      RowBox[{"{", 
       RowBox[{
       "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "3", ",", "5", ",", 
        "8", ",", "13", ",", "21"}], "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"kk", "=", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{"1", ",", 
        RowBox[{"Length", "[", "dd", "]"}]}], "]"}]}], ";", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"kk", "\[LeftDoubleBracket]", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], 
       "\[RightDoubleBracket]"}], "=", "2"}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"d", "=", "1"}], ",", 
       RowBox[{"d", "\[LessEqual]", 
        RowBox[{"Length", "[", "dd", "]"}]}], ",", 
       RowBox[{"d", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"c", "=", 
         RowBox[{"RandomMirrorCircuit", "[", 
          RowBox[{"n", ",", 
           RowBox[{
           "dd", "\[LeftDoubleBracket]", "d", "\[RightDoubleBracket]"}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"c2", "=", 
         RowBox[{"RandomCircuit2", "[", 
          RowBox[{"n", ",", "r"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"c", "=", 
         RowBox[{"Join", "[", 
          RowBox[{"c", ",", "c2"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"p", "=", 
         RowBox[{"PauliHistory", "[", "c", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"cm", "=", 
         RowBox[{"Join", "[", 
          RowBox[{"c", ",", 
           RowBox[{"{", 
            RowBox[{"ConstantArray", "[", 
             RowBox[{
              RowBox[{
              "NumberOfOneQubitGates", "+", "NumberOfTwoQubitGates", "+", 
               "1"}], ",", "n"}], "]"}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"cpp", "=", 
         RowBox[{"CircuitPauliPartition", "[", 
          RowBox[{"cm", ",", "p", ",", "n"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"P", "=", 
         RowBox[{"KNNPaulis", "[", 
          RowBox[{"n", ",", 
           RowBox[{
           "kk", "\[LeftDoubleBracket]", "d", "\[RightDoubleBracket]"}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"AA", "=", 
         RowBox[{"Amat", "[", 
          RowBox[{"cm", ",", "cpp", ",", "P"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"A", "=", 
         RowBox[{"Join", "[", 
          RowBox[{"A", ",", "AA"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"M", "=", 
         RowBox[{"Join", "[", 
          RowBox[{"M", ",", "cm"}], "]"}]}], ";"}]}], "\[IndentingNewLine]", 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"rank", "=", 
      RowBox[{"MatrixRank", "[", 
       RowBox[{"N", "[", "A", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{
      "\"\<On try j = \>\"", ",", "j", ",", "\"\<, the rank ratio is = \>\"", 
       ",", "rank", ",", "\"\</\>\"", ",", "m", ",", "\"\<.\>\""}], "]"}], 
     ";"}]}], "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"rank", "\[Equal]", "m"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
     "Print", "[", 
      "\"\<\\n----------------\\n  \[Wolf] Success! \
\[Wolf]\\n----------------\>\"", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{
      "\"\<For n = \>\"", ",", "n", ",", 
       "\"\<, the depths and input Pauli weights are:\\n\>\"", ",", 
       RowBox[{"TableForm", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"kk", ",", "dd"}], "}"}], ",", 
         RowBox[{"TableHeadings", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\"\<k\>\"", ",", "\"\<d\>\""}], "}"}], ",", " ", 
            "None"}], "}"}]}]}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<Total number of circuits = \>\"", ",", 
       RowBox[{"Length", "[", "dd", "]"}], ",", 
       "\"\<\\nAdd random layer of depth r = \>\"", ",", "r", ",", 
       "\"\<\\nTotal circuit length = \>\"", ",", 
       RowBox[{"Total", "[", 
        RowBox[{"dd", "+", "r"}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"Print", "[", 
      RowBox[{"\"\<Total number of estimated fidelities = \>\"", ",", 
       RowBox[{
        RowBox[{"Dimensions", "[", "A", "]"}], "\[LeftDoubleBracket]", "1", 
        "\[RightDoubleBracket]"}]}], "]"}], ";"}], ",", "\[IndentingNewLine]", 
    RowBox[{
    "Print", "[", 
     "\"\<\\n----------------\\n  \[SadSmiley] Failure. \
\[SadSmiley]\\n----------------\\nTry again with different parameters.\>\"", 
     "]"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.828188112899891*^9, 3.8281881558117037`*^9}, 
   3.828188190208415*^9, {3.8281889231048203`*^9, 3.828189194242886*^9}, {
   3.8281892983194847`*^9, 3.828189304286641*^9}, {3.8281893516106377`*^9, 
   3.828189439786475*^9}, {3.828189494328786*^9, 3.828189505353229*^9}, {
   3.828189584483179*^9, 3.8281896720998077`*^9}, {3.828189773115487*^9, 
   3.828189827309793*^9}, {3.828190940711197*^9, 3.8281909878671713`*^9}, {
   3.8281910799012623`*^9, 3.8281910805769453`*^9}, {3.828193864241247*^9, 
   3.82819387073345*^9}, 3.82819398521727*^9, {3.8281960786943407`*^9, 
   3.828196124398979*^9}, {3.828204723669692*^9, 3.828204752079369*^9}, {
   3.828204851656971*^9, 3.828204908218157*^9}, {3.828205041883387*^9, 
   3.828205136118497*^9}, {3.828440408776731*^9, 3.82844041667327*^9}, {
   3.8284404764898577`*^9, 3.8284404768298817`*^9}, {3.828440515152882*^9, 
   3.828440544234459*^9}, {3.828440605769684*^9, 3.828440627126047*^9}, {
   3.828440709855651*^9, 3.82844071674094*^9}, {3.82844188361335*^9, 
   3.828441891699648*^9}, {3.8284420533757467`*^9, 3.828442082759297*^9}, {
   3.828442133977626*^9, 3.828442160697871*^9}, 3.828442244885262*^9, {
   3.8284424025990667`*^9, 3.8284424031274147`*^9}, {3.82844244821173*^9, 
   3.828442451582081*^9}, {3.828442503274069*^9, 3.828442520547173*^9}, {
   3.828442612913375*^9, 3.828442628508957*^9}, {3.828442739763081*^9, 
   3.82844279025766*^9}, {3.828443041880418*^9, 3.8284430427109337`*^9}, {
   3.828445023796158*^9, 3.828445040675376*^9}, {3.828449268834402*^9, 
   3.828449307814035*^9}, {3.828449339365378*^9, 3.828449346533255*^9}, {
   3.828462173239447*^9, 3.828462270651969*^9}, {3.828462301068779*^9, 
   3.828462301169087*^9}, {3.8284625327213793`*^9, 3.828462568604056*^9}, {
   3.82846263104988*^9, 3.8284626343283873`*^9}, {3.828463581030726*^9, 
   3.828463583068616*^9}, {3.828627155785262*^9, 3.828627175415481*^9}, {
   3.828707298350935*^9, 3.828707305261716*^9}, {3.828707383843793*^9, 
   3.8287073892854557`*^9}, {3.828707470838168*^9, 3.8287075002452793`*^9}, {
   3.828707678601808*^9, 3.8287076912640533`*^9}, 3.82870779984369*^9, {
   3.828708007698271*^9, 3.828708036810397*^9}, {3.8287080749054203`*^9, 
   3.828708247355994*^9}, {3.8287083099951487`*^9, 3.8287083311182747`*^9}, {
   3.8287083792321873`*^9, 3.828708420862739*^9}, {3.828708455763446*^9, 
   3.828708456066642*^9}, {3.828708535033535*^9, 3.828708535211483*^9}, {
   3.828708566216419*^9, 3.828708580048574*^9}, {3.828708627956304*^9, 
   3.828708628392268*^9}, {3.828708750373349*^9, 3.828708750803281*^9}, {
   3.828709746677042*^9, 3.828709746902215*^9}, {3.828709808788556*^9, 
   3.828710184423547*^9}, {3.828710218231709*^9, 3.8287103528152*^9}, {
   3.828710462474737*^9, 3.828710463877862*^9}, {3.828711838668393*^9, 
   3.828711854866035*^9}, {3.828712148033437*^9, 3.828712148099495*^9}, {
   3.828712187673456*^9, 3.828712187833847*^9}, {3.828712265619631*^9, 
   3.828712267127933*^9}, {3.828712341069551*^9, 3.828712341159045*^9}, {
   3.828712373762521*^9, 3.828712438664266*^9}, {3.8287124872901163`*^9, 
   3.8287125097791853`*^9}, {3.828712627359428*^9, 3.8287127594164248`*^9}, 
   3.8287127896914997`*^9, {3.828712870640636*^9, 3.8287131644386797`*^9}, {
   3.8287132020983677`*^9, 3.828713231686623*^9}, {3.82871363324083*^9, 
   3.828713647210223*^9}, {3.8287137739701977`*^9, 3.828713813903982*^9}, {
   3.8287138538660192`*^9, 3.82871387552862*^9}, {3.828713947944018*^9, 
   3.828713951400484*^9}, {3.828714021368257*^9, 3.82871402445682*^9}, {
   3.828714108765563*^9, 3.828714134057144*^9}, {3.828714710183165*^9, 
   3.828714710234026*^9}, {3.828714772580497*^9, 3.828714808852911*^9}, {
   3.8287148463905897`*^9, 3.828714847760285*^9}, 3.828716013977571*^9, {
   3.8287161766724663`*^9, 3.828716176791819*^9}, {3.828738134051537*^9, 
   3.828738134575941*^9}, {3.828738186919697*^9, 3.828738188525733*^9}, {
   3.828738692805109*^9, 3.828738692902823*^9}, {3.828738940545027*^9, 
   3.828738993233099*^9}, {3.828739038801857*^9, 3.8287390479104023`*^9}, {
   3.828739079499227*^9, 3.8287391182474213`*^9}, {3.8287854006055593`*^9, 
   3.828785440596703*^9}, {3.828791498078024*^9, 3.8287915110327663`*^9}, {
   3.8287919120479317`*^9, 3.828791912154647*^9}, {3.828791946061596*^9, 
   3.828791970817553*^9}, {3.828792001300118*^9, 3.828792089243197*^9}, {
   3.8287922353057423`*^9, 3.828792236694632*^9}, {3.8287924206746283`*^9, 
   3.828792428295233*^9}, {3.828792517792067*^9, 3.828792620788993*^9}, {
   3.828792672990437*^9, 3.828792707609764*^9}, {3.82879275107176*^9, 
   3.828792846293084*^9}, {3.828792893618088*^9, 3.828792967793956*^9}, {
   3.82879301343797*^9, 3.828793042618113*^9}, {3.828793081823503*^9, 
   3.828793110140177*^9}, {3.8287932372086687`*^9, 3.828793259002637*^9}, 
   3.828796185639049*^9, {3.829171713087441*^9, 3.8291717153643837`*^9}, {
   3.829172837917843*^9, 3.829172879654038*^9}, {3.829216795512862*^9, 
   3.829216832550213*^9}, {3.829216912426063*^9, 3.829216965594078*^9}, {
   3.829216999870516*^9, 3.829217023877276*^9}, {3.829217054948454*^9, 
   3.829217057121635*^9}, 3.829217093874237*^9, {3.829217369634198*^9, 
   3.829217369746603*^9}, 3.8292174834280033`*^9, 3.8292175219737864`*^9, {
   3.829217556291115*^9, 3.8292175563935013`*^9}, {3.829217607562622*^9, 
   3.8292176076248503`*^9}, {3.8292176547142353`*^9, 3.82921778653339*^9}, {
   3.829221084412293*^9, 3.8292210914936113`*^9}, {3.8292219739211617`*^9, 
   3.8292219784558487`*^9}, {3.829226217494429*^9, 3.829226261285627*^9}, {
   3.829226958253067*^9, 3.829226961794711*^9}, {3.829227043532844*^9, 
   3.82922705906907*^9}, 3.829227360525186*^9, {3.829227397078299*^9, 
   3.829227491346875*^9}, {3.82922755602631*^9, 3.829227621219945*^9}, {
   3.829227664643029*^9, 3.82922774914783*^9}, {3.8292278629515953`*^9, 
   3.82922788929041*^9}, {3.82922797404601*^9, 3.829227974933859*^9}, {
   3.829228009458724*^9, 3.8292280126194*^9}, {3.829229492348634*^9, 
   3.829229501165955*^9}, {3.829229876559678*^9, 3.829229884629161*^9}, {
   3.829229921051057*^9, 3.829229942891982*^9}, {3.8292303815312357`*^9, 
   3.829230383059649*^9}, {3.82923042183042*^9, 3.8292304273987293`*^9}, {
   3.829230665027753*^9, 
   3.829230755945901*^9}},ExpressionUUID->"73493cbf-78a9-4568-bb03-\
b9ecb4dc3e56"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"On try j = \"\>", "\[InvisibleSpace]", "1", 
   "\[InvisibleSpace]", "\<\", the rank ratio is = \"\>", "\[InvisibleSpace]",
    "472", "\[InvisibleSpace]", "\<\"/\"\>", "\[InvisibleSpace]", "480", 
   "\[InvisibleSpace]", "\<\".\"\>"}],
  SequenceForm["On try j = ", 1, ", the rank ratio is = ", 472, "/", 480, "."],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8292168464639606`*^9, 3.829216916132842*^9, {3.829216950281518*^9, 
   3.829216966539054*^9}, 3.829217024562076*^9, 3.8292170606521187`*^9, 
   3.829217094554776*^9, 3.829217371537343*^9, 3.829217484924749*^9, 
   3.8292175249262543`*^9, {3.8292175576005087`*^9, 3.8292175721463747`*^9}, 
   3.8292176095774603`*^9, 3.829217745226111*^9, 3.829217789118548*^9, 
   3.8292210519860086`*^9, 3.82922109293924*^9, 3.8292274615774393`*^9, 
   3.829227495752606*^9, 3.829227535465136*^9, {3.82922770990172*^9, 
   3.829227752951272*^9}, {3.829227877567026*^9, 3.829227898251088*^9}, 
   3.82922798457596*^9, 3.8292295127333927`*^9, 3.829229892342325*^9, {
   3.829229932780497*^9, 3.8292299459800243`*^9}, {3.829230644308365*^9, 
   3.829230667781952*^9}, {3.82923070995128*^9, 3.829230739503893*^9}},
 CellLabel->
  "During evaluation of \
In[197]:=",ExpressionUUID->"ffd6db5e-fde9-441b-88d5-22adece9310a"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"On try j = \"\>", "\[InvisibleSpace]", "2", 
   "\[InvisibleSpace]", "\<\", the rank ratio is = \"\>", "\[InvisibleSpace]",
    "477", "\[InvisibleSpace]", "\<\"/\"\>", "\[InvisibleSpace]", "480", 
   "\[InvisibleSpace]", "\<\".\"\>"}],
  SequenceForm["On try j = ", 2, ", the rank ratio is = ", 477, "/", 480, "."],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8292168464639606`*^9, 3.829216916132842*^9, {3.829216950281518*^9, 
   3.829216966539054*^9}, 3.829217024562076*^9, 3.8292170606521187`*^9, 
   3.829217094554776*^9, 3.829217371537343*^9, 3.829217484924749*^9, 
   3.8292175249262543`*^9, {3.8292175576005087`*^9, 3.8292175721463747`*^9}, 
   3.8292176095774603`*^9, 3.829217745226111*^9, 3.829217789118548*^9, 
   3.8292210519860086`*^9, 3.82922109293924*^9, 3.8292274615774393`*^9, 
   3.829227495752606*^9, 3.829227535465136*^9, {3.82922770990172*^9, 
   3.829227752951272*^9}, {3.829227877567026*^9, 3.829227898251088*^9}, 
   3.82922798457596*^9, 3.8292295127333927`*^9, 3.829229892342325*^9, {
   3.829229932780497*^9, 3.8292299459800243`*^9}, {3.829230644308365*^9, 
   3.829230667781952*^9}, {3.82923070995128*^9, 3.829230739588518*^9}},
 CellLabel->
  "During evaluation of \
In[197]:=",ExpressionUUID->"1357c9d4-ddd9-4b60-adf8-65b38b7b1529"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"On try j = \"\>", "\[InvisibleSpace]", "3", 
   "\[InvisibleSpace]", "\<\", the rank ratio is = \"\>", "\[InvisibleSpace]",
    "460", "\[InvisibleSpace]", "\<\"/\"\>", "\[InvisibleSpace]", "480", 
   "\[InvisibleSpace]", "\<\".\"\>"}],
  SequenceForm["On try j = ", 3, ", the rank ratio is = ", 460, "/", 480, "."],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8292168464639606`*^9, 3.829216916132842*^9, {3.829216950281518*^9, 
   3.829216966539054*^9}, 3.829217024562076*^9, 3.8292170606521187`*^9, 
   3.829217094554776*^9, 3.829217371537343*^9, 3.829217484924749*^9, 
   3.8292175249262543`*^9, {3.8292175576005087`*^9, 3.8292175721463747`*^9}, 
   3.8292176095774603`*^9, 3.829217745226111*^9, 3.829217789118548*^9, 
   3.8292210519860086`*^9, 3.82922109293924*^9, 3.8292274615774393`*^9, 
   3.829227495752606*^9, 3.829227535465136*^9, {3.82922770990172*^9, 
   3.829227752951272*^9}, {3.829227877567026*^9, 3.829227898251088*^9}, 
   3.82922798457596*^9, 3.8292295127333927`*^9, 3.829229892342325*^9, {
   3.829229932780497*^9, 3.8292299459800243`*^9}, {3.829230644308365*^9, 
   3.829230667781952*^9}, {3.82923070995128*^9, 3.829230739671736*^9}},
 CellLabel->
  "During evaluation of \
In[197]:=",ExpressionUUID->"79b1e9ba-fa57-4e7c-856d-58d17611a5b5"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"On try j = \"\>", "\[InvisibleSpace]", "4", 
   "\[InvisibleSpace]", "\<\", the rank ratio is = \"\>", "\[InvisibleSpace]",
    "475", "\[InvisibleSpace]", "\<\"/\"\>", "\[InvisibleSpace]", "480", 
   "\[InvisibleSpace]", "\<\".\"\>"}],
  SequenceForm["On try j = ", 4, ", the rank ratio is = ", 475, "/", 480, "."],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8292168464639606`*^9, 3.829216916132842*^9, {3.829216950281518*^9, 
   3.829216966539054*^9}, 3.829217024562076*^9, 3.8292170606521187`*^9, 
   3.829217094554776*^9, 3.829217371537343*^9, 3.829217484924749*^9, 
   3.8292175249262543`*^9, {3.8292175576005087`*^9, 3.8292175721463747`*^9}, 
   3.8292176095774603`*^9, 3.829217745226111*^9, 3.829217789118548*^9, 
   3.8292210519860086`*^9, 3.82922109293924*^9, 3.8292274615774393`*^9, 
   3.829227495752606*^9, 3.829227535465136*^9, {3.82922770990172*^9, 
   3.829227752951272*^9}, {3.829227877567026*^9, 3.829227898251088*^9}, 
   3.82922798457596*^9, 3.8292295127333927`*^9, 3.829229892342325*^9, {
   3.829229932780497*^9, 3.8292299459800243`*^9}, {3.829230644308365*^9, 
   3.829230667781952*^9}, {3.82923070995128*^9, 3.82923073977501*^9}},
 CellLabel->
  "During evaluation of \
In[197]:=",ExpressionUUID->"d674d284-88c7-4894-a8b3-24f3f0c0c2ca"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"On try j = \"\>", "\[InvisibleSpace]", "5", 
   "\[InvisibleSpace]", "\<\", the rank ratio is = \"\>", "\[InvisibleSpace]",
    "430", "\[InvisibleSpace]", "\<\"/\"\>", "\[InvisibleSpace]", "480", 
   "\[InvisibleSpace]", "\<\".\"\>"}],
  SequenceForm["On try j = ", 5, ", the rank ratio is = ", 430, "/", 480, "."],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8292168464639606`*^9, 3.829216916132842*^9, {3.829216950281518*^9, 
   3.829216966539054*^9}, 3.829217024562076*^9, 3.8292170606521187`*^9, 
   3.829217094554776*^9, 3.829217371537343*^9, 3.829217484924749*^9, 
   3.8292175249262543`*^9, {3.8292175576005087`*^9, 3.8292175721463747`*^9}, 
   3.8292176095774603`*^9, 3.829217745226111*^9, 3.829217789118548*^9, 
   3.8292210519860086`*^9, 3.82922109293924*^9, 3.8292274615774393`*^9, 
   3.829227495752606*^9, 3.829227535465136*^9, {3.82922770990172*^9, 
   3.829227752951272*^9}, {3.829227877567026*^9, 3.829227898251088*^9}, 
   3.82922798457596*^9, 3.8292295127333927`*^9, 3.829229892342325*^9, {
   3.829229932780497*^9, 3.8292299459800243`*^9}, {3.829230644308365*^9, 
   3.829230667781952*^9}, {3.82923070995128*^9, 3.8292307398734207`*^9}},
 CellLabel->
  "During evaluation of \
In[197]:=",ExpressionUUID->"42e2981e-5834-4f9e-8c1b-9d067e1e0422"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"On try j = \"\>", "\[InvisibleSpace]", "6", 
   "\[InvisibleSpace]", "\<\", the rank ratio is = \"\>", "\[InvisibleSpace]",
    "420", "\[InvisibleSpace]", "\<\"/\"\>", "\[InvisibleSpace]", "480", 
   "\[InvisibleSpace]", "\<\".\"\>"}],
  SequenceForm["On try j = ", 6, ", the rank ratio is = ", 420, "/", 480, "."],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8292168464639606`*^9, 3.829216916132842*^9, {3.829216950281518*^9, 
   3.829216966539054*^9}, 3.829217024562076*^9, 3.8292170606521187`*^9, 
   3.829217094554776*^9, 3.829217371537343*^9, 3.829217484924749*^9, 
   3.8292175249262543`*^9, {3.8292175576005087`*^9, 3.8292175721463747`*^9}, 
   3.8292176095774603`*^9, 3.829217745226111*^9, 3.829217789118548*^9, 
   3.8292210519860086`*^9, 3.82922109293924*^9, 3.8292274615774393`*^9, 
   3.829227495752606*^9, 3.829227535465136*^9, {3.82922770990172*^9, 
   3.829227752951272*^9}, {3.829227877567026*^9, 3.829227898251088*^9}, 
   3.82922798457596*^9, 3.8292295127333927`*^9, 3.829229892342325*^9, {
   3.829229932780497*^9, 3.8292299459800243`*^9}, {3.829230644308365*^9, 
   3.829230667781952*^9}, 3.82923070995128*^9, 3.829230739971052*^9},
 CellLabel->
  "During evaluation of \
In[197]:=",ExpressionUUID->"2669df78-9f66-463d-baca-e16596f6a7ca"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"On try j = \"\>", "\[InvisibleSpace]", "7", 
   "\[InvisibleSpace]", "\<\", the rank ratio is = \"\>", "\[InvisibleSpace]",
    "480", "\[InvisibleSpace]", "\<\"/\"\>", "\[InvisibleSpace]", "480", 
   "\[InvisibleSpace]", "\<\".\"\>"}],
  SequenceForm["On try j = ", 7, ", the rank ratio is = ", 480, "/", 480, "."],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8292168464639606`*^9, 3.829216916132842*^9, {3.829216950281518*^9, 
   3.829216966539054*^9}, 3.829217024562076*^9, 3.8292170606521187`*^9, 
   3.829217094554776*^9, 3.829217371537343*^9, 3.829217484924749*^9, 
   3.8292175249262543`*^9, {3.8292175576005087`*^9, 3.8292175721463747`*^9}, 
   3.8292176095774603`*^9, 3.829217745226111*^9, 3.829217789118548*^9, 
   3.8292210519860086`*^9, 3.82922109293924*^9, 3.8292274615774393`*^9, 
   3.829227495752606*^9, 3.829227535465136*^9, {3.82922770990172*^9, 
   3.829227752951272*^9}, {3.829227877567026*^9, 3.829227898251088*^9}, 
   3.82922798457596*^9, 3.8292295127333927`*^9, 3.829229892342325*^9, {
   3.829229932780497*^9, 3.8292299459800243`*^9}, {3.829230644308365*^9, 
   3.829230667781952*^9}, 3.82923070995128*^9, 3.829230740048366*^9},
 CellLabel->
  "During evaluation of \
In[197]:=",ExpressionUUID->"83297c1d-0207-44b5-8abf-1709cf0599bd"],

Cell[BoxData["\<\"\\n----------------\\n  \[Wolf] Success! \
\[Wolf]\\n----------------\"\>"], "Print",
 CellChangeTimes->{
  3.8292168464639606`*^9, 3.829216916132842*^9, {3.829216950281518*^9, 
   3.829216966539054*^9}, 3.829217024562076*^9, 3.8292170606521187`*^9, 
   3.829217094554776*^9, 3.829217371537343*^9, 3.829217484924749*^9, 
   3.8292175249262543`*^9, {3.8292175576005087`*^9, 3.8292175721463747`*^9}, 
   3.8292176095774603`*^9, 3.829217745226111*^9, 3.829217789118548*^9, 
   3.8292210519860086`*^9, 3.82922109293924*^9, 3.8292274615774393`*^9, 
   3.829227495752606*^9, 3.829227535465136*^9, {3.82922770990172*^9, 
   3.829227752951272*^9}, {3.829227877567026*^9, 3.829227898251088*^9}, 
   3.82922798457596*^9, 3.8292295127333927`*^9, 3.829229892342325*^9, {
   3.829229932780497*^9, 3.8292299459800243`*^9}, {3.829230644308365*^9, 
   3.829230667781952*^9}, 3.82923070995128*^9, 3.829230740049541*^9},
 CellLabel->
  "During evaluation of \
In[197]:=",ExpressionUUID->"4234c35b-b60a-4fc5-9bd8-ba1701fbbefb"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"For n = \"\>", "\[InvisibleSpace]", "10", 
   "\[InvisibleSpace]", "\<\", the depths and input Pauli weights \
are:\\n\"\>", "\[InvisibleSpace]", 
   TagBox[
    TagBox[GridBox[{
       {
        TagBox["\<\"k\"\>",
         HoldForm], "2", "2", "2", "2", "1", "1", "1", "1", "1", "1"},
       {
        TagBox["\<\"d\"\>",
         HoldForm], "2", "2", "2", "2", "2", "3", "5", "8", "13", "21"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxDividers->{
       "Columns" -> {False, True, {False}, False}, "Rows" -> {{False}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[2.0999999999999996`]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}],
     {OutputFormsDump`HeadedRows, None}],
    Function[BoxForm`e$, 
     TableForm[BoxForm`e$, TableHeadings -> {{"k", "d"}, None}]]]}],
  SequenceForm[
  "For n = ", 10, ", the depths and input Pauli weights are:\n", 
   TableForm[{{2, 2, 2, 2, 1, 1, 1, 1, 1, 1}, {2, 2, 2, 2, 2, 3, 5, 8, 13, 
    21}}, TableHeadings -> {{"k", "d"}, None}]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8292168464639606`*^9, 3.829216916132842*^9, {3.829216950281518*^9, 
   3.829216966539054*^9}, 3.829217024562076*^9, 3.8292170606521187`*^9, 
   3.829217094554776*^9, 3.829217371537343*^9, 3.829217484924749*^9, 
   3.8292175249262543`*^9, {3.8292175576005087`*^9, 3.8292175721463747`*^9}, 
   3.8292176095774603`*^9, 3.829217745226111*^9, 3.829217789118548*^9, 
   3.8292210519860086`*^9, 3.82922109293924*^9, 3.8292274615774393`*^9, 
   3.829227495752606*^9, 3.829227535465136*^9, {3.82922770990172*^9, 
   3.829227752951272*^9}, {3.829227877567026*^9, 3.829227898251088*^9}, 
   3.82922798457596*^9, 3.8292295127333927`*^9, 3.829229892342325*^9, {
   3.829229932780497*^9, 3.8292299459800243`*^9}, {3.829230644308365*^9, 
   3.829230667781952*^9}, 3.82923070995128*^9, 3.829230740050686*^9},
 CellLabel->
  "During evaluation of \
In[197]:=",ExpressionUUID->"9ae1a392-8abb-4517-848e-2e2425b57c7d"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Total number of circuits = \"\>", "\[InvisibleSpace]", "10", 
   "\[InvisibleSpace]", "\<\"\\nAdd random layer of depth r = \"\>", 
   "\[InvisibleSpace]", "4", 
   "\[InvisibleSpace]", "\<\"\\nTotal circuit length = \"\>", 
   "\[InvisibleSpace]", "100"}],
  SequenceForm[
  "Total number of circuits = ", 10, "\nAdd random layer of depth r = ", 4, 
   "\nTotal circuit length = ", 100],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8292168464639606`*^9, 3.829216916132842*^9, {3.829216950281518*^9, 
   3.829216966539054*^9}, 3.829217024562076*^9, 3.8292170606521187`*^9, 
   3.829217094554776*^9, 3.829217371537343*^9, 3.829217484924749*^9, 
   3.8292175249262543`*^9, {3.8292175576005087`*^9, 3.8292175721463747`*^9}, 
   3.8292176095774603`*^9, 3.829217745226111*^9, 3.829217789118548*^9, 
   3.8292210519860086`*^9, 3.82922109293924*^9, 3.8292274615774393`*^9, 
   3.829227495752606*^9, 3.829227535465136*^9, {3.82922770990172*^9, 
   3.829227752951272*^9}, {3.829227877567026*^9, 3.829227898251088*^9}, 
   3.82922798457596*^9, 3.8292295127333927`*^9, 3.829229892342325*^9, {
   3.829229932780497*^9, 3.8292299459800243`*^9}, {3.829230644308365*^9, 
   3.829230667781952*^9}, 3.82923070995128*^9, 3.829230740051764*^9},
 CellLabel->
  "During evaluation of \
In[197]:=",ExpressionUUID->"51dc29c9-8672-4d0c-bcca-ef597f8af921"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Total number of estimated fidelities = \"\>", 
   "\[InvisibleSpace]", "624"}],
  SequenceForm["Total number of estimated fidelities = ", 624],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8292168464639606`*^9, 3.829216916132842*^9, {3.829216950281518*^9, 
   3.829216966539054*^9}, 3.829217024562076*^9, 3.8292170606521187`*^9, 
   3.829217094554776*^9, 3.829217371537343*^9, 3.829217484924749*^9, 
   3.8292175249262543`*^9, {3.8292175576005087`*^9, 3.8292175721463747`*^9}, 
   3.8292176095774603`*^9, 3.829217745226111*^9, 3.829217789118548*^9, 
   3.8292210519860086`*^9, 3.82922109293924*^9, 3.8292274615774393`*^9, 
   3.829227495752606*^9, 3.829227535465136*^9, {3.82922770990172*^9, 
   3.829227752951272*^9}, {3.829227877567026*^9, 3.829227898251088*^9}, 
   3.82922798457596*^9, 3.8292295127333927`*^9, 3.829229892342325*^9, {
   3.829229932780497*^9, 3.8292299459800243`*^9}, {3.829230644308365*^9, 
   3.829230667781952*^9}, 3.82923070995128*^9, 3.829230740052703*^9},
 CellLabel->
  "During evaluation of \
In[197]:=",ExpressionUUID->"73b155ab-88f8-49e6-ae35-d3c20b765220"]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "Now we can save the data from this calculation. All we need to do the \
simulations is ",
 Cell[BoxData[
  FormBox["A", TraditionalForm]],ExpressionUUID->
  "a9385a73-8a2a-4315-9e17-8cfa67bdf471"],
 ", but storing the circuits M and ",
 Cell[BoxData[
  FormBox["kk", TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "1baa118a-e029-4466-879d-a750c55bd017"],
 " will make the calculation reproducible.  "
}], "Text",
 CellChangeTimes->{{3.827877426786973*^9, 3.8278774425918818`*^9}, {
  3.827877511300808*^9, 3.8278775444950943`*^9}, {3.828713615426455*^9, 
  3.828713616670575*^9}, {3.829227149451496*^9, 3.829227188130518*^9}, {
  3.8292296417220583`*^9, 
  3.829229647430037*^9}},ExpressionUUID->"b3ce5e53-f6d1-4ea2-a912-\
802ec0e43d21"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{
    RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\</data/\>\""}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Save", "[", 
  RowBox[{
   RowBox[{"\"\<n=\>\"", "<>", 
    RowBox[{"ToString", "[", "n", "]"}], "<>", "\"\<,kk,dd,M,A.txt\>\""}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "kk", ",", "dd", ",", "M", ",", "A"}], "}"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.827874300438703*^9, 3.82787430852029*^9}, {
   3.827877111693302*^9, 3.827877134615408*^9}, {3.827877423956005*^9, 
   3.827877464182035*^9}, {3.8278774981948137`*^9, 3.827877499540599*^9}, 
   3.8278776695516243`*^9, 3.827934543491207*^9, {3.82793482836935*^9, 
   3.827934853511033*^9}, {3.82917176461233*^9, 3.82917177524949*^9}, {
   3.829229624717053*^9, 3.829229629385648*^9}, {3.829229967746029*^9, 
   3.829229972502061*^9}, {3.829230132659081*^9, 3.829230164474115*^9}, {
   3.829230308227296*^9, 3.8292303207257032`*^9}},
 CellLabel->
  "In[246]:=",ExpressionUUID->"21c129dd-819f-4496-9a61-1dfc6bdb9add"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Visualizing a Pauli going through a circuit", "Subsection",
 CellChangeTimes->{{3.8274298938866587`*^9, 3.8274299073990717`*^9}, {
   3.827489724320333*^9, 3.8274897354563103`*^9}, {3.829160814937111*^9, 
   3.8291608180761137`*^9}, 
   3.82923003846003*^9},ExpressionUUID->"af4f8508-a69e-49cb-b7b9-\
6f900b5ea4a4"],

Cell[TextData[{
 "This function takes a circuit ",
 Cell[BoxData[
  FormBox["c", TraditionalForm]],ExpressionUUID->
  "746b0a8f-8192-4ea7-a5ee-72d799cedb6f"],
 " (without a final measurement round) and produces a plot of the Pauli \
propagation through the circuit. The second argument is a binary vector ",
 Cell[BoxData[
  FormBox["P", TraditionalForm]],ExpressionUUID->
  "d707f39b-f693-4520-903d-801f4165bc1c"],
 ", and it returns the history of that Pauli with time going down. "
}], "Text",
 CellChangeTimes->{{3.82803482021347*^9, 3.828034967350019*^9}, {
  3.8291607649466133`*^9, 
  3.829160793263879*^9}},ExpressionUUID->"1aca5d29-2c62-4b2a-bf9e-\
104023de08bd"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"HistoryPlot", "[", 
    RowBox[{"c_List", ",", 
     RowBox[{"P_", "?", "VectorQ"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"colors", ",", "p", ",", "h", ",", "hp"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"colors", "=", 
       RowBox[{"RGBColor", "/@", 
        RowBox[{"{", 
         RowBox[{
         "\"\<#CD6355\>\"", ",", "\"\<#22B6DB\>\"", ",", "\"\<#ECCD3E\>\""}], 
         "}"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"p", "=", 
       RowBox[{"PauliHistory", "[", "c", "]"}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"h", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Partition", "[", 
          RowBox[{"#", ",", "2"}], "]"}], "&"}], "/@", 
        RowBox[{"Mod", "[", 
         RowBox[{
          RowBox[{"P", ".", "p"}], ",", "2"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"hp", "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"FromDigits", "[", 
           RowBox[{"#", ",", "2"}], "]"}], "&"}], ",", "h", ",", 
         RowBox[{"{", "2", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"ArrayPlot", "[", 
        RowBox[{"hp", ",", 
         RowBox[{"ColorRules", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"0", "\[Rule]", "None"}], ",", 
            RowBox[{"1", "\[Rule]", 
             RowBox[{
             "colors", "\[LeftDoubleBracket]", "1", 
              "\[RightDoubleBracket]"}]}], ",", 
            RowBox[{"2", "\[Rule]", 
             RowBox[{
             "colors", "\[LeftDoubleBracket]", "2", 
              "\[RightDoubleBracket]"}]}], ",", 
            RowBox[{"3", "\[Rule]", 
             RowBox[{
             "colors", "\[LeftDoubleBracket]", "3", 
              "\[RightDoubleBracket]"}]}]}], "}"}]}]}], "]"}], "]"}], ";"}]}],
     "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8274166369345284`*^9, 3.827416760586622*^9}, {
   3.827425433913871*^9, 3.8274254655492897`*^9}, {3.827425557221437*^9, 
   3.827425560473534*^9}, {3.8274256087150717`*^9, 3.827425616139688*^9}, {
   3.827425671943872*^9, 3.827425761496727*^9}, {3.827604058261127*^9, 
   3.827604060690464*^9}, {3.827605010109455*^9, 3.82760501249837*^9}, {
   3.8276052654622602`*^9, 3.827605279205393*^9}, {3.827605331306972*^9, 
   3.827605392928144*^9}, {3.828034212008864*^9, 3.828034213373575*^9}, 
   3.8280348138969383`*^9, {3.828034974940736*^9, 3.828034996198086*^9}, {
   3.828035691569701*^9, 3.828035841872645*^9}, 3.8280358751603107`*^9, 
   3.828095188373515*^9, {3.828289299582946*^9, 3.828289307413726*^9}, {
   3.828300240076391*^9, 3.828300240798979*^9}, {3.828300685827958*^9, 
   3.828300704813376*^9}, {3.8283007460912933`*^9, 3.828300772010474*^9}, {
   3.829157605465004*^9, 3.8291577207680407`*^9}, {3.829157774776819*^9, 
   3.8291578153267527`*^9}, {3.829157867182959*^9, 3.829157963622622*^9}, {
   3.829157999860379*^9, 3.82915800290073*^9}, {3.829158086050016*^9, 
   3.829158273503174*^9}, {3.829158363335935*^9, 3.829158388644185*^9}, {
   3.829158529267674*^9, 3.829158624696596*^9}, {3.829158774721243*^9, 
   3.8291588965032454`*^9}, {3.8291589546071377`*^9, 3.829158958773497*^9}, {
   3.829159082737162*^9, 3.829159155370103*^9}, {3.829159321267889*^9, 
   3.829159325975281*^9}, {3.829159374866242*^9, 3.829159415375457*^9}, {
   3.829159634777011*^9, 3.829159664269767*^9}, {3.829159910104251*^9, 
   3.829160051696432*^9}, {3.829160091883943*^9, 3.8291601137930727`*^9}, {
   3.829160701489324*^9, 3.829160712059257*^9}},
 CellLabel->
  "In[644]:=",ExpressionUUID->"f4336043-c4b9-4ad5-bf5e-5324921409b2"],

Cell[TextData[{
 "Here is an example. This code produces a circuit ",
 Cell[BoxData[
  FormBox["c", TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "71b077b4-a191-4d34-bfdb-e0febe663303"],
 ". The ",
 Cell[BoxData[
  FormBox["c", TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "0fbaf47e-67dc-4086-8687-86af7b504206"],
 " below is used in the figure in the paper. "
}], "Text",
 CellChangeTimes->{{3.82803645993456*^9, 3.828036464599039*^9}, {
  3.829160634457671*^9, 
  3.8291606620960407`*^9}},ExpressionUUID->"3c4d1cc4-b63b-4e4d-93af-\
743267f9e57f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"k", "=", "8"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "=", 
   RowBox[{"Fibonacci", "[", "k", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d", "=", 
   RowBox[{"Fibonacci", "[", 
    RowBox[{"k", "+", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"c", "=", 
   RowBox[{"RandomMirrorCircuit", "[", 
    RowBox[{"n", ",", "d"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"P", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"2", "n"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"P", "\[LeftDoubleBracket]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "n", ",", 
      RowBox[{"n", "+", "1"}], ",", 
      RowBox[{"2", "n"}]}], "}"}], "\[RightDoubleBracket]"}], "=", "1"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"HistoryPlot", "[", 
  RowBox[{"c", ",", "P"}], "]"}]}], "Input",
 CellChangeTimes->{{3.82803389279941*^9, 3.828033913171009*^9}, 
   3.828033950658345*^9, {3.828036453723771*^9, 3.828036454037279*^9}, {
   3.8280364953334*^9, 3.828036513304988*^9}, {3.828037117628015*^9, 
   3.828037117697117*^9}, {3.828037242461691*^9, 3.82803725175961*^9}, {
   3.828037415089705*^9, 3.828037442932474*^9}, 3.8280386589014482`*^9, {
   3.8280407541751413`*^9, 3.828040754249139*^9}, {3.828040794378379*^9, 
   3.828040794453725*^9}, {3.828042903195774*^9, 3.828042903298956*^9}, {
   3.828042938625051*^9, 3.8280429418649063`*^9}, {3.828285213932308*^9, 
   3.828285262017733*^9}, {3.82828538116576*^9, 3.828285393608304*^9}, {
   3.828285588186475*^9, 3.828285613014566*^9}, {3.8282857354325867`*^9, 
   3.828285737454844*^9}, {3.828285767658288*^9, 3.828285798549152*^9}, {
   3.82828583278811*^9, 3.828285867279463*^9}, {3.828289434114328*^9, 
   3.82828945771462*^9}, {3.8282895899207478`*^9, 3.828289596259777*^9}, 
   3.828300283055565*^9, {3.8284580150525208`*^9, 3.828458024255583*^9}, {
   3.828458522875626*^9, 3.828458523014288*^9}, {3.829157581561411*^9, 
   3.829157585697394*^9}, {3.829157663767219*^9, 3.8291576640490913`*^9}, {
   3.829157832167386*^9, 3.829157833741588*^9}, {3.829160617283193*^9, 
   3.829160618074532*^9}, {3.829160687921776*^9, 3.829160688602324*^9}},
 CellLabel->
  "In[645]:=",ExpressionUUID->"3ebda8a8-301c-417f-a223-6cfb74367f1a"],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJztW0tKxEAUDOgFXLgW8SB9B8ELCK49gGfRe8zsPIErfxcQRASPYNIwLvOE
oqj3OvUgzKImobu6+v06Ob++vbw5mqbpYr5O5+t4vk66PbbXl8U+2l23rzZ1
+wl+D7Zd/OF+se+23y322c66PZm/f+IH3t7furWrbs9//7M+Mdz6xHBUn9bv
Oh7p0/yt4xE/Eb/2D+u49YnhEX+Rf906/+j+3np8QvUV3Y/ian5QnB1/RucP
3b8oP6Pzi/LH5l+No/uXXb9X5zfC0f0/uv9k5zdo/VOdX3R+o9eXbP2w40t1
/tH5jR6/2fUHyh+7/srOP+ofs+9fdn2M5pfs+jP7+rD1l71/xO4vsv2jWt8o
/+r6sro+1fGF3R9Rn/+z/Z96fijOrq+z65vNDzs/Hj3/jHC2frP7P7W+UP6r
x/cIZ8dfdn+Z3T9Vjy/CR9cvyn/0/Oz5vzo/Rtcv+/hQnK3P7P4p+/jQ9bP/
XH8++/0l55+19Rfh6vzT9Tt2v9p/s3F0fdT9O7X/jXD3P9dxtv7Y/oPtn31+
hM0PxbOfH/n8nctPdX1mP39n++fq61M9/2TrQ91/y84/ivv9T0x/0fPZ/avq
/KPzq+4/I5ytH3b+Pro+/f0Rlx92/KnOb4Sr+3Pq+aP8qL9vr85vhFfvr6lx
dv5evX+C4uzzkdH523p/RI1vff+iuPc3F7c+Mdz64+KOLxhe/f2F7Lj1ieGR
Pn8B3UpNUg==
   "], {{0, 0}, {21, 35}}, {0, 1}],
  Frame->Automatic,
  FrameLabel->{None, None},
  FrameTicks->{{None, None}, {None, None}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic}]], "Output",
 CellChangeTimes->{{3.8291606890796547`*^9, 3.829160713882908*^9}},
 CellLabel->
  "Out[651]=",ExpressionUUID->"c2316655-5bd2-49b6-92a6-a5e023ff4f6f"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"c", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "5", ",", "4", ",", "4", ",", "7", ",", "8", ",", "4", ",", "3", ",", 
       "4", ",", "5", ",", "4", ",", "5", ",", "8", ",", "6", ",", "5", ",", 
       "5", ",", "8", ",", "7", ",", "8", ",", "5", ",", "7", ",", "8"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "2", ",", "0", ",", "1", ",", "0", ",", "1", ",", "0", ",", "1", ",", 
       "0", ",", "2", ",", "0", ",", "1", ",", "0", ",", "1", ",", "0", ",", 
       "2", ",", "0", ",", "2", ",", "0", ",", "1", ",", "0", ",", "7"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "8", ",", "3", ",", "7", ",", "4", ",", "5", ",", "8", ",", "5", ",", 
       "3", ",", "4", ",", "6", ",", "5", ",", "6", ",", "8", ",", "7", ",", 
       "6", ",", "6", ",", "5", ",", "5", ",", "8", ",", "6", ",", "4"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "7", ",", "2", ",", "0", ",", "1", ",", "0", ",", "2", ",", "0", ",", 
       "1", ",", "0", ",", "1", ",", "0", ",", "2", ",", "0", ",", "1", ",", 
       "0", ",", "2", ",", "0", ",", "2", ",", "0", ",", "2", ",", "0"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "6", ",", "8", ",", "8", ",", "3", ",", "5", ",", "4", ",", "4", ",", 
       "7", ",", "7", ",", "7", ",", "3", ",", "4", ",", "3", ",", "8", ",", 
       "8", ",", "8", ",", "7", ",", "6", ",", "7", ",", "5", ",", "8"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1", ",", "0", ",", "1", ",", "0", ",", "1", ",", "0", ",", "1", ",", 
       "0", ",", "2", ",", "0", ",", "2", ",", "0", ",", "1", ",", "0", ",", 
       "2", ",", "0", ",", "1", ",", "0", ",", "2", ",", "0", ",", "6"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "3", ",", "4", ",", "4", ",", "3", ",", "3", ",", "4", ",", "8", ",", 
       "3", ",", "6", ",", "5", ",", "6", ",", "4", ",", "8", ",", "3", ",", 
       "5", ",", "3", ",", "3", ",", "3", ",", "8", ",", "7", ",", "8"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "5", ",", "1", ",", "0", ",", "2", ",", "0", ",", "2", ",", "0", ",", 
       "2", ",", "0", ",", "1", ",", "0", ",", "2", ",", "0", ",", "2", ",", 
       "0", ",", "1", ",", "0", ",", "2", ",", "0", ",", "2", ",", "0"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "6", ",", "3", ",", "7", ",", "6", ",", "8", ",", "3", ",", "5", ",", 
       "8", ",", "7", ",", "7", ",", "5", ",", "4", ",", "4", ",", "3", ",", 
       "7", ",", "4", ",", "3", ",", "8", ",", "4", ",", "5", ",", "5"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1", ",", "0", ",", "2", ",", "0", ",", "2", ",", "0", ",", "1", ",", 
       "0", ",", "2", ",", "0", ",", "1", ",", "0", ",", "1", ",", "0", ",", 
       "1", ",", "0", ",", "1", ",", "0", ",", "1", ",", "0", ",", "4"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "6", ",", "7", ",", "6", ",", "7", ",", "4", ",", "7", ",", "4", ",", 
       "6", ",", "3", ",", "3", ",", "4", ",", "4", ",", "3", ",", "3", ",", 
       "5", ",", "4", ",", "8", ",", "3", ",", "4", ",", "3", ",", "4"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "7", ",", "2", ",", "0", ",", "2", ",", "0", ",", "1", ",", "0", ",", 
       "1", ",", "0", ",", "2", ",", "0", ",", "2", ",", "0", ",", "2", ",", 
       "0", ",", "1", ",", "0", ",", "2", ",", "0", ",", "1", ",", "0"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "5", ",", "5", ",", "4", ",", "7", ",", "6", ",", "4", ",", "8", ",", 
       "4", ",", "8", ",", "8", ",", "8", ",", "7", ",", "5", ",", "8", ",", 
       "8", ",", "3", ",", "5", ",", "8", ",", "8", ",", "5", ",", "7"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "2", ",", "0", ",", "2", ",", "0", ",", "2", ",", "0", ",", "2", ",", 
       "0", ",", "2", ",", "0", ",", "2", ",", "0", ",", "1", ",", "0", ",", 
       "2", ",", "0", ",", "1", ",", "0", ",", "2", ",", "0", ",", "4"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "3", ",", "7", ",", "3", ",", "4", ",", "5", ",", "8", ",", "8", ",", 
       "7", ",", "3", ",", "3", ",", "8", ",", "8", ",", "6", ",", "3", ",", 
       "4", ",", "4", ",", "3", ",", "4", ",", "6", ",", "7", ",", "5"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "4", ",", "2", ",", "0", ",", "1", ",", "0", ",", "2", ",", "0", ",", 
       "2", ",", "0", ",", "2", ",", "0", ",", "1", ",", "0", ",", "2", ",", 
       "0", ",", "1", ",", "0", ",", "1", ",", "0", ",", "1", ",", "0"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "8", ",", "4", ",", "6", ",", "5", ",", "8", ",", "6", ",", "4", ",", 
       "3", ",", "5", ",", "5", ",", "4", ",", "3", ",", "6", ",", "6", ",", 
       "6", ",", "3", ",", "3", ",", "7", ",", "3", ",", "3", ",", "5"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "7", ",", "4", ",", "6", ",", "5", ",", "7", ",", "6", ",", "4", ",", 
       "3", ",", "5", ",", "5", ",", "4", ",", "3", ",", "6", ",", "6", ",", 
       "6", ",", "3", ",", "3", ",", "8", ",", "3", ",", "3", ",", "5"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "4", ",", "2", ",", "0", ",", "1", ",", "0", ",", "2", ",", "0", ",", 
       "2", ",", "0", ",", "2", ",", "0", ",", "1", ",", "0", ",", "2", ",", 
       "0", ",", "1", ",", "0", ",", "1", ",", "0", ",", "1", ",", "0"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "3", ",", "8", ",", "3", ",", "4", ",", "5", ",", "7", ",", "7", ",", 
       "8", ",", "3", ",", "3", ",", "7", ",", "7", ",", "6", ",", "3", ",", 
       "4", ",", "4", ",", "3", ",", "4", ",", "6", ",", "8", ",", "5"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "2", ",", "0", ",", "2", ",", "0", ",", "2", ",", "0", ",", "2", ",", 
       "0", ",", "2", ",", "0", ",", "2", ",", "0", ",", "1", ",", "0", ",", 
       "2", ",", "0", ",", "1", ",", "0", ",", "2", ",", "0", ",", "4"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "5", ",", "5", ",", "4", ",", "8", ",", "6", ",", "4", ",", "7", ",", 
       "4", ",", "7", ",", "7", ",", "7", ",", "8", ",", "5", ",", "7", ",", 
       "7", ",", "3", ",", "5", ",", "7", ",", "7", ",", "5", ",", "8"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "8", ",", "2", ",", "0", ",", "2", ",", "0", ",", "1", ",", "0", ",", 
       "1", ",", "0", ",", "2", ",", "0", ",", "2", ",", "0", ",", "2", ",", 
       "0", ",", "1", ",", "0", ",", "2", ",", "0", ",", "1", ",", "0"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "6", ",", "8", ",", "6", ",", "8", ",", "4", ",", "8", ",", "4", ",", 
       "6", ",", "3", ",", "3", ",", "4", ",", "4", ",", "3", ",", "3", ",", 
       "5", ",", "4", ",", "7", ",", "3", ",", "4", ",", "3", ",", "4"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1", ",", "0", ",", "2", ",", "0", ",", "2", ",", "0", ",", "1", ",", 
       "0", ",", "2", ",", "0", ",", "1", ",", "0", ",", "1", ",", "0", ",", 
       "1", ",", "0", ",", "1", ",", "0", ",", "1", ",", "0", ",", "4"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "6", ",", "3", ",", "8", ",", "6", ",", "7", ",", "3", ",", "5", ",", 
       "7", ",", "8", ",", "8", ",", "5", ",", "4", ",", "4", ",", "3", ",", 
       "8", ",", "4", ",", "3", ",", "7", ",", "4", ",", "5", ",", "5"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "5", ",", "1", ",", "0", ",", "2", ",", "0", ",", "2", ",", "0", ",", 
       "2", ",", "0", ",", "1", ",", "0", ",", "2", ",", "0", ",", "2", ",", 
       "0", ",", "1", ",", "0", ",", "2", ",", "0", ",", "2", ",", "0"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "3", ",", "4", ",", "4", ",", "3", ",", "3", ",", "4", ",", "7", ",", 
       "3", ",", "6", ",", "5", ",", "6", ",", "4", ",", "7", ",", "3", ",", 
       "5", ",", "3", ",", "3", ",", "3", ",", "7", ",", "8", ",", "7"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1", ",", "0", ",", "1", ",", "0", ",", "1", ",", "0", ",", "1", ",", 
       "0", ",", "2", ",", "0", ",", "2", ",", "0", ",", "1", ",", "0", ",", 
       "2", ",", "0", ",", "1", ",", "0", ",", "2", ",", "0", ",", "6"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "6", ",", "7", ",", "7", ",", "3", ",", "5", ",", "4", ",", "4", ",", 
       "8", ",", "8", ",", "8", ",", "3", ",", "4", ",", "3", ",", "7", ",", 
       "7", ",", "7", ",", "8", ",", "6", ",", "8", ",", "5", ",", "7"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "8", ",", "2", ",", "0", ",", "1", ",", "0", ",", "2", ",", "0", ",", 
       "1", ",", "0", ",", "1", ",", "0", ",", "2", ",", "0", ",", "1", ",", 
       "0", ",", "2", ",", "0", ",", "2", ",", "0", ",", "2", ",", "0"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "7", ",", "3", ",", "8", ",", "4", ",", "5", ",", "7", ",", "5", ",", 
       "3", ",", "4", ",", "6", ",", "5", ",", "6", ",", "7", ",", "8", ",", 
       "6", ",", "6", ",", "5", ",", "5", ",", "7", ",", "6", ",", "4"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "2", ",", "0", ",", "1", ",", "0", ",", "1", ",", "0", ",", "1", ",", 
       "0", ",", "2", ",", "0", ",", "1", ",", "0", ",", "1", ",", "0", ",", 
       "2", ",", "0", ",", "2", ",", "0", ",", "1", ",", "0", ",", "8"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "5", ",", "4", ",", "4", ",", "8", ",", "7", ",", "4", ",", "3", ",", 
       "4", ",", "5", ",", "4", ",", "5", ",", "7", ",", "6", ",", "5", ",", 
       "5", ",", "7", ",", "8", ",", "7", ",", "5", ",", "8", ",", "7"}], 
      "}"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.829160628346602*^9, 3.829160628459815*^9}, 
   3.8291606677871227`*^9},
 CellLabel->
  "In[652]:=",ExpressionUUID->"801d7f24-a8a8-4dc8-8757-7acdbb43525a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"hp", "=", 
   RowBox[{"HistoryPlot", "[", 
    RowBox[{"c", ",", "P"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"hp", ",", 
   RowBox[{"Background", "\[Rule]", "None"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Directive", "[", 
         RowBox[{
          RowBox[{"Opacity", "[", "1", "]"}], ",", 
          RowBox[{"FontOpacity", "\[Rule]", "1"}]}], "]"}], ",", 
        RowBox[{"Directive", "[", 
         RowBox[{
          RowBox[{"Opacity", "[", "0", "]"}], ",", 
          RowBox[{"FontOpacity", "\[Rule]", "1"}]}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Directive", "[", 
         RowBox[{
          RowBox[{"Opacity", "[", "1", "]"}], ",", 
          RowBox[{"FontOpacity", "\[Rule]", "1"}]}], "]"}], ",", 
        RowBox[{"Directive", "[", 
         RowBox[{
          RowBox[{"Opacity", "[", "0", "]"}], ",", 
          RowBox[{"FontOpacity", "\[Rule]", "1"}]}], "]"}]}], "}"}]}], 
     "}"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Space\>\"", ",", "\"\<Time\>\"", ",", 
      "\"\<X                                    Y                             \
       Z\>\"", ",", "None"}], "}"}]}], ",", 
   RowBox[{"FrameTicks", "\[Rule]", "None"}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"FontFamily", "\[Rule]", "\"\<Lato\>\""}], ",", "14", ",", 
      RowBox[{"GrayLevel", "[", "0", "]"}]}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.829159627441702*^9, 3.829159676277158*^9}, {
  3.829160095930719*^9, 3.829160119934177*^9}, {3.8291601541690063`*^9, 
  3.829160156992218*^9}, {3.829160733955545*^9, 3.829160743313758*^9}},
 CellLabel->
  "In[655]:=",ExpressionUUID->"ff6836dc-1154-4d00-b2f8-0e6103b8b35a"],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJztm01KxEAQhQN6AReuRTxI30HwAoJrD+BZ9B668wSu/LuAICJ4BCeBcZkS
Ph6vOl0FYRZvppN+eV1d9ZI5vbw+vzqYpulsdxzvjsPdcbTEY3t9meOj3Szx
1aYlfoLPfYyL393O8d0e7uf4bCdLPBV//8T3vL2/LdEulnj++17xy/Ba3wyP
+Iv0GenbPT83HvFb+l3HI31R3D0/Nx6t79LnOq7On1vXL62PRtcn3V8i/kff
vyL9VX20jqv5o/rMrl+6v4zeX7r3Z4r3rk+6/7jnp8ZpfaPmN7s+KT+j50/K
j3v87P2Bu75Rz0+Nq9cnHZ/mX3V+oedX85Ndv2r+3PWpO3+q18/W/Td1faMe
P3v+oOOr96/s+lX7j+76ys1/dv1k90fV+c/dX2XnV60/df5w8xf9Xl0/0fO7
+aX8uPOj259y+ze0PnPrj15f7/6cm5/e+2M6vvr63P5cNL56/Wf339Tzo+Or
r6/y57bzZ9Wf6+ev+tNbf1b/zvip/l1bH5T/6c2vlB96fW7/061vym89P9Ly
535+VM/fmT6z64/yl/35u/r+U36z+yfZ/Tl3/eh+f899f9zvJ6jnp8bd+qH7
D72/an6pvur9ea3/q+6/s+uT8pPdX3Pjbn+Ijt+7PkfPnxHu7t971x/F6//v
DFf3p737JxTP7q9lx9X7+9b1R/HSJ8PV9YF7fm589PqH4m7/fOt46Y/htb61
eK1vhkf58xfOoQZU
   "], {{0, 0}, {21, 35}}, {0, 1}],
  Background->None,
  Frame->True,
  FrameLabel->{
    FormBox["\"Space\"", TraditionalForm], 
    FormBox["\"Time\"", TraditionalForm], 
    FormBox[
    "\"X                                    Y                                 \
   Z\"", TraditionalForm], None},
  FrameStyle->{{
     Directive[
      Opacity[1], FontOpacity -> 1], 
     Directive[
      Opacity[0], FontOpacity -> 1]}, {
     Directive[
      Opacity[1], FontOpacity -> 1], 
     Directive[
      Opacity[0], FontOpacity -> 1]}},
  FrameTicks->None,
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Medium,
  LabelStyle->{FontFamily -> "Lato", 14, 
    GrayLevel[0]},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic}]], "Output",
 CellChangeTimes->{
  3.829158494943931*^9, {3.829158534151411*^9, 3.829158553281701*^9}, {
   3.829158584767584*^9, 3.829158627354348*^9}, {3.829158832339078*^9, 
   3.8291588998725443`*^9}, 3.8291589618435802`*^9, {3.829159089106468*^9, 
   3.829159158041507*^9}, 3.829159329649613*^9, {3.829159643004895*^9, 
   3.82915968701058*^9}, 3.829159915052205*^9, 3.8291599618697*^9, {
   3.829160001481387*^9, 3.829160056367832*^9}, {3.829160101914194*^9, 
   3.8291601240737267`*^9}, 3.829160158484661*^9, {3.829160721275085*^9, 
   3.829160746359683*^9}},
 CellLabel->
  "Out[656]=",ExpressionUUID->"9f270e86-b715-49bb-96e8-bf59ede8cf40"]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Numerical reconstruction", "Section",
 CellChangeTimes->{{3.8234337626028557`*^9, 3.823433791874215*^9}, {
  3.823645257391552*^9, 3.82364528208438*^9}, {3.823792002270193*^9, 
  3.823792003315618*^9}, {3.827604383757782*^9, 3.8276043931337557`*^9}, {
  3.827883249094153*^9, 
  3.827883259435046*^9}},ExpressionUUID->"a2a90bfc-f11f-4a04-98dd-\
50f1058c1875"],

Cell[CellGroupData[{

Cell["More function definitions", "Subsection",
 CellChangeTimes->{{3.823645648820215*^9, 3.82364565410393*^9}, {
  3.827882829423512*^9, 
  3.827882830866797*^9}},ExpressionUUID->"fd5fd911-ba5d-417b-9024-\
ef7338175788"],

Cell["Generates a uniform sample from the d dimensional simplex.", "Text",
 CellChangeTimes->{{3.827931771935364*^9, 
  3.827931774057086*^9}},ExpressionUUID->"91613752-fbd2-4882-926f-\
9824c2d9736f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RandomSimplex", "[", "d_Integer", "]"}], ":=", 
   RowBox[{"Differences", "[", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", "0", "}"}], ",", 
      RowBox[{"Sort", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"RandomReal", "[", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"d", "-", "1"}], "}"}]}], "]"}], "]"}], ",", 
      RowBox[{"{", "1", "}"}]}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.823693693447681*^9, 3.823693700331909*^9}, {
   3.827919823377383*^9, 3.827919873601441*^9}, {3.8279199092848597`*^9, 
   3.827919918599985*^9}, {3.827923409300262*^9, 3.827923511638792*^9}, {
   3.827931768465219*^9, 3.8279317793768806`*^9}, 3.827931903948777*^9},
 CellLabel->"In[1]:=",ExpressionUUID->"0b8401b6-54f6-4666-9462-8aeb0d684131"],

Cell[TextData[{
 "Projects a vector ",
 Cell[BoxData[
  FormBox["p", TraditionalForm]],ExpressionUUID->
  "7ed8dbde-e359-4c1b-b061-72ca389901e1"],
 " onto the closest point (in ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["l", "2"], TraditionalForm]],ExpressionUUID->
  "d6a278a9-5362-48e9-9141-0e237c77add0"],
 " distance) to the ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "b5df80e9-e3b1-4f09-9a69-c1ff3a1f4910"],
 "-dimensional simplex in ",
 Cell[BoxData[
  FormBox[
   RowBox[{"O", "(", 
    RowBox[{"n", " ", 
     RowBox[{"Log", "[", "n", "]"}]}], ")"}], TraditionalForm]],
  ExpressionUUID->"76af4647-ca7e-4d6a-9895-1e816ad60ced"],
 " time. The second version mixes this point with a uniform distribution of \
total mass \[Epsilon]."
}], "Text",
 CellChangeTimes->{{3.82793179239115*^9, 
  3.8279318622461567`*^9}},ExpressionUUID->"b198f055-4c85-4b35-bd92-\
a2f268a1c8c2"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ProjectSimplex", "[", 
     RowBox[{"p_", "?", "VectorQ"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"n", "=", 
         RowBox[{"Length", "[", "p", "]"}]}], ",", 
        RowBox[{"m", "=", 
         RowBox[{"Sort", "[", 
          RowBox[{"p", ",", "Greater"}], "]"}]}], ",", "r", ",", "t"}], "}"}],
       ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"r", "=", 
        RowBox[{"Max", "[", 
         RowBox[{
          RowBox[{"Range", "[", "n", "]"}], " ", 
          RowBox[{"Boole", "[", 
           RowBox[{"Thread", "[", 
            RowBox[{
             RowBox[{"m", "-", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Accumulate", "[", "m", "]"}], "-", "1"}], ")"}], 
               "/", 
               RowBox[{"Range", "[", "n", "]"}]}]}], ">", "0"}], "]"}], 
           "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"t", "=", 
        FractionBox[
         RowBox[{
          RowBox[{"Total", "[", 
           RowBox[{"m", "\[LeftDoubleBracket]", 
            RowBox[{"1", ";;", "r"}], "\[RightDoubleBracket]"}], "]"}], "-", 
          "1"}], "r"]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Max", "[", 
           RowBox[{"#", ",", "0"}], "]"}], "&"}], "/@", 
         RowBox[{"(", 
          RowBox[{"p", "-", "t"}], ")"}]}], "]"}], ";"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ProjectSimplex", "[", 
    RowBox[{
     RowBox[{"p_", "?", "VectorQ"}], ",", 
     RowBox[{"\[Epsilon]_", "?", "NumberQ"}]}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n", "=", 
       RowBox[{"Length", "[", "p", "]"}]}], "}"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", "\[Epsilon]"}], ")"}], " ", 
       RowBox[{"ProjectSimplex", "[", "p", "]"}]}], "+", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{
        FractionBox["\[Epsilon]", "n"], ",", "n"}], "]"}]}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.823693693447681*^9, 3.823693700331909*^9}, {
   3.827919823377383*^9, 3.827919873601441*^9}, {3.8279199092848597`*^9, 
   3.827919918599985*^9}, {3.827923409300262*^9, 3.827923511638792*^9}, {
   3.827931768465219*^9, 3.8279317793768806`*^9}, 3.8279318678278627`*^9, 
   3.827932124395706*^9, {3.8281874147514687`*^9, 3.828187416084157*^9}, {
   3.829224877395488*^9, 3.8292248783001833`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"143a8298-9696-4334-aae2-b850533a4d7d"],

Cell["\<\
The Walsh-Hadamard Transform. It transforms from a Pauli probability \
distribution to the corresponding Pauli channel eigenvalues. The inverse \
transformation is the same, except you divide the result by Length[x]. \
\>", "Text",
 CellChangeTimes->{{3.8236453433132*^9, 3.823645354235034*^9}, 
   3.823646308589497*^9, {3.823646364081484*^9, 3.823646393938846*^9}, {
   3.827882639954115*^9, 3.827882691468061*^9}, {3.827931872642419*^9, 
   3.827931895952376*^9}},ExpressionUUID->"84c0bd3f-28d3-4993-8ffe-\
ce02b9386c51"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"W", "[", 
    RowBox[{"x_", "?", "VectorQ"}], "]"}], ":=", 
   RowBox[{
    SqrtBox[
     RowBox[{"Length", "[", "x", "]"}]], " ", 
    RowBox[{"DiscreteHadamardTransform", "[", 
     RowBox[{"x", ",", 
      RowBox[{"Method", "\[Rule]", "\"\<BitComplement\>\""}]}], "]"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8236445269263163`*^9, 3.823644533226994*^9}, {
   3.823644568664016*^9, 3.823644605953609*^9}, {3.8236446486676397`*^9, 
   3.823644662739717*^9}, {3.823646310402877*^9, 3.823646362536788*^9}, 
   3.823646655061562*^9, {3.823646721154191*^9, 3.823646722704006*^9}, {
   3.8278826283115873`*^9, 3.8278826339691343`*^9}, {3.827920030774054*^9, 
   3.827920032092312*^9}, 3.827932128430408*^9},
 CellLabel->"In[4]:=",ExpressionUUID->"f551acbb-62e6-4942-b22b-ecde78b2f9e4"],

Cell[CellGroupData[{

Cell["Building a gate error model", "Subsubsection",
 CellChangeTimes->{{3.8292318860850677`*^9, 
  3.8292318924755163`*^9}},ExpressionUUID->"db90b4e8-abb0-40e3-8106-\
1d6040f0c729"],

Cell[CellGroupData[{

Cell[TextData[{
 "For a numerical simulation, we have to assign noise to each of these ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"51", "n"}], "-", "30"}], TraditionalForm]],ExpressionUUID->
  "898a3088-c0f4-4408-a8c5-f79b8441ccbc"],
 " gates. We use the following parameters roughly estimated from the ",
 StyleBox["Arute et al.",
  FontSlant->"Italic"],
 " (2019) experiment. Single-qubit gates have a characteristic error rate of \
0.15%, two-qubit gates have an error rate of 0.36%, and (uncorrelated) \
measurement errors occur with error rate 3.1%. We assign fluctuations to \
these numbers by sampling uniformly in the interval between ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Times]", "2"}], TraditionalForm]],ExpressionUUID->
  "5bbdc787-7aa7-4fc3-b694-3de17df3a6f8"],
 "  and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Times]", 
    RowBox[{"1", "/", "2"}]}], TraditionalForm]],ExpressionUUID->
  "c13dde92-d0ab-41a4-a1a4-5843a09637ee"],
 " of these values."
}], "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.827883468597085*^9, 3.827883531606616*^9}, {
  3.827884061977006*^9, 3.8278841306258717`*^9}, {3.827884253193317*^9, 
  3.827884315524322*^9}, {3.827884416475232*^9, 3.827884419815797*^9}, {
  3.827884609896299*^9, 3.827884646265382*^9}, {3.827920506676902*^9, 
  3.827920514010257*^9}, {3.827920548932034*^9, 3.82792055092435*^9}, {
  3.827920630156646*^9, 3.8279206959626837`*^9}, {3.828010643051258*^9, 
  3.828010655290598*^9}},ExpressionUUID->"4021d18b-5b8c-4f38-834d-\
3fd9e3bb83ce"],

Cell["Here are the total error rates.", "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.82788553793163*^9, 3.827885545286394*^9}, {
   3.82791972492889*^9, 3.827919725480583*^9}, 
   3.828010643051383*^9},ExpressionUUID->"8366896e-1eec-4a5a-9dfa-\
92b2fabb4fbb"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"err", "=", 
   RowBox[{"{", 
    RowBox[{"0.0015", ",", "0.0036", ",", " ", "0.031"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Epsilon]", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"RandomReal", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{".5", ",", "2"}], "}"}], " ", 
        RowBox[{
        "err", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], ",", 
       
       RowBox[{
        RowBox[{"2", "n"}], "-", "2"}]}], "]"}], ",", 
     RowBox[{"RandomReal", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{".5", ",", "2"}], "}"}], " ", 
        RowBox[{
        "err", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], ",", 
       
       RowBox[{"6", "n"}]}], "]"}], ",", 
     RowBox[{"RandomReal", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{".5", ",", "2"}], "}"}], " ", 
        RowBox[{
        "err", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], ",", 
       "n"}], "]"}]}], "}"}]}], ";"}]}], "Input",
 Editable->False,
 Evaluatable->False,
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.827884178126395*^9, 3.82788420546726*^9}, {
   3.8278843275883503`*^9, 3.827884381868812*^9}, {3.827884438760907*^9, 
   3.8278844754312487`*^9}, {3.8278845105334272`*^9, 3.827884580156179*^9}, {
   3.827884679962081*^9, 3.827884704092949*^9}, {3.827884789685122*^9, 
   3.8278847934931993`*^9}, {3.8278848256082573`*^9, 
   3.8278848385105267`*^9}, {3.8278849033183613`*^9, 3.827884906872467*^9}, {
   3.827885527599598*^9, 3.8278855492760878`*^9}, 3.827935711040393*^9, {
   3.8280078520437202`*^9, 3.8280078839346313`*^9}, {3.828010422617358*^9, 
   3.828010428286253*^9}, 3.8280104872545853`*^9, 3.82801064305154*^9, {
   3.828026453673833*^9, 
   3.828026461371285*^9}},ExpressionUUID->"7ca777a3-8b9a-4da4-b86c-\
b8ea5b3bab9f"],

Cell["\<\
To get the \[OpenCurlyDoubleQuote]true\[CloseCurlyDoubleQuote] error rates, \
we sample randomly from the simplex of size 3 (for one-qubit gates or \
measurements) and size 15 (for two-qubit gates).\
\>", "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.8278855585962152`*^9, 3.827885573859631*^9}, {
   3.827919739134017*^9, 3.827919788108719*^9}, 3.828010643052814*^9, {
   3.829152075652995*^9, 
   3.829152082900391*^9}},ExpressionUUID->"da561bce-5999-475a-8546-\
4bd75aae19dc"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"p2q", "=", 
   RowBox[{
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", "-", 
        RowBox[{
        "\[Epsilon]", "\[LeftDoubleBracket]", "1", 
         "\[RightDoubleBracket]"}]}], "}"}], ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
         "\[Epsilon]", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
          "*", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"RandomSimplex", "[", 
            RowBox[{
             SuperscriptBox["4", "2"], "-", "1"}], "]"}], ",", 
           RowBox[{
            RowBox[{"2", "n"}], "-", "2"}]}], "]"}]}], ")"}], 
       "\[Transpose]"}]}], "]"}], "\[Transpose]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p1q", "=", 
   RowBox[{
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", "-", 
        RowBox[{
        "\[Epsilon]", "\[LeftDoubleBracket]", "2", 
         "\[RightDoubleBracket]"}]}], "}"}], ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
         "\[Epsilon]", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}],
          "*", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"RandomSimplex", "[", 
            RowBox[{
             SuperscriptBox["4", "1"], "-", "1"}], "]"}], ",", 
           RowBox[{"6", "n"}]}], "]"}]}], ")"}], "\[Transpose]"}]}], "]"}], 
    "\[Transpose]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pm", "=", 
   RowBox[{
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", "-", 
        RowBox[{
        "\[Epsilon]", "\[LeftDoubleBracket]", "3", 
         "\[RightDoubleBracket]"}]}], "}"}], ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
         "\[Epsilon]", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}],
          "*", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"RandomSimplex", "[", 
            RowBox[{
             SuperscriptBox["4", "1"], "-", "1"}], "]"}], ",", "n"}], "]"}]}],
         ")"}], "\[Transpose]"}]}], "]"}], "\[Transpose]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ptrue", "=", 
   RowBox[{"{", 
    RowBox[{"p2q", ",", "p1q", ",", "pm"}], "}"}]}], ";"}]}], "Input",
 Editable->False,
 Evaluatable->False,
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.827885012990526*^9, {3.82788524145813*^9, 3.827885259594138*^9}, {
   3.8278853078873*^9, 3.827885452959239*^9}, {3.8278855897542267`*^9, 
   3.827885632443268*^9}, {3.827920770130323*^9, 3.82792080575204*^9}, {
   3.827920874402856*^9, 3.8279209734982243`*^9}, {3.827921038304349*^9, 
   3.827921098527322*^9}, 3.828010489218974*^9, 
   3.8280106430529633`*^9},ExpressionUUID->"ad6b1048-19d1-4d6f-89ab-\
745e9c7e896d"],

Cell["\<\
The individual gate Pauli channel eigenvalues are given by the Hadamard \
transform of these true probabilities.\
\>", "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.827921230338159*^9, 3.827921260322109*^9}, 
   3.828010643053006*^9},ExpressionUUID->"e7b2d136-cc11-4c30-be6c-\
69ae5961839c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Lambda]2q", ",", "\[Lambda]1q", ",", "\[Lambda]m"}], "}"}], 
   "=", 
   RowBox[{"Map", "[", 
    RowBox[{"W", ",", "ptrue", ",", 
     RowBox[{"{", "2", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]true", "=", 
   RowBox[{"{", 
    RowBox[{"\[Lambda]2q", ",", "\[Lambda]1q", ",", "\[Lambda]m"}], "}"}]}], 
  ";"}]}], "Input",
 Editable->False,
 Evaluatable->False,
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.82792126254457*^9, 3.827921299472554*^9}, {
   3.827921436535454*^9, 3.827921448192297*^9}, {3.827921621939867*^9, 
   3.827921629137987*^9}, 3.828010506274725*^9, 
   3.8280106430530853`*^9},ExpressionUUID->"ea1c07e3-7e8b-406d-8ad4-\
d5e8b4e39c00"],

Cell[TextData[{
 "The true values for X are given by dropping the first eigenvalue \
(corresponding to the identity Pauli) and taking -Log, and the true values \
for the circuit Pauli channel eigenvalues ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", "btrue"}], TraditionalForm]],ExpressionUUID->
  "959d1fe2-1c92-4cb3-ac16-94cf7d75df36"],
 ") are solvable from this since we know the design matrix ",
 Cell[BoxData[
  FormBox["A", TraditionalForm]],ExpressionUUID->
  "c861e6ba-f4d7-472b-b6e0-df58e8dd922d"],
 ". "
}], "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.827921311280883*^9, 3.827921346662973*^9}, {
   3.827921653680228*^9, 3.827921696191888*^9}, 
   3.828010643053141*^9},ExpressionUUID->"a0674a9f-1733-4236-b041-\
a8a5bed71dcc"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Xtrue", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Log", "[", 
         RowBox[{"Rest", "[", "#", "]"}], "]"}]}], "&"}], ",", 
      "\[Lambda]true", ",", 
      RowBox[{"{", "2", "}"}]}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"btrue", "=", 
   RowBox[{"A", ".", "Xtrue"}]}], ";"}]}], "Input",
 Editable->False,
 Evaluatable->False,
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.8279214640490913`*^9, 3.827921543606648*^9}, {
   3.8279217006171083`*^9, 3.827921700871777*^9}, 3.828010521905057*^9, 
   3.828010643053237*^9},ExpressionUUID->"2554a7de-21a4-4d25-88d5-\
a95adadffa03"],

Cell[TextData[{
 "Now that we know the parameters of the true model, we can estimate the \
precision of an estimator given some number of samples. Let ",
 Cell[BoxData[
  FormBox["S", TraditionalForm]],ExpressionUUID->
  "17d727e4-ed5c-4603-ae00-5bbeb81cc7d0"],
 " be the number of samples in one circuit with one Pauli basis. Then the \
total number of samples taken is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"S", "\[Times]", 
    RowBox[{
     RowBox[{"Length", "[", "A", "]"}], "/", "n"}]}], TraditionalForm]],
  ExpressionUUID->"1d641027-f78a-4a92-984f-937e4acb7f69"],
 ", since we get ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "455f022a-14a5-423b-9cf1-766780bc900e"],
 " eigenvalues per experiment. "
}], "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.827921758084758*^9, 3.827921902926504*^9}, {
   3.827929199184073*^9, 3.827929231404216*^9}, 
   3.828010643053297*^9},ExpressionUUID->"1799fd51-36d2-497e-bd76-\
a016bb4f15d4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"S", "=", "20000"}], ";"}]], "Input",
 Editable->False,
 Evaluatable->False,
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.827886735824142*^9, 3.827886737390772*^9}, 
   3.827886813585082*^9, 3.827886943570732*^9, 3.82788718235133*^9, 
   3.827887253276094*^9, 3.8278875165362177`*^9, {3.8278882380908957`*^9, 
   3.8278882382080584`*^9}, 3.827921703930738*^9, {3.827921909751589*^9, 
   3.827921915061757*^9}, {3.8279291851140757`*^9, 3.827929186840711*^9}, {
   3.827929250201297*^9, 3.827929295743601*^9}, 3.827931526828125*^9, 
   3.827931606973837*^9, {3.82793215529869*^9, 3.8279321554311028`*^9}, {
   3.8279355633439903`*^9, 3.827935569025071*^9}, 3.827946325521886*^9, 
   3.827950109676055*^9, {3.828010574302*^9, 3.82801059291746*^9}, 
   3.8280106430533657`*^9},ExpressionUUID->"6583d677-2abf-41ac-a501-\
9d170570a539"],

Cell[TextData[{
 "We sample the each Pauli ",
 Cell[BoxData[
  FormBox["S", TraditionalForm]],ExpressionUUID->
  "978b37ac-5013-4489-92f0-5599884bc380"],
 " times to get a binomial random variable Binom[S,p], where ",
 Cell[BoxData[
  FormBox[
   RowBox[{"p", "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"Exp", "[", 
        RowBox[{"-", "btrue"}], "]"}]}], ")"}], "/", "2"}]}], 
   TraditionalForm]],ExpressionUUID->"c09a126d-a1c6-4f44-8552-f8b36d8805df"],
 ". Therefore we use the sample mean ",
 Cell[BoxData[
  FormBox["\[Mu]", TraditionalForm]],ExpressionUUID->
  "f70a8c88-cfa1-4ac6-acca-3270b16a82af"],
 " of this and look at ",
 Cell[BoxData[
  FormBox[
   RowBox[{"-", 
    RowBox[{"Log", "[", 
     RowBox[{
      RowBox[{"2", "\[Mu]"}], "-", "1"}], "]"}]}], TraditionalForm]],
  ExpressionUUID->"164c81b4-7b3c-4144-8d93-527945268679"],
 " as our estimator for ",
 Cell[BoxData[
  FormBox["b", TraditionalForm]],ExpressionUUID->
  "ef7f4ccb-47d9-46f3-ac03-3ed06c2241ef"],
 ". Note that this is justified even if we sample the \[PlusMinus] \
eigenstates and then difference the counts. This is because if ",
 Cell[BoxData[
  FormBox[
   RowBox[{"X", "~", 
    RowBox[{"Binom", "[", 
     RowBox[{
      FractionBox["S", "2"], ",", "p"}], "]"}]}], TraditionalForm]],
  ExpressionUUID->"08d5e01a-1b69-4215-8bcb-1b5371414a6b"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Y", "~", 
    RowBox[{"Binom", "[", 
     RowBox[{
      FractionBox["S", "2"], ",", 
      RowBox[{"1", "-", "p"}]}], "]"}]}], TraditionalForm]],ExpressionUUID->
  "0d6f779c-9449-4d3c-aa91-3db2e86e21a5"],
 ", then ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["S", "2"], "+", "X", "-", 
    RowBox[{"Y", "~", 
     RowBox[{"Binom", "[", 
      RowBox[{"S", ",", "p"}], "]"}]}]}], TraditionalForm]],ExpressionUUID->
  "644b7d1d-fed6-46c9-9a03-7bb410e50988"],
 ". "
}], "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.827921930484518*^9, 3.827922095667637*^9}, 
   3.8279221685402393`*^9, {3.827941641981722*^9, 3.827941712229999*^9}, {
   3.827945678800797*^9, 3.827945688528078*^9}, 3.828010643053467*^9, {
   3.828011596953375*^9, 
   3.828011598618029*^9}},ExpressionUUID->"23ade204-6bbd-476b-a527-\
8a6560f00bdf"],

Cell[BoxData[
 RowBox[{
  RowBox[{"best", "=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Log", "[", 
        RowBox[{
         RowBox[{
          FractionBox["2.0", "S"], 
          RowBox[{"RandomVariate", "[", 
           RowBox[{"BinomialDistribution", "[", 
            RowBox[{"S", ",", "#"}], "]"}], "]"}]}], "-", "1"}], "]"}]}], 
      "&"}], "/@", 
     FractionBox[
      RowBox[{"1", "+", 
       RowBox[{"Exp", "[", 
        RowBox[{"-", "btrue"}], "]"}]}], "2"]}], ")"}]}], ";"}]], "Input",
 Editable->False,
 Evaluatable->False,
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.827885998619296*^9, 3.827886075484747*^9}, {
  3.827886583570771*^9, 3.827886588233365*^9}, {3.8278866574705467`*^9, 
  3.827886670090909*^9}, {3.827886709729767*^9, 3.827886734553978*^9}, {
  3.827886840068063*^9, 3.827886886546356*^9}, {3.8278869283766336`*^9, 
  3.827886936192102*^9}, {3.827886968926755*^9, 3.82788703839587*^9}, {
  3.827922120465809*^9, 3.827922124873329*^9}, {3.8280106179394283`*^9, 
  3.828010643053544*^9}},ExpressionUUID->"28854aa4-4749-42d2-ad08-\
c5d0cfb95235"],

Cell["All of this gets encapsulated in the following functions:", "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.828007929237421*^9, 3.828007937288951*^9}, 
   3.828010643053608*^9, 
   3.828797778641323*^9},ExpressionUUID->"a06bc29f-fcb0-48b9-9420-\
88564c71bf47"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"CreateModel", "[", 
     RowBox[{"n_Integer", ",", 
      RowBox[{"err_", "?", "VectorQ"}]}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "\[Epsilon]", ",", "p2q", ",", "p1q", ",", "pm", ",", "ptrue", ",", 
        "\[Lambda]true", ",", "Xtrue", ",", "btrue", ",", "best"}], "}"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Epsilon]", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"RandomReal", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{".5", ",", "2"}], "}"}], " ", 
             RowBox[{
             "err", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
            ",", 
            RowBox[{
             RowBox[{"2", "n"}], "-", "2"}]}], "]"}], ",", 
          RowBox[{"RandomReal", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{".5", ",", "2"}], "}"}], " ", 
             RowBox[{
             "err", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
            ",", 
            RowBox[{"6", "n"}]}], "]"}], ",", 
          RowBox[{"RandomReal", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{".5", ",", "2"}], "}"}], " ", 
             RowBox[{
             "err", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
            ",", "n"}], "]"}]}], "}"}]}], ";", 
       RowBox[{"p2q", "=", 
        RowBox[{
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", "-", 
             RowBox[{
             "\[Epsilon]", "\[LeftDoubleBracket]", "1", 
              "\[RightDoubleBracket]"}]}], "}"}], ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
              "\[Epsilon]", "\[LeftDoubleBracket]", "1", 
               "\[RightDoubleBracket]"}], "*", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"RandomSimplex", "[", 
                 RowBox[{
                  SuperscriptBox["4", "2"], "-", "1"}], "]"}], ",", 
                RowBox[{
                 RowBox[{"2", "n"}], "-", "2"}]}], "]"}]}], ")"}], 
            "\[Transpose]"}]}], "]"}], "\[Transpose]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"p1q", "=", 
        RowBox[{
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", "-", 
             RowBox[{
             "\[Epsilon]", "\[LeftDoubleBracket]", "2", 
              "\[RightDoubleBracket]"}]}], "}"}], ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
              "\[Epsilon]", "\[LeftDoubleBracket]", "2", 
               "\[RightDoubleBracket]"}], "*", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"RandomSimplex", "[", 
                 RowBox[{
                  SuperscriptBox["4", "1"], "-", "1"}], "]"}], ",", 
                RowBox[{"6", "n"}]}], "]"}]}], ")"}], "\[Transpose]"}]}], 
          "]"}], "\[Transpose]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"pm", "=", 
        RowBox[{
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", "-", 
             RowBox[{
             "\[Epsilon]", "\[LeftDoubleBracket]", "3", 
              "\[RightDoubleBracket]"}]}], "}"}], ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
              "\[Epsilon]", "\[LeftDoubleBracket]", "3", 
               "\[RightDoubleBracket]"}], "*", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"RandomSimplex", "[", 
                 RowBox[{
                  SuperscriptBox["4", "1"], "-", "1"}], "]"}], ",", "n"}], 
               "]"}]}], ")"}], "\[Transpose]"}]}], "]"}], "\[Transpose]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"ptrue", "=", 
        RowBox[{"{", 
         RowBox[{"p2q", ",", "p1q", ",", "pm"}], "}"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"\[Lambda]true", "=", 
        RowBox[{"Map", "[", 
         RowBox[{"W", ",", "ptrue", ",", 
          RowBox[{"{", "2", "}"}]}], "]"}]}], ";", 
       RowBox[{"Xtrue", "=", 
        RowBox[{"Flatten", "[", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             RowBox[{"Log", "[", 
              RowBox[{"Rest", "[", "#", "]"}], "]"}]}], "&"}], ",", 
           "\[Lambda]true", ",", 
           RowBox[{"{", "2", "}"}]}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"ptrue", ",", "1"}], "]"}], ",", "Xtrue"}], "}"}], "]"}], 
       ";"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SampleModel", "[", 
    RowBox[{
     RowBox[{"A_", "?", "MatrixQ"}], ",", 
     RowBox[{"Xtrue_", "?", "VectorQ"}], ",", "S_Integer"}], "]"}], ":=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"btrue", "=", 
       RowBox[{"A", ".", "Xtrue"}]}], "}"}], ",", 
     RowBox[{
      RowBox[{"Return", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Log", "[", 
           RowBox[{
            RowBox[{
             FractionBox["2.0", "S"], 
             RowBox[{"RandomVariate", "[", 
              RowBox[{"BinomialDistribution", "[", 
               RowBox[{"S", ",", "#"}], "]"}], "]"}]}], "-", "1"}], "]"}]}], 
         "&"}], "/@", 
        FractionBox[
         RowBox[{"1", "+", 
          RowBox[{"Exp", "[", 
           RowBox[{"-", "btrue"}], "]"}]}], "2"]}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.828797780993561*^9, 3.82879787378086*^9}, {
  3.828798005818554*^9, 3.828798030669839*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"8c05b36c-2d33-4210-9580-e0e9c13f29f6"],

Cell[TextData[{
 "This function converts an estimate ",
 Cell[BoxData[
  FormBox["Xest", TraditionalForm]],ExpressionUUID->
  "2d3745f8-b476-4ad1-90d4-256d1b1f51fa"],
 " of ",
 Cell[BoxData[
  FormBox["X", TraditionalForm]],ExpressionUUID->
  "b4976758-65a9-4f34-9dc9-de84d8fa4e19"],
 " into an estimate of the error probabilities."
}], "Text",
 CellChangeTimes->{{3.8280110007857513`*^9, 3.8280110612822742`*^9}, {
  3.8290712708692513`*^9, 
  3.8290712721168203`*^9}},ExpressionUUID->"63c81b10-73e2-47ea-9db0-\
8355637e7a14"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ProbEst", "[", 
    RowBox[{
     RowBox[{"Xest_", "?", "VectorQ"}], ",", "n_Integer", ",", 
     RowBox[{"\[Delta]_", ":", "0"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[CapitalLambda]est", ",", "\[Lambda]1", ",", "\[Lambda]2"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[CapitalLambda]est", "=", 
       RowBox[{"Exp", "[", 
        RowBox[{"-", "Xest"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Lambda]2", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"{", "1", "}"}], ",", "#"}], "]"}], "&"}], "/@", 
        RowBox[{"Partition", "[", 
         RowBox[{
          RowBox[{"\[CapitalLambda]est", "\[LeftDoubleBracket]", 
           RowBox[{"1", ";;", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["4", "2"], "-", "1"}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", "n"}], "-", "2"}], ")"}]}]}], 
           "\[RightDoubleBracket]"}], ",", 
          RowBox[{
           SuperscriptBox["4", "2"], "-", "1"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"\[Lambda]1", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"{", "1", "}"}], ",", "#"}], "]"}], "&"}], "/@", 
        RowBox[{"Partition", "[", 
         RowBox[{
          RowBox[{"\[CapitalLambda]est", "\[LeftDoubleBracket]", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox["4", "2"], "-", "1"}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", "n"}], "-", "2"}], ")"}]}], "+", "1"}], ";;"}], 
           "\[RightDoubleBracket]"}], ",", 
          RowBox[{
           SuperscriptBox["4", "1"], "-", "1"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"ProjectSimplex", "[", 
          RowBox[{"#", ",", "\[Delta]"}], "]"}], "&"}], "/@", 
        RowBox[{"(", 
         RowBox[{"W", "/@", 
          RowBox[{"Join", "[", 
           RowBox[{
            FractionBox["\[Lambda]2", "16"], ",", 
            FractionBox["\[Lambda]1", "4"]}], "]"}]}], ")"}]}], "]"}], 
      ";"}]}], "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.828006440431118*^9, 3.828006509358164*^9}, {
   3.828006547894433*^9, 3.828006640325349*^9}, {3.828006678878438*^9, 
   3.828006696459999*^9}, 3.828006778661055*^9, {3.8280071579317827`*^9, 
   3.828007163422513*^9}, {3.8280072767375097`*^9, 3.828007295968161*^9}, {
   3.8280075129059143`*^9, 3.828007515424534*^9}, {3.829149561730268*^9, 
   3.829149570791884*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"ea6781f8-a49d-4e9a-8783-0a28219dcab2"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Performance", "Subsection",
 CellChangeTimes->{{3.8280108197780523`*^9, 
  3.828010824032892*^9}},ExpressionUUID->"67447b27-fbc2-4a8d-974b-\
2145e2a18699"],

Cell[TextData[{
 "If we quit, we can load ",
 Cell[BoxData[
  FormBox["A", TraditionalForm]],ExpressionUUID->
  "6402213f-0859-487d-9a7c-23aa9fbb570d"],
 " back from the file. Since we are working with the no-leakage model, we can \
just solve for A by looking at the number of variables. "
}], "Text",
 CellChangeTimes->{{3.8278820478052397`*^9, 3.8278820773204327`*^9}, {
  3.82792037337982*^9, 
  3.827920392191827*^9}},ExpressionUUID->"5a1cd1bd-1cdf-41f4-b77b-\
e1b99dbf9260"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{
    RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\</data/\>\""}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Get", "[", 
   RowBox[{"\"\<n=\>\"", "<>", 
    RowBox[{"ToString", "[", "n", "]"}], "<>", "\"\<,kk,dd,M,A.txt\>\""}], 
   "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{
   "\"\<Loading data for circuit list M with\\nn = \>\"", ",", "n", ",", 
    "\"\<,\\nkk = \>\"", ",", "kk", ",", "\"\<,\\ndd = \>\"", ",", "dd", ",", 
    "\"\<,\\nA = \>\"", ",", "A", ",", "\"\<.\>\""}], "]"}], ";"}]}], "Input",\

 CellChangeTimes->{{3.8278819785434093`*^9, 3.827881995249181*^9}, {
   3.827882044287735*^9, 3.827882045176484*^9}, {3.8279203637354927`*^9, 
   3.827920366959799*^9}, 3.827920469757106*^9, 3.82793197734895*^9, {
   3.8279320955516243`*^9, 3.82793210228366*^9}, {3.8279321720083017`*^9, 
   3.827932180285215*^9}, {3.827932251403425*^9, 3.827932253772694*^9}, {
   3.827932359302643*^9, 3.827932384111354*^9}, 3.8279345860383587`*^9, {
   3.827935477824173*^9, 3.827935477885509*^9}, {3.827950076232752*^9, 
   3.827950076745162*^9}, {3.828004356520076*^9, 3.8280043578835897`*^9}, {
   3.828011618721732*^9, 3.82801161901938*^9}, {3.828011943001783*^9, 
   3.8280119638352003`*^9}, {3.8280120118385687`*^9, 3.828012026673723*^9}, {
   3.8280141126276627`*^9, 3.828014115989215*^9}, 3.82801638114683*^9, {
   3.8280166164157677`*^9, 3.8280166175662193`*^9}, {3.828016649488559*^9, 
   3.8280166495470123`*^9}, {3.828017253841613*^9, 3.828017253903203*^9}, {
   3.828026398164015*^9, 3.8280263982294273`*^9}, {3.828796782009954*^9, 
   3.8287967820451927`*^9}, {3.8290642199833927`*^9, 3.829064220060087*^9}, {
   3.8290651875268993`*^9, 3.829065229092845*^9}, {3.8290712794363117`*^9, 
   3.829071279576859*^9}, {3.829072317065011*^9, 3.8290723194283524`*^9}, 
   3.8290723643722973`*^9, {3.829072546397427*^9, 3.829072546504115*^9}, 
   3.829140034277362*^9, {3.829140079127162*^9, 3.829140081669825*^9}, {
   3.829140387002492*^9, 3.829140387346307*^9}, {3.8291404670504303`*^9, 
   3.829140468016757*^9}, {3.829140622116808*^9, 3.829140623912562*^9}, {
   3.829230218468014*^9, 3.829230288710828*^9}, {3.82923033871712*^9, 
   3.829230356800275*^9}, {3.82923045840552*^9, 3.829230532195489*^9}, {
   3.8292305789146767`*^9, 3.829230581602191*^9}, {3.8292315750075903`*^9, 
   3.82923158713448*^9}, {3.829231681784671*^9, 3.8292316905898333`*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"5b25beca-abb0-4fc1-b4f7-266d9b5effdd"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Loading data for circuit list M with\\nn = \"\>", 
   "\[InvisibleSpace]", "100", "\[InvisibleSpace]", "\<\",\\nkk = \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "1", ",", "1", ",", "1",
      ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
     ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}], 
   "\[InvisibleSpace]", "\<\",\\ndd = \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "3",
      ",", "3", ",", "4", ",", "5", ",", "5", ",", "5", ",", "8", ",", "13", 
     ",", "21", ",", "34", ",", "55", ",", "89"}], "}"}], 
   "\[InvisibleSpace]", "\<\",\\nA = \"\>", "\[InvisibleSpace]", 
   TagBox[
    TemplateBox[{
      RowBox[{
        StyleBox[
         TagBox["SparseArray", "SummaryHead"], "NonInterpretableSummary"], 
        StyleBox["[", "NonInterpretableSummary"], 
        DynamicModuleBox[{
         Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
         TemplateBox[{
           TemplateBox[{
             PaneSelectorBox[{False -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                   GraphicsBox[
                    RasterBox[
                    SparseArray[
                    Automatic, {10, 10}, 0.93, {
                    1, {{0, 1, 1, 4, 4, 5, 6, 6, 8, 10, 13}, {{4}, {6}, {7}, {
                    10}, {5}, {9}, {3}, {8}, {5}, {7}, {2}, {3}, {7}}}, {0., 
                    0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.}}], {{0, 
                    0}, {10, 10}}, {0, 1}], Frame -> False, Axes -> False, 
                    AspectRatio -> 1, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                    FrameTicks -> None, FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameLabel -> {None, None}, 
                    FrameTicks -> {{None, None}, {None, None}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox[
                    "\"Specified elements: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["305680", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"10155", ",", "5070"}], "}"}], "SummaryItem"]}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}], True -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                   GraphicsBox[
                    RasterBox[
                    SparseArray[
                    Automatic, {10, 10}, 0.93, {
                    1, {{0, 1, 1, 4, 4, 5, 6, 6, 8, 10, 13}, {{4}, {6}, {7}, {
                    10}, {5}, {9}, {3}, {8}, {5}, {7}, {2}, {3}, {7}}}, {0., 
                    0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.}}], {{0, 
                    0}, {10, 10}}, {0, 1}], Frame -> False, Axes -> False, 
                    AspectRatio -> 1, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                    FrameTicks -> None, FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameLabel -> {None, None}, 
                    FrameTicks -> {{None, None}, {None, None}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox[
                    "\"Specified elements: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["305680", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"10155", ",", "5070"}], "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Default: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Density: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0.005937165259969486`", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Elements:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"\"", "SummaryItem"]}]}, {
                    TagBox[
                    TagBox[
                    GridBox[{{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "1", ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "34"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "1", ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1499"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "1", ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1504"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "1", ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    ItemBox[
                    "\"\[VerticalEllipsis]\"", Alignment -> Center, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], "SummaryItem"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}]}, 
              Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
            "SummaryPanel"], 
           ButtonBox[
            DynamicBox[
             ToBoxes[
              If[
               
               Or[$VersionNumber < 11.2, CurrentValue["RunningEvaluator"] =!= 
                "Local"], 
               Style["This object cannot be used as input.", "SummaryEmbed"], 
               
               BoxForm`EmbedSummaryLabel[SparseArray, 4973128, 
                Dynamic[Typeset`embedState$$]]], StandardForm]], 
            ButtonFunction :> 
            BoxForm`EmbedSummaryInterpretation[
             SparseArray, 
              9367236567715039801748072135833695858043567507159208431264, 
              EvaluationBox[], 
              Dynamic[Typeset`embedState$$], StandardForm], DefaultBaseStyle -> 
            "SummaryEmbedButton", BaseStyle -> {"DialogStyle"}, Enabled -> 
            Dynamic[
              
              And[$VersionNumber >= 11.2, CurrentValue["RunningEvaluator"] === 
               "Local", Typeset`embedState$$ === "Ready"]], Appearance -> 
            Inherited, Method -> Inherited, Evaluator -> Automatic]}, 
          "SummaryEmbedGrid"], DynamicModuleValues :> {}], 
        StyleBox["]", "NonInterpretableSummary"]}]},
     "CopyTag",
     DisplayFunction->(#& ),
     InterpretationFunction->("SparseArray[<305680>, {10155, 5070}]"& )],
    False,
    BoxID -> 9367236567715039801748072135833695858043567507159208431264,
    Editable->False,
    SelectWithContents->True,
    Selectable->False], "\[InvisibleSpace]", "\<\".\"\>"}],
  SequenceForm[
  "Loading data for circuit list M with\nn = ", 100, ",\nkk = ", {2, 2, 2, 2, 
   2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}, ",\ndd = ", {2, 2, 2, 2, 2, 
   2, 2, 3, 3, 4, 5, 5, 5, 8, 13, 21, 34, 55, 89}, ",\nA = ", SparseArray[
   Automatic, {10155, 5070}, 0, {1, {CompressedData["
1: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
Mzdy
      "], CompressedData["
1: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
mtuG4Lg/j6I34yR3lsRqic0S3QX3qOzkbP33j9CXJ5HbQt9rifGSN0F7KrmP
JQXcTyBHfz6b+PpLzuOSM5f4mhGX1p9E+brPrME0K/YJeDXsZMmfAwxr4Zk+
Ccx49IbrsDau8zTVsN2ZJjGd8M+QTp35XMzlB3cnT4ZwTQTXM6RbOfxdPuHq
z3D1Tb9iZ8eo38zNzvgmu7k/G+KHe+J1hfVoKmb/rPMV9n486d6pSZgl6/H+
YunhnTB8l1xBXqLkVUq/cnfXS2yU6Cp5zbA3ByQ/SfIrpEf3uTlh1oK7G2EO
CiZZMBUJ8yzttva4B+2z7qRpsruymzH+nshvht08iF02bc2ohmHNTy+HPQCs
aWzmPFm/+tD9cN/Mk/XP6vRFvtbhvim3+ehHOdwnr30A3SH3pxn10DgHIrcZ
+ul782SMGZjuQQ7v+/MkzX2F5H8lsUPiScnvL3s4IDnoj35vLbFSvn0rMQ87
8Qzlaf3nJFbJ9y0Se5D3FPIGEldL5GrNNaipO8x1rS/PIl978jXqa26YBn8D
pmcd9BiONXGd1sDYvihuA/R1Bc5q2T34G2odcnffAq+1n3Ecse6wldOifdoE
H8b1JPmIpael49lEc+4W4ulAyI23AA/fkc2iWwxfsd4K1rKBdqVbDE+x9LSm
HVI/W3X3BT8HHE9LDBWOL1My7vDzEi9JbMsW1b1Q/w43JSPfdonP5fuX4HsW
fJbLnG3AuZM0PE39MB1W22p8ky2jZ8sPq6HadpGmZx2/YUyL3eF3hHkq6Uoc
96cledFb/z5bcGNeVyvi302en0q60rf30pJmoDX2kr5m0DeQtLXKc6WnfdmC
WgNj8CvvftLVDLoGOk2tSEtc9ri4nBLTJX+GxNJcQe5x4T0pkTcSzOBFifYS
r+QJ8uZLrMQeDZP8E6lB3gvEOVO+fyaxFnnDHe9LxMn7bHj1MRuabLdtbszD
+/hCDE7tx0Jotr0eTntwwu31izE0zRX8F/BkPMOSM9f1PGnaRlzawwXw94y7
M+Z50eGnA6dehhFGPbzgavAMhsfgfy5P+Cy2E8/n8L2UfPMOxvIdNg/lnYvd
X0mzHe72+oR7v16MoW02ZruWuIYl/7u+NqTNuBYJR6ukIM++ZZOfZ88e3fvF
mFdr1FklNfJFovv/qkQC+AyzBJg2hMlPGK31cp7oHS6DDr5Fu8MEN9vlpGc4
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
8xnVM091qF4z6BuAt8PepNpOl/E/i9whxM/vk+mrSfMzXQOB+xyYH2kuNdz8
uHcD6f343M3fZlvdzdW0DkQvFKf+G0rOrQnye7r+dzhSAi7F3ys/Ly0/rySR
LN8q6d8l6989SrTCfiwGxwmJnyVOSzQS3O3ApcTALQXuOOFsxx8lPdqriiH7
zrtuuEecXsVybeNolRrt3VLXtzA9jzk//4V3sePl/uhdPkgebT4V6UaPIq+p
82S5XP8Z1B6Cvv7ofCjPQ87Dv/EsBs8J1w99K+6Pod2/G0vc28HvzX3/wZfx
qSbf0zBdTf6DR8/J8+ee6U2UFJ67JVL1v58g+SPxdi7DfZySKIF6acnR/R4l
ecsjGblKSU4NiQjy2kjeCPCtAN9PyL8NdbW/qbhJq6+1T4GzDGprXhryWINy
Lwe3aSkLHYqJEMb0qBbToXd8M/KToYV72QazHom9W0Y3bRz6htwEfBrhFTcK
e7ac3hCteQv8J0OjYVqj3gjUW0H1TqHWndCb8i96F5PeE+kZPd8BfJjepaT3
OGqWg96UTPQuJr0noLeHYAdLVBTsz4nyXgPzjuS/K7FS8tdi3r9I/Cbxu8Sb
+qYnBJ407z2JVZFAfxdwVgBnNeLUvNXEeYY4dZ9Mj+59deC1h6pLe2a67AZM
30mnT7neBE9V3E9V2mHTbDyr6J7sXrqQlmqkpRppYY7VpIV9mSe907vAkwae
NrgT87WcPP3keN4ER2Xcut2YeVkOHz/TDDS/CtWs7moabjXV9H00/fp+1AZX
BPpb4WZ5LivcXH4OmfOb4KuJ98hun+eygubyk5uJYmuRlupOC3OsdlrY3+vC
1R+7fLX+NymwJzUk1mCff5XoJDnDkac1ObemxDrkngXvG9CpuXklr1ZKoMHq
9gRfBcdXDbX9Da6je7EavaG9QkJGfM0Q/BrCq59euPm86F2tEIzd/FuoYzVq
uJtXbuV8G57YT02Xqz5Mf2f0yHqaF/2s5TBr0VvrXVfUqeh6V931zt6adeTF
aneHp4oJGfE1Q/BrCK8+u6HnedHvWiEY63UfyX1f4pToHJ0WcG1Ev85J9JVv
YySmo29nJF4TrjGSuz4SaD0v8ZdEP8n5BLmnKXcseDeA9w/C6H4PgAbt86nE
K/dcdW1Ej88BM5B02XzOhGBNq9ZfT/fyu9MwiLQr3+lM+NTPBnCxF73BEc7L
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
iGqI2oi3wXka+HLAH0uLdE3rHZxvo1b5QOsT4JKpdb1ofSxzrj68lqns2Tbp
26ecf/OWHMyran8i2u43bpeOJdinT4WvdWXn7ZNsvGkPj3JPw95vkz35lLtr
Wsp9l1yvSXfrGDkF2Gt7l/8QH76N5vqEPPOsPXxfvhmJ3mer9MB9J8X04Lrg
fT4Q7fB99BtwLMG36UPhJ3qf0Nsn2XgLZ3wL9HYjukKvG2JaSuShIOe9BnGP
A7NXcNPZW8OmEFudupvps3vBzDdIzcjMazv0JPWsz6oZ7mUyvfhOVReNp+hd
NaZRQ/kpwq/B78FW8syj4lPlW/As9csF+v49MF+m9xxrKZf87/441jxUl74/
wx6VS87aJ8ensqfeM/P8PPOUT9CzT2J6VkV6ZhovsKbyMT37JKZnVdgz6/d2
8rxn/r1Llf6ekytHjhft9xnW83xqlDsJ5y/j/Hi+KN9MxHben8c+1kTUQ+QG
9iXBzqJWiK9FvPXT8tosvxrMsvoI59rfIonc15jT+erRueeRX1Ny5yZ/T8AP
fYcaoX/bsX3BjoX+ddfcu/EOBLmnSo+dd57MVK3Av2nsj9GYFZNfdbwP5t/2
fofsvXr3/U8ibhdzdWed7jWV+tXFY25ydgacWYG+89zT3zmjWfwYUSU5wr6A
eAnxMqJQRjQDdRE3IP7JGelXBfZFzpnp5OBMf4moFqNTmDp1qJMzV2ZO7UGY
2/Pmor7nVo77qM2azs2V6SORtvlxL/m5S1/Sj+5eyPGdcm4B7mzV5H/vrPny
nU1mjo/pK1GOQpLDa8/DHOpvVjZ1eU73mJe5qybHfyvcp+XMx1zqM1GuQpLL
vX4E3mnEH4hbMYMPgftoSoTfIfNSH9EQ0dR+fgN70n7PBe4RxCuCa2C/H+Du
O9F0nOreIHo+08fEi/VN/YTz+Uowow1i9D6lT9NyD6rzCr2oTn3hfyJ1uB+t
RbV2BLvnXmz/vpC6qgZ1vZia2ZP6Ae9z+q8q/l+k7wbEfCYeq8Z4VH1/I+29
fwf+Kx6r/T96r7U2iNH7mt6r/Y/eq0594X8ldVX7f/Re31Dn9FtErqSIP4+z
uhOxO5jZRsL5BvEPYi7xuwJsY8QJmW/z45qe23bgLHWsj3M5+467gTqGOyMe
DTuP2F3EuTfb1V+o528a1mI9/Fn0vGdh7a75Ez06TmtuzH6cSrDLiXrZUPz+
GKOfyHdjcn5I4H9H8Bb1pTfWx+8lT9gf6+PvuM+AblHE7QUjL/MRjyFeBeZM
WuShGaI5ohXiN3BSgL+N+AWIhYg97E8TxK/A5KeueXaM6b5G3aai6XOZJynT
z22cI/ejvXVvYY+bxGjmTor83k4996J6e2Leq5lonJuUWc+8lKz1qM5rMb4a
BZ5sl3ImZe271rgrQX3NYnTOScp8C61rV0xNTYSXIynr+8yNqWlXgnoaF8r6
drb3f+fL+m7z5N3CN2sUvJPx/8qX+UbaX32fRuyB4f+U+Xo08B6+RcNgdvOB
c7HM7yLEz/bfMUKNl2dkzvBNxCcBe7ngFyNOp0XaxrlMODcyT156Mz+/EHsZ
9d2L7ch51L6VM7CYe/ez6BunqWgbrzBrcN4i8k6Lp6aswXa8ULDfhv1FPPmO
p1HX+7mIe639Mc10+nbcYuLCvtwofU+V+QjnbU/qv/vUOJgTqyOZeW8PNBbz
uxL2zeu6UTQKssZQYxE1Tgfv2ox9tL4XCL5nrwV9tJ5fAEzppEjPvJxFXIG7
q9i7FohB+JleBJjyxBnmV+KuRFxNbEtEG+LPB7ZEUqRp2CupadhWxPl8X0oP
3mvvy1npjXvyPrsv17iM/lTDfaqG+3Ud9exal9B7uHNnAj2tSfdQ67N9vDKo
7zHZyV/l/cIam9OfezOtq4I6XetsoBPW2Zw9axPoXRHU6t8L9RVX543Usm9H
Mda3WL4fv8qceV03Sj3Gu4i1OO9swPEabgy8G/dC+vZvluZTv83JuytXNOvF
OcOrOce/IX5Pi7DFZeZbIzow39VJEeYP4q7JiDRvp+Y1MZqGvSbQbEtN81Iu
KcKfEQ9XiG/jqQfLUybYU/ekvGskn3ssG+RSjnt0b7dzd68TztnA45WSq5XU
Zd+ICsE3Qj1eKf5asg+Wq2JMLuUUZ57W4tFylZK+/yoer4zpR0vxaTmvlW+T
e7xSetKK/ixPyZg8ii8uOdzjQHBbgNcesQa8P4H/C5EzPfJVAlGKc9QecTOi
C6I/eI3IW5UScf4W3rXCaye8AeA1Yx//JKdkRuTlXpl992T1rAp2IPR4jfjU
Gda8d4t2I9FeE2iHdVwjtai29uIe0W4mc6V+/5bdLRns723cXX0Hf2utVevU
/IPJ1/dwvtajtWhvbiXf30Vzu+9r6LsN52aIfFMSvVXov3jMO7UO3ukO0U30
TmFdxWPeqHXwRneKbvhGWus1MW/UlnPbELyuiBH4GTSyYNSrd1IjD2U4wx1l
zm8A9pYAfwT40sTegmjAGkfh/ii1rA7ds9aBzirm9d76npaWfbuF3FaB51X0
ELfnZYTvddj3oSX92Rscjcnr3wbDNg28rqHXv2SWrhWv7enVuE0Cr2voNe7b
Ukb4HaVXjel1Fb2Geb2+m4Jc3k/PU5I5XPvGoK4jqVm/X1bPLXz35vKmq6Vn
ql2KM+DvvAa8NuD0QbRJzpFjc0qEtbuuNoM4H4Boi7tc6Zn5OpHbzn6HRrQj
91zBdKaGeVvDOe4muXQ+N/O9dJ6da7zu4iPcg3PTs9bVOcjZQzzG5cwV8DsF
vm2fOmXj+wj3R/eri2gYv3MC/0eYvwPzas4u2fg+wro7SJ+NZ3vdQbzaLGzm
LPh+d+X+dxRP/h04Nz1z/jqL5s3iRTVzCd77tiFXNDe9bHaBHwv8FuDfB/7D
1H/PUXdET+bqCc446n+QGultoV5v6o23f8vMRq8b9bZwPvuxF+5FueG8Otd2
oi955ueD1My92EDd/qI7Pqgx1PUajTuIPY/rjfbCah5IrPYkrNd7NFh0wx5p
T6y22/mWcT3xOp1jtd5GvPcirG8Dde8Q3bAnrus1rgTnVcQ4my9+P/IBcz10
q2REdfVA9EGsAm4S3z8JmEoZkcZqakyzHaVGftxXFo1e1NhIrM+m5+0U0wPr
cT7W6H50vlxzk+hNymbek6hVKZj7zYGnaf/DU37qVI7x5L1aS82eUqO/m/bX
8euIdf86a97rrnyz9aLtPXdt7bv353Gpr3fQ83A+sut5d+n5E6LnnuO+CXE9
tz5tDTxN+x+eEvW8ezCfhxBj6ac74lPwC4BbjbPa235XIHYfYoxgjwGbnB7p
VyW+L/Hm9QFgjwNTUDB9OP+mNVFq6M49+JTvXYBvbpxqshOuv5reJ8RoHKNG
ssyNanhNtsvjZY+Pk1dQcvs+W66pQZ+S6LMS9V3XapsS9CmJfiplZPair/TW
+jWZnOPEFwzwPfluK9m/mQn6l5++Kgf96yH9W8n+zUjQv/z0WznoXw/pn73B
dPmGHSevoOT2nu8CdlVSlCMV99UzIo3dOP8Msc5+58FdT0Qa56UG52UAYiBi
J7HL7HcyYlOIrUlsP2Ktp29wtlexrz7bqZzv6jLjhn+T+sZZR47nca55857W
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
8Si96KypL+O+yVl2f97P/8TkVb/GfUvyum/P675tN74JPO8XzzeJ57fFs++U
+t1PvzeJ38OBX8+nXveL15vE69uBV9+XrwK/B8RvC/Hrb617pn4P0G8L8fuW
eNV86veA+G0hfnUebH5OIXbliXCjgdkkc/MF7n6il1c4g1cB9wBwG4g7Kl4+
B/Zn4l8l/mrgxwC/MT1rj39hb17mDlg/RrMn5uFd6p1hTbs531dzVx4gdgN1
vSbzfJacHeRcRc4YcjaKd+3Fb/R+iN6tJ6Poa1161t78R/L9jtiTJ8ozit7W
pWftkdXyh30f8kQ1jKKfdemZvfmLvvfR9wjmXs/c70mf/2b/9rN/V3PvHyDe
+/IuPf5D/GvEX0X8GOK1J8Y5B9hPgT2G+Au/u44DbnN6lD8H7j7H+d84H4/z
LXyv9xE5cfe1/Y6O+Af3Y3H/OO8/lJkzfZs7zeEzOI5zuFn6rfOag1z34Lzx
5G0JvqPvCzcnuerR+WPJfzzgfyi7kMRdcN82J+bd92Icd2Nzetb9cH4+8j8n
92/hjid3SzCfmj8/+e7fNP4RjbHUeDzQeF/2M4n7GdbguzqO+7pZdta5+chV
/84bT94W2ckPhZuf3NC788eS/7jwzffV4H0EfI6COXKUBvZjnB1DXI7zj3H+
JeIc+78fxF1ZxEe4uxZ3n+D8K0ROufuEXJu/q4MZd32d9Y8Fb/mO29/liNec
yvmIePPwGbAniM+ZAO+ectDTF5xr9xPu2MeC1x78HXgKeR+Ro735O/AVctxb
TnrTvXF/4Y5/LJzLpQf/BP5C3kfkXCt9/ifwF3Lc32XglEd0xs+6rojJaZHe
ccQlOK+EuB7RBXdTePcp4lKcVUVUF+7UtEizBDV19lT/E2pcI/qK9Vyf0Edx
yRWnaXmtd1cxb9xsa37TvEJyx+Hdg/m8UvJnpz2V/bEelKaXuF1SLx+zFyXF
TxzH/XzMnpQST9nlmMo+lgGuAiItb44ceYCbjvNnMQ+f464szpNxnhfnM3D+
HM4/w/mXiHK4uw5xHu7z4X4a7rfh/gve2/yE2lqf5/GZ+pycipJT8Z7f8Z9J
ntCL8tyX89yfzXBlRA3x571Ub5/Sm868+3O8evtUvBmnCqKaeHOO+vpUfF0q
nLBvU8XbMfrSfQv7NlW8HRNfl0rtYc+mirdj4qslsMWALYuYhfvtuH8RcQJ3
bXBXAOeXIioiZuP+edy9xDn6GvEN4ltER2KvRJREzCT2BcTLgv8v8T5DLdkP
9+CzOov9cD/GPyE881ZIvDlvNnnuUz06tyO57tW5M4XrvtVzWfpNFr++Q7P4
Hu7X3+QEeeY3Vfw6bzZ57tfe5SvxXJZ+U8Wvc2cK1/063z37DrXkTLhv3+1Z
nAn3/YX4dq55v0C8O3c2ue79s8C78zuS7/6dP1P47v+zwH9zcPODU4S++2CW
+6VmnYuv6LcdZ7Aoom9qpOtz1x53STi/MNB5gTpecwvmu0gwvhee6xbmuZha
fQXzvPj6mpo3M/clMZovMHdbYi5jjxw3O9ijL6U3N9rvDXyTvqlZ99Pf4CbW
c0WMrvt9WWpz7Q70cxX1nWdv9gJzfClv3dp+72GOvoIzbddsRS/XxGh6L14S
L659G3jj7dsJziDgHwH+FeBO4u4nxJ24e8B+H8J9LURN+7cr4B4Fbge/Zd8j
fiT+XmBHEF+P+FuBfxj4nYL/gfPn+XUOq4l/9+Qz+Uowl+7TtNyra1UQz67n
3l1vh+hpHabntahevUDPa3O9nYHeD9wdr9N3qBrf0ut7Xmr7WupqJ3U5V9+i
r9T0vNTj+6E1tZOaVKueaHk9z0stqvUD993r0b2Pe7cX5N2+DN6svdTmOtm9
2QvyZl8GtbWX2lQr0Xu9IO/1pdQ2kHUVB+96RA1wa6dE9Xwr3u/ijFehfh1E
3ZTMPt1NnRK4r2o1Cca0DPed6N3KnNUlp++i5R1KPctZI8ipe+v5Xfc+eqgZ
eFC8+RjC3hm2NrG1ubu669+xT4P4bnXyZmrqd8HfZTB1rba6rM3xqv0tde+h
rvmoLz4GB9+Q7+Tt72COBnmzajvedG+nrvm4IfCh2t+K7nTgF9jPWOMAtxCY
PcCcxt39OJ+FWI7ojPtvCuTI0RCYx4B5LT3in0H8SuzDiMWI7sQ2AnYBsHuJ
/YVYnz/P7XPYUebiBr65+9G5PE2NieLPNdyn6zSkjnt2nTPiZaJ4d53ugU4j
6ng9ruM13SX1+M50DGZY++szfJpc7bXzvRbV0P67hr6Da3k9rtU9RkvfR7W8
pruDd/I97xjsWfhW4d6fppa+l2t5jbWCGvXNVO+MeNN3c73uMXrh26me1zoM
GpNZZztonCgQ1XUneHelRvt1KiNzL+Yg2jPXkNSozuE4e5AaHXD3bYzGz9Sw
fNMQNzOXY7yHns9yPUrNW5jPNIcI1nts+R9BdGLuOM2fiZvNvnUhtpH49L47
3ns0hW/XNW/0RkMEe0b6OJXa3VhbIu1Tom2eHqJ+D3pqKDx/O/fk+WYyV8+8
UZ4hgtW3nUHtXvSUSPuUaM8Hfh3iR+CXpkU9/g0xF2ebEFsQJ3G3jHdnEfNw
9gTiScQp3C1Pyzpfi6jpM/ZjMCOWx338JryFktO5JwPuMuGeFe5j4sm5pwLu
8rSsM+7fdJtz74PP+4+cefPqs/eb4LU/zjlJzjLhnBWO9s05p8hZTo7PyYPS
R9+zRH38md6cp310bqI+/kyPztU+OjdRH3+WPq4Gfr3NIDjNgL0PuD9x/hdi
Dc6n4Lw5zm9EDMXdHzhfi/ONiAlyNwx3v5Nnb6K6Vr9r66z+KfgNzGVYzaf4
P4jV/IofFuDdj735ZsRT9HNS/Oh+/Cl4f4cpxKsn5fxB/OOIrfR0MvCkePc0
Tzjm6ZR48r38U7D+tlOIVT+O/4NYr3VCgB0mWPcxFpiHEY8gfgF2De4Pp0d3
43A2D3EG52tx/nZ6lONvxHicP4ZYhDiL+9W4f4f3/8hczQz0vUbP86dgZ0k+
x3ne3wPd2UF+x7uP3+nTZnhq4EF75z7+kJmfJj4U615cd3rgQbHu4x/Zl4kJ
fAwTH78LflKMj2Hi48+MrPqTE/gZJn7+ZF/mALMC0Qr363F3BHf2/7wgF+JB
nC9AbEC0xv0G3B/FfU7eP4TzhYg1iDa4X4f7d3F/TqGs87SCdVoOq289azzC
+fJ8xnkUsYQ5jdOanA3kHCUnp3DmIhbTh3HakLOOnHfJMV82y/Pp6Qw9raWn
t+nJZ9t9GUd7cYa+1tLX2/TlvJzC0x6dobe19PY2vTnP/Ok+reD7mcfV9PiO
ePxHPI6XPmwgrzV5G8g7KrycwvOeryGvDXnryHtXeObxS8zYz/bNAv4P4DsA
nwfn/8XZH4hlOH8G8SfuOqZEnHMR+RD5Ed8Dc5a47cT9hbhZsHmJ9Vw+p57T
etIhZmbVh3FWiRfjdBSO9SB3jC/nqTfj3hzDDX3qnLjX1vQa7o96dd4m8dua
fp2XI4Ff5arn1vQc8kPPOqPuuQ09606rX+esE79t6Nc5cW+uPPXahl6V6z6P
0+dS4LfIzHkPv+EsPS4zp7P0LfnLcf9E3ihfh5SsuNzU+oJ5ngzy/EgNy/MU
7/6M0TmXOj8w39PE/lXg3/lOsCeGe1Z60SHAeR8+Y++fC+r0Hn9OPfO/TTw6
LpdofUcty/180BPP67pfU/eFvFnrcK2vqGV5X4ypN5do5cqZI8ebwHyC6IK7
ifZvnYhk3KUiTkEnDzDv4P4rRM5k/F0OuEmpET9FcAWA+w8wnxHXTfQMW1Bm
x/L6/Hh+f1/14TPlfoz/Cz05370Z3/Kahnt0vnp1jQKi4b5Vo1uMD6/jG9bg
c+416PtqHT6LXofxvbeu4XX8SQ+u47W4htbiOgVEx2sJdbrF+PF6vpV38b30
msL9DOvKHbzRt/JGruW1/SX9jasvd8x7fSvv5XpeY5xeWGfu4O1OQusfxCHW
d05yVNMz+NYdS4+wSYWy7kA+5H6dc/0scMfTI72fcJeEuzeolYtaTwPzGbUK
iJblzgn8W8zrPsPclrMgcIepmzM5a9/Vg2ubl2Rw3qYPx4ZeDJcXuCPsYS7u
6qTARwH2KwewR/l+/laeP0XqOge4d6l5jmhq/iRqmof8wL9H3Vz8rsT1o4DM
Qm5w3meObjH98Pc9F7gPqH1OoB36ce3LwPkY+O9tdxC9wHkO2C+pm47IQBRG
XAXsz8Ccmy9Hjt7AbQPuc+DO430Jap3Na//FvBw5+lBrO+IL0Ssk82j5bSaP
iwefzV6cz+fYly8D/2nizfWuypk54+7V9XpTbxv1Po+Z+/MCvRLiz+tyvT7i
bzs1v4jxWEj26TLulPbc5txqfZZax1mr766+getcRR2v0TR6U2MbNT6nxnkB
t4R48JqM30c8bKfGF4GPQrL/l/EboG+XS97uaWp9Jm9XIObtXO8q+aZ4Xbnk
7Z5mbZ/J2xWIeTvXKyH+vM5c8nZPS62fydsVCN7uYs71D4hZ2KU5qRHPe3IJ
7j/E3beyG7NTI6/q61LgPgLmpOBcbzv10gR/OfDfyF5qbuun9+8K6v4oezc7
NbM232Wv50r6/U7wqr2NnFTir2b9v8b4dvznst/u/xrmOZU3sx+fU7c4PZ+R
nm6j38/F77XAnY7x6d8U81eSWr9Ir2anZv3u6LyVoq+fYnrrHr6gT+fUBuc3
YAtifl7G/Yn06Lw+zm9A/I67FNy9grtv6Ot8RCPcNUH8gftU3L+E+295fwFn
q7bMl+fQ/no+729h8jy3c92Dct2P7u/55Ls357tH5btf5V/Ama8tc587X+Rb
Z999+w5cIp6dlydf5Fl57tn77/ncr3Pz5ov8Ktf9Ovd87l1t2T31qvOkffY9
vFQ8O189K197nSbeLxXvrqHeVUP7nSY11AC3DuImRM2COXLUQgwAtwjuauKs
vZwPxPmFOL8IUQvn9RCtrQe4G4S7orxTTZ871dY5tzx1mSfEDgywcbmd4x4U
734aANeUfnyW1U+4W0Vk/9rHcAbGcNxbQ+Ab05vz3FvIKRpwbpJ9Vn/hbheR
/W8fwxkYw7kw6EVr4bm/kOP+mgPbBXEtZqsuog7wCzFXu4E/lR5hLrOfK4ge
wJUDpibiMWBeBeZHYC6lTh/EdbirSp1FwOwB5iR1LqGOz1DLILfXWIe9UR9F
CmX1onOovrS36tH4lwa51W+YW717bvdvu9MxG+8DA+8Xim/fuzjPAwPP/q6X
Ss5EngcGni8Uv75TbQPPtckdFPgtKn51H9Wzz5X6LSp+Nad61pzqt6j4tVm6
BVGSc3R7SqTbDGedEMXpoS7u7sDdnfRh71SM+W8ErjOiNLH1YrAXE9sVuGvY
k9uDXngfTK8bohTrUL1FwZxeLLWY5+72eyV5dbPhFQt60BNRif69D9pv77Xl
6IUoE+jr7BdjDb0RFQP/ijPvfYEpT7+3B+90ifSjH6IC+6Z6C4PduVjmybz2
R5Qlr242vGLCGw5OFeCL4pu2ODWq+0rEaJyPQVyPuwtxt4R3VyDG4XwCojLu
iuFuaWrW+RrOGXNd77Hpe2+vFLznMo7nc84S4VwhHPdgHPfhnKXkeF860ZPN
dx16Cmd8scz5lcJzb8atTW8hd4lwrxCuezRuLXoMuUuD/fIZ6EzPpcVzuGuL
Zd+uFJ57Li2eQ+4S4V4hXPdcWjyH3KXBnpvnoeCMQHQA5x7glgGzAnEV7ooj
htme4+5e3C3H+TU8vx/no6xfuLtPeFeLps1RB/bgHs6R43yWPM9I4rsRfy/x
ywUb5jZ8J+LvS6Bvfh4AdiJ3ogP7eg9nVPFXiB/do27k3EvOcsG7p7HAjie+
E/H3JchxteAr01Mxeloq+MvFj+5uN+LvJX45se7F661ML8XoJdQ2H/OBe9x+
BgPXF7ESd2sQb+G780d6hLkWURpRFrEI2I2IwcCuBe4wcH8CV4r3y3C3lnp3
UG8d4k3g/hK9kjIn7uEWetA5DP1YjSXEj2u4L+vl4EBDfXo/SwV8930LfYce
tAb3UJL74f570r/vSuj9qsD7MPHdjb6dq56vCTwPE7896VdzqterxKvvjfvt
Sr/3ZdNvfXvnu+dO9Hxfgl5fLZ6d67670neYW737nDzKeerHeXoH93/LLM2l
n3b2n6sgVtHHEeD+Ia6EeJlHfFtgByBWE/828Pb/jFx7vYC96pUvsy/vsDfm
wXuzkHWZZn9qriP+CPHmpThreox489yHnh3/NvHm5Wp5v8X0bb24k73wfr/D
nmtfvIYlzDOQeQ7T05/pWfuzlP5vp//D9PJnemZfltP3rfky3+odvpflNp8r
2DPTuo1aa4g9Qqz3wvu3khzzOYg+nfM2OdoP560G51lEa/ysG5USna3Cn59H
vIhog/PROH8gJfJWBrEG5y8jdpjH4L4c5811fe5cP27+ypKjeZ2n+eO47sn4
6sv5bf8f/HLcgc307HvgnrPbB+NtEt/OVd+J+KUl9xbx7hpt/58aZbiT7t/3
0v0n2s95gXfnqfc4rvueF/h2ftv/B988PwXOc4j9VjM4m4DbgqiAu0qIp3G+
x94Sd5txXh5nz+DP2xGv288q4VQkx+ZOda0H7dgHx9q8VRD8NuYxbHtiNxNX
nhjNa7gOMZruweb4BcROemhDD94T5/jsVhCev8Ue8toLb7NwyhP/EuIV+mpD
X4nyuL81wtvPHU7kr5z40/3aQ16cv3L0t0b68DrxifyVE3+vArscc7QC8Tju
t/LtKyN227cF50+kRthd+PN6/HlDgL1O5uuQ6OmcOb5igD/IHIp9gnPpmAOS
N5FmZc7wPsnvs+w4x+xlTr9/gnX4Hrwm+UKN62Qv3pJcHWJ8VSiUFf8m83YI
aq0omDckdyJNq2OJvQtiEt72SZw/jbge59XsZ6P9vovYhpiM+6dwV5V3y+xn
IeJpxBThVglmwbU9r+N8NjyXcVYCu0nyOecpwVcV/CrgNoqHRDmqcAbXiJ8n
BFdJfBgurPsJeqgk+Q0X9iDUrBLMena9uE487JLaEvXiOvGyS3qXXS+uo6ef
gc+dC98SYHtgNqYCXwvndRFncHcO7jbjbrf9vQv3Pe3/HhyY6SlRvpqIP4BL
Im4vcb0CXG1qej6fNc9rvZgaM3ehF+NtDfwY13MpX705T/0l4oVedQbc72T6
1T0IvTpve+B3suR1vnpVnvqN44VedQ7d65Sgt1VivDrvmcDrlJgeVSn077dX
vnrOju/ef6T3LeC9iKhk/72TgpF3w1YXv7/mjObsJUTl5CiPaf1Gjcdx/jLi
etx1F40aovFTzijXDsll/fFcf1HL8uyUPL4f+tZ/5oxy7pKcrmU5z7I/hnmV
+boH++FY78dJvske5tads56foqbV8Brzdo3RrC6av1PTfOwTHz1jfFiOX5hj
Pz2otmuepqb5OCA+Qs3q1Pwb+I+B+wRRxf7dErg+BaO7Ooh/cH8cd1XlzvLk
QI4vcf4Vohru+pJTj7OTR2bH9a2+KjJHrqd9cX5e4R8nt2o23Frk5ROe+zNu
NeH2DXLW4Qz/LXPsnivTczfJ6XvmvH+Ed5ycqjEc35UcuTLx7rEyPXajP89R
j3uUR/bIvV1Pb91jelJD+vkb++n84+RWzYZbi7x8wnOv19Nr96CfNaSfHwB3
ElEduH64b4CzD/HnzxHfIWrgvD/O6+O8IeIjnH2BOI2oibsBuLuBdzqjJzmn
1WUe+8m8NiD+U+D+y1yGryH4/oKvLzmOAfs1PRinpnAGCMd92bt/Rk9VYzzV
pR/Dae1VY/zUFS+G135UjfFSV3zoLp7kPlbnTnpv6tGLYb3O74itQWx/wdYX
be/laeJrEj9A8O6lHPD1EH8AWwu4i/D306Y4vxFREecNEd/i7h9EbdzPxffo
4ozIW2NEM2KrAFeL2FxJ6Duxlwi2ieTzefuDM1eLc3cR8aEHw/9MH4avTbz7
ifPiHPNjnDrCuSTj3570zf/gzNfi3Jsv73HozXk/0l8N+usv/qzfjWI8Ktd8
1qDP/uLTuepV5+0P7mAt7uFFGZnvG3p13ll6rUmvA8Rr/QRelWtea9LrAPFa
X7yWotcTwP+KeBSYU2mRP/VWiXPzW75I56e0rDNWmTrf4P53xDxgTlLH56uR
6JVlzj8502HeatSznH8R43kNo7ldsyrz/028e9D817FPhsuRFPV1nuRWrPWn
NN/kHGK9bu97GepZLTmJeVTyNqTO9dSxvOdy9zTvxZLXtStQOzfxntt0TbM8
NS13HmI8t+Mail4NYIsCdyHiDszDXvyOuj81uquOu4txfifO96VG+s3t5yXO
L8f5FYghwrH7mzg/DWR+VN+8OD6cKePVF57nNs6+AN9Mct0gHPWVKFcz1mHz
W0NmWH3OFW441z771YXrXufSa8hpIjlrCk/9ZpfTe1uZvfWdUs/zhJ9ozyqz
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
I2birgbuBpL7qMzRBurbLE0P3tXy2Zv1D3wpf6N4MI0ZgUYtagwIZtP5m8Sn
8WcG/BrkDww8PCyz7T3qGdSQPy2zZ/5NUp72r2fgPX9aZj9nBbukve0ZeM6f
ltlrz/mo7Jr3uxe9+syHvZ4pvXau9roX/To/7LPvrnO1z73o2blhj2dKj7cC
/wziIGIWOLWBnY/zhYgncbbbfkbivA7O5+LsKfz5OcRexByc18X5POLtnVTP
6p/Fua4dzPZ84TzLPIafTXydAD+XWM1v+DnE1w3w7slmYDviFXqaQU+16Mn3
ab7g/Q12Ez+b+DqCn0vsC4iX6GcG/dSiH8e6l1WCP8i9ncXdrR3s73zh+Lvu
Jmc2OXUCzlzivd69xM8hvm6Ad187gHvbfl5hbrYgHgT+BH5H/i4l0lyAWIRY
injXvn/2swTxEHDfA7OEd6bzgf18wN2TiIep84PoLJaZOxTktV5o7tqcrcck
v86XejGu+9EZXhLwDgUejac+Nedi7sCrgc/ZgU97B+2R7436my3+fJeWCP7V
wNfswJfnWCw7uC/wNSfwVZd90P7p/qi/OeJPd3pJwNsX+JwT+NScizkTbyKW
AbsD36OdBSOsz8Mu3L1l3zD6cMw3KZGXudRyHzuBPWw/E4jfBey3xKrfd+xb
LvPsutaXRaJ1BLGctSjuW9azkHWYz6OIJYLdRZ8/iE+v+T/2s0D2RGv/Xup3
v6b/nv3MCvDfiLb5fR+xjhiv3Tx+iPM1snfON2+Lyf0IsZY9eTio9TvqLBI/
H9vPQsF7vd+JJ8efsu8acEcQl+BnTmPMwb341qzC3WrEadxvxt1OxFuIk9C4
FLgmwN2dEXlcbt9UxG/E7kEcIvYyYJsCe49gV1DbZ+wU58x9aM/Vk/d+VcA/
Tb76VI3Qs37T3Ltr/SZaXkeopTWFWl6b78cp2ZGwPt+VsEbdm1WB3mnqbY+p
1fXi6vU3X8Z6Xe830QvrVb2wZtXzmn3HT8mee82671rvwphaXec0dbRW1Qnr
XBjU6Dq/iY7XGOpofQtjavseGhvBe571/AjOT6xFvZ/hDrzA+f/Z/i0wJXM+
zuJ+E+5epM4pwZjWYuZ1vZPM+7Lk9N5Z3j+Y7xXqnQz0HOv5Xfd3+tgReFC8
+fiFuF3s2yl6uCz4BmivfrCfo3wv19V3srf5kXW9St0fxYNqLxXdX+nlNWq7
l0uDb4y//8/285L6qu1Y1/2JXvZRV72o9lLqpuTOkeMAcB8ifkBcDsyViPuB
Gcn61iDWIzKAPQ7MT4grgBmF+w0434g4nzpfIr4JdEaLzjribQYtt8/hu+JB
5zH04z1cS0+mk5E76zy7R9VxvzrfG8TL+YEXryORl9GBF6/rDOvyvdHe6jyH
den32/t9hrW5ltelOl6X8zeIj/MDH15TIh+jY3x4XWdZl++7vle493G1LQve
7Sxr0++H1xfqaY3LYt7vLGtVb15rdt5Gx3jzegtwnj+ynbN/6y4Ycbwvybg/
iLv36dkxwzMiryup5x4LAr8fuE+IfwPYEcRqLanAvce+uqZ7tl5a79Ko9TFr
DHEjWNtqqSedfj8g5w3BD5cd1R4UYg++Cmq8gv0bJf1w/+cxz6cBfrjoF6b/
L+jjCno2vxfg7rMEdZlH91aEGp8n6NUIzt5qzltR+jpGfFj/SPFn+NLA/xe4
tvhePmD/Fsbeb0KUx11FxAnct+P9GN5vRlTC3fWIr3HfPj26M77PVWmZrf+K
d8tlffV8+i3YRK7ndv4J4bcT/piAv5l89+b8r4XfnvwxQf6NnPfSMvOnA98+
9+rdZ2kz+e7dNX4JvKvGmEBjEzXcv2v8HPh3jTGBjw3cwdKyh6c5B+Z/ROB/
tXgvKN6d+wu57QLuGOFuItc9O/dnctsLd4zkNa/XAl8GUQexBn/veRv4x3H+
JKIkzmog1uL8HZxvwVkp/LkcogFinf13BHD+BPGqZfPmenGz7TnKMofhPU8c
PsxteM8fh3dPFYCtQk8nxFPcPrknf4Ma5LivOI75ug64yvR1QnzF4d2Xc+pw
f91XuMfuyd+2BvHuKcRvkZobEOt+Qqx7aQ5cV8QFBeAT2Cm4fwbn2xDVcN4C
0RNRDPcbcD81I+I9K5i2/0fZf4BZXS1L4/CA5JlhGBAFxEA2IypGFBWzYCaD
HiMoQTIYQSUIiErOyUiSDAbAAAiogAoIYkDJKiCYE+q/+t3V39S0v433e563
33tZXdVV3avXnq1zuAfRFHEsMdMRA4ibH3ZD9azvqezddL1f13fexcGH8aaR
15+8hQkc9eWc6eQNIG++7Lp6e4ne1tPbTPFl+AuCp5dYfz09zSyTf07OUU8v
iaf19OS8+WHn1dsUettAb7PD3Jx3WfA4hXob6HG2+FOOepwiHjfQ42z6OweY
K+jrcO5PoZy8ec0pk3+XrkeU5Y4Utr8TnpPyfR7Ob2CdIzJTWp73WvOklule
jSgnmq5nOg1Zqzzz00I9nZVp34yoQKxqu65hruNMKsqOm+4A8WczuZLzPjr0
afNeKP6vYr1jEjwOkPnNp/6NrHtcZp52f9H22g1Yt1KYo9X0O6vPWpUTeu4v
2l6zEbCtEd3tcwucWcAXtb8znJOq+QridURb5HvaWwKmmP3dafu7oojFyL3B
Oh0QD9pnAes4LktqLSLe9+sW0bc9q03fszgH9/JE8P4afemeukerc77sj/pN
2t/FCZ68F6tVN3jSvpJ8eY/+LnTGZdnjNNbzu/E+/fPB5+41vLey7E13Svub
K/2ovvdTlv1Efe1JPXgv/o71vo5gL9PT9PJE2GG/M/1M8L6OYF/T0/SV9Fmx
OMGb93kE+4zeku5uXsLd2czuQpzFXT4L3/PPKZU3l8bI3U3vZwAzOyvl8+xS
+b01Qb4VcecAN4c4rfea4O/hbE/PzJujY19nvXvZ49msV5T9nC31vA/z2Yb4
M+nT8V731dB3O/q9KLzj6PsV8W067RHnUsM5Pg/zfR/iQnr2fJxDR3qtk5n/
rhy3SObaibO6INQsEWbxOv11Jv684LFEmIXhu9jPSuBuRmQjfxe+Yw0tncot
QXRDvjFyJZG7G7nBzL2J6Ipcc+RaIHKQb4X8kNL596oLd8s1bM7Z4sP19LNg
ifC7kd+Y3JLCdT/KfVO4Xcl1j8bPEb77db7fr+17L+67+/a9z+bM3bfv1JvC
fYzcxsIrSZ57dt4S4T1Knvt1bg657tffnb+5Xnxz7nWOeE2a82vi2Ws8xhqN
hZ9u1q+Jd+c/Sr57nyPek+btnwXj7bMb+DrIt7bftSK/FOfLEaPt8w65pogL
kL8H+WHIv838cPtOgVwzxIXI34v8cOTf4l6PD7tdh3NozVmMkD13TeOZbkNw
biHvAvLuIW+Y8N4WnvlpBE5L8i4k717yhgvvLb4t89iE76sO59yasx4hb839
dSucfy4l6e9u+hss/t4Uf90K559XSfq7m/4Gi7836a8r/ekbr8N7bM27HMH3
7v660p/PIYf+WtHfEPp7Q7x1pTefeQ69taK3IfT2Bn0NAfZ5REdgeyMWYde+
xff6NvZ7d97/MsRKxBT7LASmF2IPMG3t9+XArEDuXdaaYZ/FyD/BWnuBa2e/
G5daq4ifQG3b2ajvO9yGezyau/oOvdgsp5CrnpzXlryR8gZWiO4McqNX57cj
f5Touu8x9O17E737+2rDNzaaHtz7aHp3vvp3bltyR8obXSH6M4Qfe/Aa7Vhj
lOh7DyPYg+9w7ME/A9rwc8B68D0YTv/OVf/Oa0veSN77CtGdIdzo3fntyB9V
Ov/O2I5Ntp/j5ByRk7dXQ3H+rH1noJ/FWSlPRwJTLif/DIcB95z9TCV2ScC+
xXk5/gX7rsIZ2XxM19/IStZ70b4vsJ8l7Mfr6XvSezDPL9l3UPIWp+EtDzOY
iniI3hfRu3nyN+kzWSE60+znODW8vuOXs4fpiAfoP2Lc+8vA9KDfvdT1N75K
5jsTcT9ntoR75TX1M8HfhXmcZd9TyFmchrOc+J7API14BlEe+Y65qfP3EQ/j
bCiiAs6PQnTKTfl6BGcjEaMk15m898J+aX3fNdfRz8X3A8+1naMenBd3WX1F
Xueg917Y9cfFZ9x59+v7E7mP0mvkqWd/N8p7TPym43YW3ffDm1PP8e3pjN8R
38p335EbZ+1vWLnqPR2/c9A3/08C/w7wB4D/3v79P84G4Ww4Yrmcr8b5Uzgb
gViB8x9wtjbsq9aJu7uG2MGIMaF2xK4mdghitOhF3Fq+iWFBO76PNcQl9RWx
q4mNvUbc2vDukvT1Da4h3ntK8qD41cT7vKIPxZqXYzIyMr7CLkwA9hf7XSAw
N+Dnzkv27+YRRyK/A/mJyP+K/G+IKjmp/DTEEch/jfwkyVdljenIj8f5u/Bw
LM7q46y7/Y4L8VzpPG3DTCDOPBi2MvE3BE70ZdyJ5Lq+8ask6EXPxp2UwK2a
Rtv6GQf8KuCPA6YB8z0Qz0s/49jPKvZzHPtpIDWdE/sZx35Wiafj2E/Ui/2M
Yz+RWzWNtvUzFviVwFcC5ppSqZz1+4L0M5b9rGQ/ldjPNaypnNjPWPazUjxV
Yj9RL/Yzlv1EbtU02tYP/l/GF/azBLzfs1OYF5krj9yX9rmN3B/c45u46+WQ
22Kfi8j9ydyNyE0h9yjkt/KdTOZb+Z3vZQp9Hw7MdmKeJeYPvgerZXMpC8w2
Yp4j5k9ibqJXq1UBuJ18d5Plbf1ObzfQm9VE+xm7iX1WsKZtNa0e/kfGLmKe
E4xp30hdq4WPhIxv+J6jrnk0XEVg9hAT9Sqz15c4t6OB/ZbYqFuZPVsftYH7
B7gPcdcfIZrgfAbOa+G8YJG885dxdi7OiuJsHXEzee+1eff/8P6d43vQRHZh
Bjm1yDGNJI7jXyb+XOKLEr8uTf2Z3Lfa3Ll/uHdeX/evCec1g5xa5JindJyX
6Kk8PX1JT8/SU1L9mdzz2tz1f7jvXl/3vons/gzyapFnvtLxpsi8ytHbFnp7
jt7S6Zi/U4EvDOxLrL/efreGaAzcHORrIv+n/TNXZl7OasxC7jTkCoE7ldyP
EU2Rm43cWcgVk7rme53Ub8p9M42zgf2bGo51nGFM6xz7r+gSLa/3Mb0aznRP
B+6vwvl1taeXqXmG/VfvFUnWbEKc6Z4J3MHC+XW9z5epeR4wGew1qc+Z1Dzf
YNRUzExq1UG+AHuM/c2k1k3AVAPmU5wfVhL/HItcX3wgPYGYj3xj5CsxXwj5
5sz3Q8xDfgHiOmAqAlMQ+RalUjnjz2XeduIm7kW1hN1wbfOl+tbjfPIbk18p
Db8Q+erP+PPEw3WsUTGhRkHy1b/xvYea7MF2t1qR/Pvr/psE/7Povyb9G7dS
ArcQuep9lnivSe/Grxj4BclV37PE92n0XYiz17flvpsG37Pp+zT6LsS5R24h
ctX3bPF9Gn0X4syVX5Bc9T1bfDcArzz3riUw/ZEfmJvKXYvcsch9xjq3MD+A
O7sQUR+YY4DZTMytpVL5gcS8gmgITNUieXvfUmbQX7Cm2QjYyqxXiPhbAt7q
m/bNwFahP8feKlj3YR6aAntckby31VJm6R5sns2Aq079w4i9JWAH8M1Z3SbA
16AHx98qePcwl/O6AfijOW9/xy3lbvoL/kZgj2LtFvTRL8xhHn1cD2wF+m5B
D/3CHObRQwdgOyI+BzYLHm4D9knklyDXDudd7Wc3cv/D+e2IQci9jtxiRBfm
t5DrmKeIWcSdcg3fLdeyXm+TPXuSu7aEPNd33hfcS9dx3iDy3JdxuwTuFtGM
/KeEv4i77p595z/nHWVx9933APr2N7CEfPfu/C/k3aj+APp3vvdwrfTgNbYE
D7HOU6HOIr5J78XfpvZyK3sZIHfgb3UJ+d6L87+Q9+0eBshdON97qS+9eI0t
wUOs81SoY720Ab+tfW/jXd4J/NPAvUqv9yLXzf75C/lM7uNdiGeAeY0Y43e3
fy4BJpuYOxCDubPWa2e+B9Ox2dzJN+FanQTzFevcRv93Eeuandi7YbfSl2Pv
INa1zd99wPbgm/M+fTZ38v09zdqL2HN74r1v9zGIPl6V+XUg1vt3H4Pow+6r
I2e0hR5U/ynRX0y/3Yj9SmZ6Gz08JR4M3579bZF5OP4O4s2H+R0K3C3Yl23A
bUeUAvZCfAe+G7ilyA9EvonkSyLfCrk3kHsb8TTytyO/A7kcclszv0z2yXWs
V69lc3c96/vusGtLhe8+Ir8kd7RV4Lo/57tP4+8gN0e0Wyfwl8m+u/+vRD9T
/Ps7uDu8haVSw3uINUrKO2oV+N6H1/A+vmIfmdKH12idUGOZvEvvZav4yA69
3MFe/N0sFb73Efkl5a23Eq734HzvYSt7yA493MEelG/+nwCvOXg7wdnFXcxF
XGC/C6LHAcA0DZjSiLo5qTr9kW+E/G7kylDzTXKHIXeb7LrXyKFOXb4L0xoB
7B1psKXp6W6+A6s9HPgWgt/Nt2YeDGcenrTvpQk1vcdWxNksngK2YQLWezWs
zXwQcM2CbsmSeb23Yj9W8xlgW/Ite71S0ntr6lvdIcDemoD13g1rNQcD9z/i
dnM+pt2aulZrOjBzEIfj/FL7XRZyY3D3y5FbhZiK3MuIssgfgWiH/Cjk32He
cvMkbzXaAzMamBXcG9dI2p/D6Vm1fZ/cg9VwH0k1XNvquD+v8Y7UcK//VUN7
8DoruN/eS9KeH8670l7ekD4GSB9JfPdQV/p4Q3oYID38F197eIP++4t/fYeH
cx/V95vhDvqLd+W65oXi+c0w+/7iOx1X/b4pM38JnD1ZqXwH5Mfmpmq+iPPZ
iL3I1bPf5VB7HPduJWIK8jMR+4C5DJj7iBlPzLvc73nUsDlY/x04g7F8B3Op
Y/nLOKOO9DqOb8FqzaeW4eoRdx9x44lbyTc3i5r6btpRexS132EP06jv2HrE
modx9PguZzKDHhx7GbHmYzyx5mEW90A9tKf+aOqv4P1N4xz3hrrt6WEM52B1
Z/Be9gW/7elhDGdhfodhF0YhvgN2P2ICzt/D+RrEOJyPl9wBxNGoNRGY1eSO
Zt5zk5B7n3zbG69vPXod3aMJ3KX3hOO6yvH6yp1I7mrRGi28JM4kctyj77D7
3CuacacnyF6/F/jueW+C51hnotRZHTyMlhrp+JOE7334O/M+9omP+O68j3el
D+d7H/sS+oh1Jkqd1cHDaKmRjj9J+N7HUPBGFEnpGudYxFU5qfof2M9d5EYy
fwzzVzO/1n7eFknxPHdNTqqu8cbKLmvtCdzZtdQfIzjVcJz5GC677/VU09+R
aU5MwJmuzc9qmd6ENJqGWZvmLaqev0nrdSQ1DwS9SfRk9UZQ80DQc4z36J8N
Uc/f+U7c90JgVmVmZPwETA/c74vIfYTcN8jNR+5d5H5G7nrw7kf+eeTXIf8x
Yh8wi4F5z37nRswDwLwAzIfEmIbvhWvZDH4K9+javivuwbnuxbg/B656c756
9Bru1Wr8klDDvXsN7cF3N/ag89ce1koPzo09KDf2sDb04DViD7GG9rA29DC4
SP77jnvv/teI98FF8u9B5KjvNcHz4CL59yOJ637XiNft9pkK3q/g/Ma9eol7
uQGxA/lXiqR6cMwN9jtjYtYjtgHzGjG/I65Dfmpuqv5u5F6VOaiOz8D0TOtr
+65BrGo5zjRNb5d9HyDO9Rwzlb5Mew9wc2WeXtNn+BLfjtXcC+wSYn8R7HUy
8ynEm9dvgV8k+N/p1bFT+Xb3A/e63IvX9bt4iTjzcADYBcT+HDw4fgrx5uE7
+z4oePfg2Kn0W7QAOMCts//cADB/IqpjLz5B7jPEYchvKJKXq4Hc8YhNyGUi
9ym5ByW3kVzbH6tvO+Qa7lu14l59IvzDyN9Q5N9c14v8TeRmkvtp0D54CK57
30Hvr4h33VH1H3f+E6lxGGtsKJLMdx+xxibyM8n/NMHDwUPwvY9t7OO10Mfv
oQd9l58I9zByNxT5N8+1lbuJvEzyPg2aB9Pw3G8B8NaS0xD5xoiXc1N1P0UU
RH4T8uu5r42Qn5mb4mYg9zFyHzHn/Fnkb0YUB+bDIvl7V52NxJUAbrPUOkis
69mMigHzmXg5GOrNYj3zXRjYjeGd+RxU37BFgP2AdRXn2ps4q0LAraHHpHqm
b71kA/dJkfyzV81P2HNJ4D6SegcTtK2fLODWi7+kurNY1/o5Afifgc/IxhUh
euMzqC9iPjBbka+E/C8h3wexBbkvEdWQ/x75gtmpc+da/ivuzAncm585Y6/l
flzT+p0v+7SV/Erk/3IIfp9S+XfR/Rm/Gvnfk19QuH3SaLv/gvS/if59n9xD
I/E/kzU+o/eC9L6J3tNx+5TKeyfuuyB9b6Jv5xYkr0+CpnvOoOeP6fmjoBvn
Pkt630zvGfT+Mb0fqkafUvnfsfeQwR4+Zg8fSQ9x/tGD93Is+PvAPQycmiVT
mC/o8RjkfkOuEHKnIVerZMrPPGA+J+Y4YH4FpnDALOCOnoT8D7LfruOzMa0T
gdkvmKjXh/VM82RgDwg26vahvy30VwX439Po9+Fb+pyzqAzs3jQ+vO4XxFYF
dk8aH+7X7qgGcN/x/bq238nnvMfqwPxIjGr2ZZ0viDseuJ+IKxxw5s18XQRM
PUQR5IsiSiB24rxuON9u3xcRV+DsSkQxYu18N/fCa/l+aM24KzvJqZuGE/Gu
bxz34JxiaTTc2zHizfdTvaXb1Z3k1k3DTcdzr8eIV+cW+w9N93ycePb3ks6z
v52d5NVNw0viuNfjxKvzkrwqz3zWAf4CRHFit9GHnV/G/fGccS7E2eU8z0Ts
KJ23b44vmp2/3qU4v1pyxSSfybpWw+pelYBznYsLpGpFjR3s5QLOPOZ30fcl
ksukt918E1cVyO9rB+d6CWea5Hs3PV1d4N9+t5F/YtGMjDMQX+GzejviTvs9
F+IZ3MW3zJ+K2IrcXTgfjPOvcb4HURPnpyO2Be4QYL4hxu8v6rhP1fO7/Tbw
XN857sPxXwet6CtqDRGu+rwswaful3rdLj4vCz6V4163B5+XJfhM0hpCrvv0
/U7ymRk87pB5Kk99ZorHHWGezknymRk87gjzPB74kxE7MlO1hyLexNt+Ozfl
Zx/iBORPQewkZhgxbxGz135eFU1pDi+VOje+1bfatdj/zrB7qmU6pnEasTsC
VjVN7yT2+lV4C6r/rfR4Gme5g+9Dtb9hDyfQ61Z6NZzqfsN5mHZN4rbLe1Nt
u5szganN+9gZfKr+19RX/I6AVx9f08ep3K1tYVbqwzw/jt2oD1xp7MJI5Jbi
fBniAHI/IB6zzybkyyA/yn4HFDDfIx4B5npgDgdmBDHLkf+R9X2P6nOXTMv3
aaT06nV9t9SD17iSNcpIDfd1qDru0+tczzqHS50Roc5yqeG9+L7X5857L8Ok
l7eCh72hF69xJWuUkRraS7o63ovXuZ51Dpc6I0Kd5VLDe6nBPrazj+Hs4a0w
xz3Bfw16307vw8V3Oq57rkG/2+l3uHh9S+a+hz4fsM9Z4C/Gd4t29ruanBT2
O+b72HcS5C9Bvj1yY0vl7WZv++xDrp5wxzC/n/y+wDTg/qvGyLDr+9nD/cBf
R7xrGnYssTajHsBcS0y9UHMMcd+xXk/7XsD3pfqjgrbVfQjYa4h17VGl8nqy
uVnNh+37AnH1Qs2xgv2OdR8E/ga+X/UwolQerhcwNxHj2iOkn+Wcuc30UWBv
JLZeqDdW8NbXOGDbA7sX+9AJmHHIT0T8jtzzyN2N3D7kOiA3nrmfkfsVMR75
e5H/DvmOyE9g7jfuzTjujtfX3jpxj1zP9+l3cp8n1/WV24Hc8YHrvow/nnz3
p/yO5E8I3N+4z+O40+7b592J++2efc9/J+958tyz8zqQNz7w3G8f+r1C/Dq3
I7kTAu83vq9xfGPutV6Y8Zjgd7/MuTc9Xy6e64U5jwm+94dZ96b3y8V7vTDr
MeJ/f5j3RHDvAm8/d6gzYjL3aAJydyJ3gLkuiEnI/UL/o5C/A/nvke+ak/L4
E3PPIteRM9nP/e3M/Z7E+oZ7DrgOxB0grgtxk6k1Gpj7iPme76QrMaY3Bvl7
OL/9zHfmezEtm9NYYFoTc4CYLsRMZh2bx2TgWhH3Pf10Je4XYkYC046zNr3O
fHtWx/IjkG/LvGl1YX4SdczPJGDaEPM959uVuInUMtwrwL1pn2e4027IH8TZ
34jXeX4NzusjrkX0QP4f5Bbh/I2Q607uX7xzr+t3b/X9/rvJDriecV4PHK3v
3B7C/Yc893MoXveg+Rf3z336HrrPLvSp++heJ4hX50XNLvSq/H/Idb+H4nZP
0P6Lb8I9+9swz13pV9+I+x0lfp2jml3pVbn/kOde0/G6J2iaz/ngvIWohJ9R
lRENuF9/svZC5N6WvNW7TnZwQYEUpork/iDXar8qXOu/AfN/kft6yHsNm8dr
yC1lbc25P6uxJPj3vhsQ253YxayVhNN38Q/f2tvUddx1fFd/0NfiQ2g6znp4
lfeSTtewf/GtLknQdP9W6wvkX8T9VgWmGmIDPsc/RhQsk5FRCLEJ+WmSt9xG
+/fSiAxiPgPmWWCqk+/5AmXydsF13LPX891wXd8R13e++0jHV19eIyPUcJ9e
o3rQj3zz77uazr/uj/dwUPw7P51/5WsPB8W/10jyH/WVb/79Lbn/Kgna7vuP
MHvnuvckrnr+I8zd+e67SvC8IYFrntcDPxH4P/GZc1PJVN7qfYXzSTg/iPOb
cd6Q+p9w1w5DbAFmMjB/BcxmYgojvgTmJdb3fm6SOWzi/m8Abgr1HOc1N1A3
gzXXATuVuknYzcSax4+BnZ6g77M03KfAzDiEtvdUkPqfA//yIfR9TgXpYTPw
z9FDdel/I+dk895o3yHpobrU20htq/MJMC9QN2JMz7z9Ccx7wPwNzMnA9MWu
zsTPjSLIZSJ+RH458v8gfyLys5ArivNf7fMV5xlZGRknkTcbuWLk2Z78yV15
j724hvXjOr4/RYT3I3nLyXNt480STlHifyV+KfHuyXVmC8f9fUV/k+jvoPjz
ObnHuMdFpMaPrLGcNdyr15iVwC9K7q/kLiXXfav+7AS+97CFPUxmD3/9Rw/6
zopIjR9ZYzlrpOtB+UXJ/ZXcpeQeqgflew8/gP9O0ZTeKYhTEf3AmcM9K444
AMzKgOkDzNxSqRrf289c5GtyD+eRWwLxN3LLuN8nBb7NZQ531rAH7bM8AduP
2Ll8F38Bt0rejOlafh5rmedf7Oc7343WmUVNw/xk3/0Cpg8xc9mD9fczcCvk
DXqfs6hp3v8A5n2+x5NDn7OpWYR9/gbsuwnYfsTOZR+/289meeOmO5uaRdjn
FuS/RrTAXT8B/gDEfOS3466zkM9F7EB+F6IlMP2RX8h8KfK3IW4R/oJSKW6O
7Ifr6A6Ypnl2nvXo2r477sHruBet05J1+rPGwlCjVPCxLfBvSfCxoFR+Dzmy
x+l66SM15kovmdKH10jXRx/2MVf6yGQPqp/UQ9RfUCpPO0femfuvSd99hTcv
3EEJ8e58916TnvvS87ww+xL0rbrbyLslQddnXkI8fwH8l4hbgR/I3drJ3fwc
51sR/0PuNsSTzO9AviS1PyuawjlmUE7KXzbzxt/J/b9Vdngg99xqWe9fAbOd
OK/l2CeJ3cm65vtLzigJP4hvrCSx3/Bt3cr3NZD5HezTfO7mnbWUev2pPZ/a
Vs/muzsBN4geszmTnXyzsWer43PfQUxSvzvYq84mCTuId7Kd/gx/WkH8LC+W
kXE7cHchngLma+TLInc2chnI3YHzOxFPI7cbucOROwJxJvIHi+bljf8MMLuI
OZL1fW9Mx3p0LevxKdmjrzlj13ZeBnmuY7ynhbebPPXl3INF83Nd9xnh7xK+
e/Z9Ns8+R/f9pPjeQd++4+7d+RnCdw9Piv8d9O987cFrHCz67xru4xmpsyvU
8V783SX1Moi9bGcf2aEP5yb1MYh9bGcP2Qk9OD9dD4PYw3b6zw7+z0WNP8E9
F59T5yFagTNY9vA85P+Q/N3ID2G+DPs4GZjfgTk/O6U5FPnSzJ2FXNFieXyb
y918B4Nllw1bG9giAduK2CHEmmZN4AoXS+ndzvxQvivTPQX5w6SOz6MV35jp
2vxOBa5gAu5u4oawD5vTOcAWoKbO92lq+zwMezqw/xRNrvsM9c2rYWsB+3cC
thWxQ6Qv83wG8H8Vze/jGXrw+RiuAXCV4bcUvg8NQ64Czo5C3IDz43Cei/PD
EcORq4jzhjiviPPSPB9BztHckQbcE68Z92WY7IxrGe8G8lQzcocLtyJ5DclT
T5E3ImgezX1twJ2NXn13h4X9db/n0e8fafw6f3jgVyS3IblJnp07IkH7aL6h
BnxH7lvf0zB5U+73ZPr9PfhV3nDhVSSnITnqUzkjgpb5uwaccsVS2GX4PNyP
Hr5HlGfd+shXQ74s9205MQcQ5Yi5GpgqwJQh5p1SqbzVMZ3rkK/K3g8nRrXK
0cv1wJUnzvRUqzwx1wJzJDGmp1o2u5uQP4YzG57z755uRv4o5svwPcSebgTm
aGLKEhN7sr4bA1eBsx6R0JP5aQLMscSUoafYl+EaAVeJuLLEqab13g6Y+xCX
4E7rIdrjXicAdwxylRFtQv4+5DsgjmW+M3JdEZdKzvjHcQ+8vu9D1EnaD9c2
fps0fNdK4h8rfPfn/OgziX8cd9S9+66qd9u3CWl21/3XF/+xhntIt//HSg3v
wWtcGvjpfBzHd+R9+HtK6iPuovdwtfQQ+eoh8o8Vvvt3fpL/yDfv94LTgbs3
HpiJ3KsqiHsKpnim0Rr/e6cEXKUyqfNuzF3Knh1zLDHWX8c0b8D0uxyCX4X6
7Qvmn4ljjqFGu6ChO3gse217iBqm05691MvOP0PHVfmP92izast+0tUwr7fY
90vE1ch3QW417uZP3EtV5E6wzxXkWiCuRL4r8t0Qa4g5nvlmiKskv7ZUil9D
7tV1bCau5T5c0+/btZ3rHoyrPpy/JvCPD9xm5F6VwDWvqluD+xbnMkF8VhaP
9xRMntEE8VWZnu4pmDyvCfRRWTz4nv9f51ZJPDn3/5+5VaJH5f5f5lZJPN8E
/M2I7sB9wNp/IaqxdkPkGrP3HsB8KBirYdymzN+P/EfIH0SuOvk2i1vlTrpz
X03rL+LMR0tgbuN9GK4Hca5nNW1OzTlbx91PnOu6d6vZmPPQOXbnW3B9wzal
9tWC60Gc6ldlT02kJ8ffT7z6qE5s87A73fnedN7VuQd2HzYL9bG2VP651+C9
tCiWX3+t6FdjvenYi57AXQv99cj9jdw/iIKlMzJORP5UxEvA9ADmOmA2COYk
5GYh1x2565Fbh5z9H1o27snkWn3fIdfxXVovnlXXd0v1vYb78BobEmo43/39
/3aYPp27Trju27nq33e8J+/pWtn1dD1UDf69Rg/WuE5qJPVQVfw7tzu51ws3
qYeqwb+/QfXvb3E990G9V0+Yv9dQ/15jQ6hRPczfuerfuevIde/Vw/xfsO8f
4FXD944CxFjdmogXkbsfuepZKW3LHcb8KYjnkX8A+RrMF2De6r6M3EOsG3e/
APfXasy0n9nUUJz5LSC7bn5m2M9u6kXsYXxPU4F5kLrxPXk9qzXNvm9Q13H/
SI/mbYp9rlNPMQVkDtbrHPvOQE19pwXoyWrNBeYR6jnmn9DniexzNrAPUzdi
D+M83gFmDeJ4YGbgZ8tMxCfAnY7cmYgVyL2LOAH5JqjxMvKbkT8DuffIPZE5
539Kfm3uhWv4fkStuC+ubVzXd270EblnkPde0EzymKRbm/vqnn1vo+ekPXbf
L4pv50ffSfwzyH0vaCd5T6dfm+/J/fu7SvKv78y9Py/enZvkXblnkPde0Ezn
O+qa56XgLSuYwn9uv4dB/jTWXo7zDxFNs1Pev0AUQ74W88b9ANGY+c8QxUun
aq/E+Vrut3oxnOvUogfTWUVsU8G63mnELeOMDNdYcK57Jt/V+3w3Pjfty3Kr
mW/M2X4aentPME0Fo/1Z/++y/xOz8s9a+zuTs/iQOPW9uVT+Hg27inM7Mcxi
s+jbLLYDsxvRFz8nSuDsbJydh9iBsz2Ifjh/ArENnCzkzy2Twu8NuUxyz5dd
8Np2b1bf+ykhu+F6znFd43h9420jN0u45wrPPaXjZQbN82Uv3WdT+tQdLSF7
6l6d516biqZzt5GfJfxzhet+D8XNDNo+2w/Ec2Px7Pdagruls/1A/DYOmp9R
szj9ni6z/UC8HoqXKZrm8yvgtxZM5bORO4s1t+HsG/NfKuWzJPfG8N8ah+c5
iHPI2Ynzr7mj25jPZt60TGcX81bXap5HrR08t7o59HE+935fwn671+8kZ9zt
3HH3a772hhqKc//fJLyjTPFvPnex91gni3rnywySMN6X1SpwWEZGYcSZePc7
kS+F3AU4v6hM6jwLURu5Z1BjF/K5zNdFFEKuOOIs5ncgXxr5i+U+tb71spP3
W0ru2PWcE3WNt4u83MCrK7zox3g7yCstvItlr9TfdvrzPSvFu3N/zon+ttOf
83KFV1d40d92+nNeafJ8ft8Gf1vFXw79nZMww28TPG4Vjzn0eE7CHL9N8LlV
fObQ5zkyy38K2v/BnoyMO/De78xOccoAU4d5yxWV/OCSKe+Hc5f+Br8I8nch
9zRzZREXkn8YcsU4A9XwfS1DbF16KRSwgwVrmhdRsyBxruuYsvRu9YpyFrWl
nr8D17V6BelRcU/LmylN7brspwixd9Gf4lz/Ir7PTN6F1/V35jMuwbs+K2jv
CNoXcJ4lpKbr7wj61tcBfK/7CXEecEOBOQLnl+L8MsSPzJ1vvyNC7m18VzgS
+Svscw7n+xF1kBvCXDlyL5d90fp6r0O5P0fIDrmuc1Vfue7F+EcK/wrhqj/l
DhFuuaB9uexxku/B9O07dgTn7b6dm+R7sPh2/pHkXyHcJN+Dxbdzy4n25fK+
1Lfv/FB5b0fIm3PfzlXfzlXPZen5Qpm3c9W3c4cEbrmgbb73gPMz4h5w7s1O
eTXOspwU5lvkfgn5pchdQv1viqVqtMnO49WT3I+chfMdY3O4jPV/CJilzNej
x++R/5WYNsGj4S4h7jvizpdaPoOlfDuX0ts+9hWxS1n3SNY9wPmcT227D8+b
v/30X0fqDBNNm7l7+z4B53rlWO8yvu19xLahL8dcQswFuPOSxTMy2iJ/AJ8r
3yOOQf5KmwVyJZCrB347yVdE/irkGyAuAaY0Me2B+QH5o5G/mnmr77thOu65
bZi/attsXd+57sP57dLwK5Kv/rxG6VCjfajh3o2v/n13k/wvDd59n92/c9P5
Xxq8O1/9e410/peKd+erf39b5r8NvSfNvV7w7jz33oa+k2ZeL8G380sLv332
v+ddL3i+yH6Og3MZOCuBezcnpWO5uvazG7lLkVvFc/NbH3GeffZSy3mWuwZR
B7lc1rT+PX9A9t3qnw9cKdY33CrBmMaFyOdQI9bxOZpePeCyWadddv4+fpA3
dKl9H6Cvdtl5PTnmavq/zL4HFM9fS+d/NWdwBXBlqds+YPVtXgnc4dRtL306
5irqXgxcmeL5aynGNI9H/lREJ2A6I7oiJmAvKwNzI/InIndayE9Eviry1yN/
E+JkYrogNwm5KszdIPvgOuY5aul8Tdfu8kbhuofInRi4Vcl1X84/WfjuUXlV
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
CzDXFLk+yN2D8w3Ca4bz3rIbXttmF+trX01kb/oK37WNr/rKbSrcPsK9hzz1
p7xmwust++qefW+jb52z+36Mvr2G+/Ya6l35TYXfR/j3CFf9K7eZcHvLjqn/
jxL86/034TvrK3z1/lHwrtym5PYR7j3CU9/Ka0aeeb4b+LaInlkp/GHAFkb0
R64VzntlpXSfwJ9b48/3Ih4N2H7ItWeNjaLped/j/rLLVjfdvptWB+ocqp7p
dqLux5yRY/x99Jf31Ssr+Q2ZXhfqpavTT/o3vejJ353ptaHWhtCfY56QuT96
iFqmeTN+/jZGPAZccfvPYOAe/4f8k8g9hWiC3OPInYHzW3A+EGctcHYrojc5
ZyJ3K3IDyHFtr239PBbuVLWspycDtwl5jwee+zDOQMG7J+P0TtByj8Zzn63E
Yy96LBS8PSHeWtFXL/oqJH6eoJ9W4qUXvRQKHp4QD37n7uPR/5hVP/Hj3Cbk
pZtVP3pzvPt79D9m1U983gD8TYg+vPPMUqmaT9vPKpw34570RZQoleIYvinP
+wXeIO5eQ+6e1vVeBxDXCJiWxPUWjcywrza/WwTnmhE7gL7NW3P6U32fW7re
9C34bJon9Om4QXwzLflmVMtn/SR7bRh60F71nTXiHabrVetaHzNx752AHwjc
V7jvLGAG43w44kXkHmBuK3LbECWRH4rcVPu8L5F3nk3eMNb0vejE3fD63l+W
7InqOe8B4bmGc0sK1704rxt5kZMd9Nyn32MnuUv3WoI+nwoenfNA4LhmCXp8
Svw5p5twFJ8tOu7N30kn2aF0cxwUPDr3gcBNN8tB4tW53YSbbp6DxPOz9h2C
+7Id2POxa/dg155h7Rn2Mxj5Qcjv4M7UAaYVMEOImQ5MB2CeBGYnMRcA07p0
Sudl+5laIjWD7dxX1xlCHy8B05U1DLeDe+tazxA3Bbgu9GO4ncS5ns3yBWAe
lD3fToz2NguYh6nnuB30pv3NBu4h6jluJ3Hao81hmv2zQHh72zkP7dc8Pg/s
/aGu6Wu/hnvO/nkg+DR917aZLANmFDC7cH4hzusi7kVuFHKjEe8jPwL53cgf
AS8XId8G+THIrURuCHJfM+f8tuSP5Y4s456Mkl3ZxX1xjvV3r+yO6xv/ffJH
CN/9WI2LyG8j/DHkriR3iHC/Fq7qtw36Y7nDy7jHo2SXd8k+e41W7GFI6GEG
e+jIHrzGbtY4gnUuYo02UmMM+SvJHyL8rwNffbQNPsbyrS3jexslb857uUBq
tGYvg6WP6eyjA/twvvZxAftozT4Gs4fp7KEDe3Du14Gr+m1F3/wvBX80uIPB
LQv8kdw5y7+N3FNWOytVayR138L5WJwPDZwRzK9AfhBr2hwc4+/A+n4HmDGs
vSvsumFG0N9y4J6mVlKtkcStBW4oNXcTVzc3722Norc1wA2jbnx/Vms18oOp
Z/kjQx3z9R4wI6n1NbUuJMbma37eBeYZ6iS95RG8/1XADafe1yXzZum1RhI3
F5jyyF2G8w44H2+fhThbiFiWnZFRAbnLkeuI3ATkJtvPP+ReZb4c8pci3wn5
ccz73c8N91+eHlzLZjde8K5rHKvtvArkuQ/jTQha7ilyy5HrHo3rPn0P58ou
6ix8L8cL1j0Ooc4RpfLPyDkTgob7U57Oznnuzd/C3PAe4gxHiEfnuMeh/zHH
EcGr891r5MdZjgieZ4AzD7E8O+XzKMTRiM7cq4n2HQH5BYh3iKmI6FI6xZ9e
IlXDNJ3bldxJzM9nfc/7HEwj1q8o+S6sYzrzWGdZ8OlY0zQ9m8FrrFVOcD6/
ztx5w75C7HJiKwquC9+OzdVwFRJqdWWtiXx/c6irWJ97Z9Yz3VnELie2ouC6
sOYs7kO5hFpdWct0/8H9bwDuB3xeXI38NYhuyD9v37UQRQtnZKxH/kfk6yPX
HbkHEC8hdxhyHyD3k3B7MG/8F1nfd2QDPZuW3oFzrcdusjfqwWusZ40fQ436
5Ls/r+E+nf8B+T8dwkOPUEN78V3bwLvyXipKjS7sY3Lowbnryf1RuPXJc/+T
xbvzPiDvpzSaPYSrnv2NbeD+m+fYd1eZ/aTg2/nryf+xZP65dw1znyTenfsB
uT+l0e4R+O7/IPxvBHd8Vgp/PzDPsv5f9n0HuQlZKe5zPP8b5x/jfCI5D3If
M+DnPdayGfiu30+u6RUAZhNrxjfxALUNVxC4d6mhtUzL5lYM+TXU+pF5fz8P
sk5xYD6klr4v81ICubWsH/n3sx/rtRBwH1HH32F9vsMHWcv8FAZuNbXie32W
mCLArKNmrGWa1vfRwFRCTAJmNe7zN+Cm2s8BxHHMTUZuDXK/I/cH4iDiZeSr
IXc84lnk14a81ZjO+3YNv3fVijvg2sY7LvCSfET+y+S6N+cmeUzSns49dM++
j+pZd9P9/iV+nZPkV7kvk+denZfkNWpO57twn/4+4mz9rbjPv8Wnc9LN1bkv
k+c+nZdupqppPiuCU6VwytcHiA8RfwFbo1QKc1ThFMZzVud45KZQuwJylcn/
CPEn8icgP4154x/HHfYa1r9rWN/HIl9V9lxxrjeNfk3vGGI/IsY1pxBjtarz
bayVej6LP6W/l/nOqshbinjv1/qsIXU/Esxf0vcx8vaS6rn+dL7TGvJOk7Sn
lcmbU3Wpm6Q/hdhimRkZWYj1wDTGvT+Ge5+J8zmIUjgvjdiA3MeIJsg/zvw8
cksi1jHfCPneyM+VffH6el/rZXdc02bsus51feW6F+e7J+fPC9olA39d4Ltn
48+VPXbf6tl3zD37brtv57rv6Nn57ln584J2ycx/e3a+e3b+XHlfOu+P6Nv3
3n1PC76dq/P+SHw7331PC75Vu6Tw1wW++54mvosCn4mYmpXyugnRFLjZzBdG
rghiWlaqVjPkZjFn58UR08ndiGiem/JldXNYdxN3uyn7n0XfJZDPZu319Gq4
ZsTNJq4w+zKdjcQ0J8bmZzXKUGsdfTSh3uPU8/eUS70NxDQjZjYxObyD6ay1
ibjmxJmfTNaZyjob+faacr5Wqzj3YBrrNKJWb/opQc/TWWMTMc2JmckZt8S9
1gKuBc6fwHl/xADEk4j5yL+KuA2YE4BpmYBZSExTYE4E5paAWUAN34NaCbuQ
pO37oR68xgkJNZK8eQ316DVOTKgRvTvfe/BdrRX2Ncn/rAT/zj8h8JO8z0rw
7vwTAz/6nhV8+zuqlfCWkrzPDL6df0ICP8n7zODb+Scm8KP3mfTdCLyTgf8M
uM8RRXNSuIGlU3WbIH+S5IsxP4g79wqiMTDVgPkC+eI5KW+Wew1xi/28DfV9
FgNYx2bwP/sZHnQUN5BvwGreCuypohdnu5C+bgeuZtDWOQ4i9k7gTgvaihtI
j6Z9h30nEO14L/Op3cy+YwVtu4P+0s8C3l0L+zkb9BVrPq1mc+BOEe14pzZ3
89gduCuBm4sd2AJsCWAX4fxBnF+B83k4/xLnmTjPQgwBbzHybyB6AnMdMPPt
91QB8zoxtjPduTeu4963sNcSYY8Wkfcgee7DeV+S53rOHUL+YtHuyRru02t8
9R813H8T+j8pjf9i4l/3fBG5D5Kb1EOxoD+I+l5jsXjoyTpJffxXHe+lMXup
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
3prgK76hyNc5/i/4U25VztF5Osfbgt/I0zm639uJfxE/o6fkJO/ZHYgeiJdy
8vbsJNk1w9yJeEjqOO5k1hvF3b5b+nKs3dN45J/j3rZiLce57glSbxKwzxLf
mv5iXeecJPXN673hbqJnn8EI4NuE2ubF6o1EbiyibfDqtZJ8tue9RH9ey+Zz
H+s1oFYN6XkMMR3oqUGYofnqiPPHEb0RQxDVslLc0xBnIDrhrB+ielYKfyqi
M/48EPEkOTWYqyk83ZeuCRq6P0mcbqKrM6oZcN0TvCj+VKkfd/T+BF9xZ085
BP8B8ai8UxOwDyb4VI7OLr6Thw8xP3036fiPJMxSd7dmAqfnIeaqXJ1vL2Jv
xp41zM6/Q48i+iNGSN73qRYxjyEGIMYgGkn+dNbRXbUZeJ1TuJN9EE+Rr3nf
Ta9j2L6IQfRj2EaCcz9PsJ/qWf/27L1pX4qzGtpPdWqoB59vjQSvHcXjmIA5
JczE+x5BXCNizMNHuNOPEdsRTyM/GTELdzgnJ8U/C/EJcp8inkHuBcTsnBT3
TMRnOP+C/MHITRW+YWqzhurYHgyllnt2zmlB07DDqOtY0z+dtVXfsMPpIdY9
nX6jF929kWk86R7GmSh/VIJP58ZZKW90Gs/OTZqhvoex9N0ogXt6gl/njaPf
RsHraQmzVd54+k3SOy3NnCcAvwXfH7JK5/ezm3s1EfEl8iVK5+3W2YjzxMce
YichvgI2U7DnELuBe/ys7KHr2t1tRv5L1rJ9fU5wql9ban4O7BZ6Nc7z/x9j
XwGtVdV1fYnbT6Ngd7120WI3goqIgEjZLSZ2YQcWYSK2qCiiIjYSBord3d3d
/5zvmmvsdc/7XL9/jG+Nb7xnzTXXOufZ57n34txzh5o4R+cws/f5QDPfoPfG
Z1knPKfnxX2jMD6Hc72A3Cua+SZhvG92Rs43pcq9+3yRi8/plir3v16495c1
G7G3Vrnv9cI9vwvcw8A8gliAWCdn99cdsQFiI8R7wMxGbt2c1byP//0Y/vfj
qllPNT1Dja+jD7WOsj38HrtXqflINd4zrsEeAfexcNlZHB/n8bX7aVi72Zmy
a7lbh+ocnwUOn7Hae+D4zwM+O2u1nvGZ+Hv0ZXiPsnNn36uumbmd46vA4XNX
eycd/3XAZ+eu1jPO/YCw92Ld3VdsuZYexPW5iOcRM4v2mfZS7iFcm4d4OdQy
v6Hq43rlvTvG1yzX5izknhQHMTOLaX06D3GPIv+E5shy9QwzzdG9rJtrOZPf
U7yfddWPtfFeYm2cwZ/relX6vxtmfFmYmeFe4zPxe36+Cld33UupXU1NGbE0
4i3gPsVn2AGf4abIFXBtIcTyiA+Q+wy5hZDbDLktER1wfRHEyohPkP8E+YWR
31z5yO2f/VvhM/Re/syyPb3mg1DjM3hNtVm87pNQ57N5nc/IzzLOGT+3t7QW
fU5fk5uqLs4a6z5Qnc/qdZuFnnHeWPuJan1er21t3rieqj3b+J5UmzvWV3vO
sb61+SNHtWceOfw+8u3sPuYD/zbiC2A7VgzD+ToinsL1NxBfItepYs9hY0QR
ucUQTyP3LuJz5BdRfhNx+/Mh/+ta11/omXgfPo8KMIsLy37vCPulsLHvplpn
nYRn/zeF/1z4OIfzL6xnzVk+1Xv0hZ6vz+LPdiHd+/Ka5z3hvxQ+zuM1nfRZ
LK+ZPlbN56qJM3kNn+Gi+vw414d6f7/QZ+Zz+ee1qJ75yprrI+G/FD7O5TUL
69murLneV83nqolzec0SwK6GWAvRC/EHanrl7FlugdgasSSur4tYH/EP8hvm
rHYp/O/OiK6qbdeIe1DtVqr1dZft4+vQ+8X1GHt7fZzBa32WWBvXenY+r/M5
sz19Zn8fsjP7++EzZ9+TOLdzxLm93ufO1m8Z6rKze63PXq23z+/va3Z+f399
/ux7HOd3jji/1/v82fotQ112fq/1+av19vnjzL+iZg6+2+YV/3ctboL4jd/l
Reu9DWI7Ybz3FojfAwdx2wrH57Mm4k89D8f4c+A9rIfoLp6/hJtbTPM6F7Fd
EN00199VOLfKzOjcvE8evrhhruWcvN/VxddGefZ2jjVwfR3N1jZTX22u9nr2
2Zn4HCJXrXBzw7OIz2xtzVRXhW+LcI99gNmV6xm4RRGPAfMEoi9yO+D6MK4v
XF8a8Tiub4/r/RA74/ruiGVwfdlQt4PycX14D64T7+PzeB2fY99Mnfdnnc/g
dY+rZvsq/Xw21vl81fr5rNn16vP+FuadG2rjOu5bpd7n/i3MPVczx9rtW+nv
8/8W5m+tf7yH+D75Pfz+L888vmd9q3D4ffzeyvOP9du3Moffy+//8llEHr+f
HqjZRutyMcRVBfvMeiN64no/RKdGm2sSclcXrH4DXN8JsQiuLxdyrO0j3u30
bBYN3HFd9NbzYJ9dhF0cuKUCn+P92bHvAGGX0H1msT5DX82xo54veVfQHI+H
GfyZco5the2kz8G5Hy+2fP6co7ewnGOZDNZn2D485/76jPi8lm/leewQZtle
+EWEr/ZMdgjz9BV+cd1na8/Fa/YDdn/E0VxHwE8Gtj+u74P/fRDieL7nuH4N
rl+L2Bm5gYgDcf1QxMl8j0J+gPK+piK/r6+uuu/JYZ31DzWxt9f0Uo338bqd
M/3iXF67SSu1Pquv8Tirr/eu4RlO1rrvH2rirF7TK9R4z+3CrF4bZ/XaTVqp
9Vn9nYuz+vuXndU/6/6hLs7rddXm9dqdM33jzF5fbWav97kHAr+35u4G/Og8
Zs/b+7kjYpBmO4TfaSHPNToY1/ZFHI7ogdwxqtsp8PqzWD/U8hk4f3/1OABx
hLDdM9h+wg3WfY4Srot6Ot9Owg0U38F6npsGPn8O3t+f4yA9/0NU07NKTb+A
H6w5DhV+Y80S+XcK+IF6VofpM9rwX2YaEGY6TM+XNRu1MtOAMNPBeo7Eb9DK
TI4/EpgzERMQOwO7fc6e3y7kQhyF6+cizkcMQn6HnNWNxv++AHGRandDbkfV
DlJtXFexD9eY98qutdg71sc5WO+zZOuz6zk7J2t91mq9ffa45uPsnavM3i8z
d6yNc3euMne/8Dl7TXbmzlVm7peZN76Hcd4eYd74bsZ5Y22ct0eYt8V7nanJ
ztsjzJvt6fOeBtxZwvcDtl0Zf99U0po7HXE5v9eQa4/cWhXruytiqDBnIM5B
TEL0B64tcGsLN0Q4PgvvNUDPwXv5M+D8Z4tnF2G8p8/sfKNDX843UHjv7fg4
53mIi3Wvg/U8fYaBeh7+zMm5qzA+g3ONRe5CzTlEGO8b53PcUH0G8X4H6Zn4
50WuYcLFe94l8wz9HjjfcOHjPe8S7vkGYG7k9xZwpyBuw/fOcFzfHXEdrk9B
HI3rpyOmInc7YgRyN+P6VH6X4vrZITdStXHNeA+undgnrqPhVeq8P+uyM8Ta
EZk6n4112flinc8a17DPulNm1mrreniVep95pyozV+MYkan32XeqMnu1+ngP
8R3z++ifuY9q793wVjj8XvpXuZdqPCOqcPj99K9yP9U4/H4uQc21uo/DUdMI
7Pr63HZDjNN8tyJGId+EfOeKcYzHtesRd/D7FbkG5Lqodljg5vM5JDybbA9/
Lux1E2Ia4oiAjz0dO173fBvi0IDNzjA83Ce5b0GckHnG2XlGaJYpuu+jMvg4
zwjNcpue/3EZbHaeEZqFz+12xDGZzyo7y8jwbG7Xsz42UxPnGRmezy16lqMz
+OxMXjMH2BcQJwJ7IaIZuO4Vy+2FeBy5JxEnITcOkUO+a8XuaQ/EU8gtEMfJ
yF+KyAPTTZg9xRPXnPfk2vO+fAbNeg7dw7PYvUq9z8R6n4v1OdV3zXyue2Tq
48zk8LnJkRdHtwyH30d8N/w+RoX7aNJ9dNZ9DA33EGv9HkaFe2jSPXTWPQwN
88faOP+oMH+T5u+s+YdmZo/vrs9+ZJi9QbN3CZ/BsDB/rPf5jwzzN2j+LuEz
GBbuIdbHezgy3EOD7qFL+AyGZe5jFmrmqvZ8rnP8bnVO3nKP4torWq9jQ85n
2BuxH2I2MI8h3hD2AsS5AbePcN6Lz+iiwBffk3ni4T1cXAXjs++T6f2Kai5R
7yzeZ30CuGd0v5x1fOiRfR/jO0v+CVWwzjsf+ac1+0TN4Jh9MhjOeVngyr7j
/nm+oWd1eRXs7uEZ+D29IvwV6h+xPuezwLyPmFmw+9sX8Rz+98eITxE/Ie5D
7v6C4Q9EHIJ4Htc/R3yZwZBj/4Dzz/hF9Ylrij33DZiXMn0jNvLvV4X/5cw8
1WrjXFzLr2qm7HqeWWi5VvcX/rXMfNk67xPfh9jv9cyM/1f9Pvo8nMPX9pth
bn+3Zmb67h/wb1WZ2+uq9cz2e7vK3K3V752ZmevrHcQHiO8QF6Dmwnxaawcg
3hWv52Lte4iPEL8hLgp1BwlTjZvP4gDVf5jhjuvc+2R7EOP8XOefIL5S3nmy
693x8d3JYvcT32eILzTzRVW4DhCP46r13a9Dyxn982ltvufCfWT77qeeX/P7
CJ/rAsSbiIf1HA9GHIo4AvENMM8h9whyswrW/1u+u7j2suo8x9pRoTauhe8z
vXzuh8Pnc3ArtT9oBq/xfnFNZdfej5kZW6uN83Jd/vwvcx5UBf9LK7MdqPyv
/8ccB1W5b1+fv2dmuSjzvA6s8ry99g/NdVGVez4og/0zM2O1mgMzcz4p7KOF
lmtlPq69gHgXMRu5OVozhyn/FK6/iPgwkz9cHHFN8l4fDWuS6+4ZXH9V9cw7
h6895yH2WWBe0SzVsD7T85l1/Khm8vuK9+QY5yJHvKdsPs7jzzj28Vm+DvNW
4/FnEJ+TP4tqczme8y3VHj/LgFkKvw9sU7H65XBtBcQ6iNeRWxq5bSuGPxJx
NOI4xErIryLcG8AtCVxv4Y4KOPbgmnhLa8J7HZrpRczbwnjPwzNcsSfx7wjv
vQ/PzMjPkP39c3ovrC2fw9egr9M4k9e9H+p8tkOq9Irzee0HodbnPCRzXz6n
r5ePWpnz8Cozes3Hrcx4aJVecU6v/6SVOQ/N3OfiqFkasYbWzjLA9tXaGY1Y
QrzL4vp2lVS3JK8hOqtuOeT7qO6YKty872V07+Qn9zLi9jW7rPLbiadaL+KW
E479vNfyyP1HmDe0zpfRc+sb1rHj/Zn7O7GssNuFd2NF5FfW/M65nHB9Aufo
gO0sziXVv3fof2To75+Zv2vLCrtd4PV7WiNwLidcn8DJ/qsCswGisQl/0yJ+
KeL3i6LljkWshtzGiHrkioglEL8WbZYTEasjtzkih+sdlI8cxwvnn+ma6sfP
LtszrqFjQ81amoE12Tmy6+64TL+1NR9rq80Y631Wrt11W3kuvp6PEZ7Y9Vp5
RnHtO+/6//K8IvexqvE13OVfnlt8h47WXF7X9V+eXfbdi/26/R/PLdvT5+V6
6h6e2yKIlYDtX0lr6gTEyYgemWe2MnD9KomnZ3hOyyBWQX6nwHOSeHoBV6de
Pp/39F7k2xDRDMxCmXvxvqPDfWwEbAMwJfV2rM/gvbn+Nwm8y+jZxns+PszK
92lTRF44732cuDZDlJGr6H5+Lba87+PD8yPXFq3M6f2P69By1i0Df7X7P168
WyEKmWfqcxwXZhgM3MLAXI/fCW/I27WhuDYccSCiY8jxuZ6COA1xJmIk8nsI
1wm4G4U5NWB8PQ0Oa2rRwFltbXlNnMNrF/uX2pNa6R3ndJ7FNW81jniPPTS7
r/MlQ/+43v19iDN7zVJVarI94oxet7Rm9JrsvfXUbP6OLRv6VHvXvCbO6LXL
/UvtCVWea8/MzM6zvGauxhHveRfU7IrYV+vvJtTcrPU3BjFQvH7d6wbh2m6I
UaqboprTq/D6/TgHeYeIN6752LtaH8exl/cZhut7Kt+pCpe/B473Z96xFSyf
zQjkd9fskXNK4BsTcKPEd2MVLu/rn1GnKrhTw33sG7imBB722wu5IxBH8/sK
mP6IVwqWOwNxNuI8xN7IH4c4AbENMK8C81rB5tgH105EnIzoIw7Pk+eswOOf
4X6hLz8v7+33wBlOzszgtfuHWVi7Tajzvr7W4ro5IMzJuj6ZnrE2zsz1elCV
5xRnPb1KzcGZZ5btc5pwh1R5flns6Zln4Wv40Fae45TwDE/LzOa1h1V5jlMy
z+H0gD+8leeXrTktM6vPt6nw6+H7Y2il+traDPmBiPWBGVaxz+8cYbz35sgP
QawLzHBhzhUX1/NoxJZax97L1zPX6vGIUxFbiYc47+fr1fmIPwlxCmJrzUa8
93a8z+jc22beA5/jzPBcjgSutzgd53OQ7yjkj0Vspzkd472rzdi3Sk+fkc/G
ObfPcMb7PyPzPI9B7JCZM97/Gbr/8fw+RewI3O6IaVgXd+aN5wLEZchdgeiH
3N4hz9rzEVchd7U4dkJ+f8R05ceKw9eS9+Ka2jnTL66vWOP9WTMgM4PXnKte
XhNnYt0uYa5Yc756xbXsM3JND8rMmF3f51Wp93lZPzgzb6w/P1MXZ2btrmHm
WDc29PR3y2fmO7ZbZubs+5at9XlZOzQzb6w9W71jbZyZ9cPCzNlaf9YXAztB
NcOB7QbcXhXLXYJrN2utjUB0R26PSlprFxKDGAfMpYjbhB2J6AHsngF7kbDe
j+t7j3Bv3pef4URxcf3uGTCx/9jA6f1vVs1eoSbOMTbMfDmwk3XfnHmfKrOc
E56Tfy7ssW+VmZz3SuQnaf79qsxxUQbHeQ/QZxT7jg3v8m16XgcK5z3PC8/A
7+dmYQ8S1vueF+79bmBmc50DczJiBnD3IsYjdy+uP4Y4DdfPCLkJfAaIB5Gb
jzgTubMQM5GbqFxcS96DayrbJ66x8Zk678+67AyxbkKVnj4ba+N8sc5n9bXt
c/oaz87a2pofHzh8ZufIzt0ax4TMLD6/88R7aI3D7ye+g/GeRla5p9bezfEZ
nnhfI6vcV2s8E6rMFO9tZObeWuPxe7sGddO0Xk9BnJ/TdxfiWly/j9+Bmm9s
zmqvw7X7ESfh2tmIC1QzTnx36RmdHDj9vpx7vPgfFvZU4E5XD8f6c2O/h4Qb
o3u7IMM5Tlj2n6lnS75zW+nvz5Ez3Cn8ifoMsjM4lnNMF3aMnnO1OSaEZ/uA
Phs+p3M0y8wwx8QwxwxhTxJ2rLDx8+IM9wh3qu7vgsA5LmAfAeZ5xMLcz1qy
53MpYhauvYx4lfeO+o4lw1+JeBTXXke8qVysvVwYXzPOH9eO4+PnfGmoib29
7k7Vdgx1l2V6xbmyddV6+qy+hn3WuJa97pIwp+PjnF5zp+o6quayTI84Y7Ym
28vn83fJ54vvVLyvcWFGr4kzet2dqu0Y6i7L9IpzZuuq9fRZOeMziBcQU4Ff
BLjFwrq6AjEJ8azWzqKlVPcc4iWu3Sp1V6kucvscjnVucr2YWZuLBi72i72y
PN6Lz+AVxFvCdSy1nOvyMFd8zh3V7zJxvIZ4QzNX47gicDi22lyXdWg5m38+
2Xu8XFw+e7VndVno+y0wtwDzIOIpxIScXb8GcT3iR+R/RtyK3CzExJw9w6sR
v+L67/wZg+tzVX+p8pMDR1wX7Hd7pl+1dVKt1me5I8xSba1MztT5nNMyc1ar
vTr0flbzTs/M6+t2Ugbr890V5iP2auV9jrszcxCTfV6+Rtl/xv/xvK5qpdbn
ufdfntcV4Xl5nc858/94XldkntdXqPmO33Wq6Y3fLY6spPzXWkf3I55FbIf8
UZW0nq5FfAPMD8I9gHgRsS1wowPuukw/rt+H9Gy8Jz+b77U2HxYP87Hn5MDl
fYl/RPMRH3tP1ow/AfeHZnxU9zox9L4y81z8c5gt3olhDvL9gtxviDmac2Lo
6/M5hvPN0+cR+00O7yOfx2PiujT0mhTu1++B2Mc116Wh7yTda6G2puYJ5N5A
fI5YFp//8iXjuAlxC6ICzEKIJ5F/B7FcyWpvQHTE9UUQ83H9gwwHMTcGHv88
2ZNr6OkqfeOaytb5HKxdEGbxmuvUz/E+G/HPVJkv1t0Q+n2tGX0tP1dlzmpr
+/oMh8/rPM+HmbP1N6jGZ/aaF6rMna2Nz9jXuc/Pd+ylKvNXe+eyHHF+8rwc
5s/WX6M5vDbeB2tfqXIf1Tji59CM+iLiVdU9hd9xn86nfE5r8jXE1yHva/Nm
RB6YsnCvI77n2gmYKZlefBfeDFzxfShpnb8lnizG17tzem/WvK0ZF1TBc84O
wC2qOd/N3G9837Lv5HuZeyeWfAsj1wnxfrhn5nw2z3O2D//lXvxz5HP5qJX7
vj7cs98H8R9Xuefrdb//AWYNRE/EJ8D8huiP9XBixXimItZGbl3Ep8j9hdgZ
+ZMqVn8rYj3kOovjM+TbNNfU7ATMycLcJh7/bGNPrqkv1Nfvx/vflKnzOVjz
pWbxGp9pivp5TZyNdV9pPq/zOafoXqZqPccZfW1/08qccZ3fEjh8Xq//tpWZ
vf5W1cWZvfa7Vub2Wn/Gvtaz8/Od+0HzL6gy+5RMfZydtT9q9gVV5r5J/b02
Oz/rf9L8C6rMflN49nHun1FzQ67lGtxI6/AXxI25tAZvR9wZ1uJmwv2KuCng
7hBuda3339Ujrvl1kOsqDq7nP9TLMb6mnWt94LpoNuL/VM8s3md0/p6a8W/N
kH2veN+rivcfzeAY51oNubU0a02z9XVMdj7O1rbZemXfz8jD59Ku2fo57pZw
v2tqJuLaq2fE+WzdgBnE7zdgFkG0Kdo9TUPcheiO3OK43hbX2xWtpodqlsb1
ZUKOddNV52tkA2G5TrwH7419pmWwvYRbXJjIe2fAbRg4fYaI9xl8PW4svK9J
n+NGzRHXXbZ2k1C3uGq8T1zXjt8008vnq1Z3R3jO/k5sHup/DbPelJn19jCr
124R6hZXTbWejt8y08tnrVZ3e5iVNQsBtxvW05mVtE52QyyM60sihiJ3VsU+
t7sR9wozAtER+aUQQ4A5W5h7hOmWWYvew9dkD3EsivxywngvX3/O1UMzLQbc
ssJ6T8fG2XhfS4T17L3v1H3H+3OM93aeeH+O8Z5xruy7E+9zup7DiDB7tp8/
j/jcdgvPJdvb8T7nAGD34ToAdnPEcODO0Wc5A3Ef4kHELsAcgDgI0R24EcCd
WzGOgbh2COJQvrviGYb8eeKZGXgGqx/XjffkPQ/XfbN37Ltr6Mua7sKPEP5c
9eAcQ8IcxPYK/MOE50xxHn7eQzWTf6Y+11DNdZbm8vWZrR8WZnSO7qofofpz
wzvAmuFhVq/pFfoOU915oe+MTN+RmtvXmc89RHOfHea+u8rcu4e5naO76keo
/tzQnzV7hLm9plfoO0x154W+ce49UbcvvyNV0wW/33YrtVxneyHWQ25rRNeS
fbb3K7c3Yn/E+shtF+qJeUAcXNPep0vAZNc21+1+/Pkurq4ZzMzAOTD07qbZ
qvHODLMeiDgM0SNzr/Hd8fv2z6FnuG/Hke9g5Ebx52jmvh0T53TshgGXfR8H
hM9xo3D/ETcj80z9fjbO3H+2hvOeCtwZiHH82cm/Mbi2gO1ZMr5HEGcjdy5/
ViK3C6JHyWofQpyH62NVvxlyu4Z6Yh4Wh3/OsR/X1hbq6TN67X2ZOp+BNVtq
Dq/hPA+ol+PjXKzZSrNl+zyg+3gkrOk4I9f3Npqxa6jztf5gptbnZN22mrOr
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
Z3uBDgLm0nLak/SI9vx8k7O9LocgPwpxedn28HCPi+/zIWbzgLmibHt0iLlX
+3u4j+dg5K4s2x4Z7q35Ome13yIWK9h+HWJ8j87dAbN4wfbbeJ57W7gXxuuX
KNjeF/Z8Gde/y9lemyOAv7Zsez5ex/Xvc2mvzJHITeb3TDntk3mb+0cD5ihg
rhHG9+u8WGP7Xn7M2f4S5nj9pRrbf8LeP+Vsb80N5bAXpsb2yjD/c872ylxX
brm3hnszli+kfTLco8J9MtwXswJ/7+fv9EXbz8L9ML5/hPtgfstguO+F+11e
EuaHmrT3w/ew9Kc+RX18n4vnVxHPLWWr/64m7WfhHpl+1I2U0z6axdrU1PyD
XJu87S05Gf1vL6e9HB2R/1t57rU4hd+XiNvKtteEmAowf+Vsz4vnp5Ztj0tR
uZq8cXD/CfeL+P6XUpuU494N8pVV0zaD5z4O7v94RfsZuM/D95Zwvwf3eHAf
w9pt0r6Ts5TnfhLff/JaqPe9Jqx/r5L2f7wuDPdI8Br3eryhvSDkmyE+31Py
pvZ+ZPd8cB9Gcz7t7eDeC+658L0c3MfRmLd9ENyfwb0fvpeDe0SaQo713OvB
PSG+V4N7MXoUbO8F92lcqPoHymn/Bfc8dFM9877XgvXck9G9YHswLlCO9Q+V
0z4M7r3gXokSZtmb32uI8SXbd+H7JDbRvoYyMPso7/sZmOd+DO7dKAYO7rXg
no2uynEPRQX5DogJ/G5VnvshutWnvR+OmcjvV2G4z8L3aSyUt/5zytoPguuf
4fqBxbS/gXsbuK/ic1zfnN+lxZZ7JbivgfskvlD+4GLab+F7LbiXgLktEIcg
f2jRuB8XP/cz9A+YUfyuK1st90Jsmal7QnXcc3A88t+g9/eIbQqm++e+Bt+L
cATy3yq/VcFy3Lfwi/JHI/8dclurljnugzi83mp+VG5bxDUly3E/waHK/4Do
jdx2iGtLxnlYvV33Ws9fp3ruc1iAd+G3ZtuHQO079wlwTwH3CHB/ALXu89qk
PPcoMOd7FJ5UPfcb3KBa5lwnP0d5aup3QO/ji3Z9Lq7/3mx7AXbk9xy/j4vG
73sfZgPza7PtFXDMCQHDfQLU+//RbHsBXkHfV/k9Vza9PDX9f0rLfmsm7/sG
uLfgL2Fuy2Bc43+HNPHU5Z9CjVzJMK+Xky7/9qD1P5U6P2HeKCet/1Tp+9lr
DPV2wLxZth7U5a+B62sidsV9nlY0nT417a+EHDX0g5E/vWi6fOrwqZnnXoC1
lB/E78qi7QVoVp569fY5y1Ov/n7ZrlNbX5szbf1Z6vleOWnpqd2vy5lu/2zl
31We+nbq66njpvadenrq5Kmjd/08tfOuM18lYJmjRr6oHHXvzTnTgzNHrTp1
8cxR257Lpevs80k5afKpM29Srec/VZ6a8mKDaas/43do2TTUHRpMt75Pwa59
UTbtObXVzQ2mVWfuM+U6KtfYYHr0fZF7hN95pcRJzXhTg2nR91N+VshTi97Q
YLpzcs9SPXmpE6fmeiN+l/K7q2g68R/KphWn1pr6c+rDN+Z3adH05tSB7yGN
+Sah9jvVuk6bOvF5Jav5nt9p5aQhp976sZJdZw3x1II/LvwPAU8NObXZ1ERP
Qp8nSkmT7Xps6sGp9b6S358l00pT200dOPXcV+H6/FLSfi/XIWmut+bf43mr
dT02a6nZHh3yrKWe2/Xf26qG2uzfVUNdNjXXUY9NnfWNiGdKpg+mznliwFBb
TU3xsyXTYFN7Td01ddrXq/a5UkutNfE3IJ4vmR6addQdT1CONTchXiiZtpr6
ZGKomaYO2/Mvhjy5qaHeEb1PKpjG+WXk21RMK01dLrXQ/ZSnfvclfn8h2laS
dpda6p3ypo/2fLuKaaJPlqaZ9ScXDPNayTTQzFObfIq0zMyfIszrJdMIR131
zuIh5tWSaZzZn3rmNfGZ75I3bTF1s9QyUydLDfPAvGmcqZ29WdhBAdu5Q9IG
r50zPPW3d6qGOmNqdNdSjnpkaoanF5M2+Crxeu6uonH+zn0LuD4sb1ph6mSp
5aVmmBpe6mS/B2a3vGlpY5462p9VPzRvWuCY767677j3IWcc1OaeVzAtsGtx
qef9Bpj1haFu9tyCaX9LwlA7+616USN8fsF0vdT0sge1t9Tdui73ftzfg4gO
laTRdf2ua3IfQH6hStLkUgNMDe3YUL9wxbSz1LpSo7tX3mofQu6RYtLyuvZ2
77xpeB8uJv1uUXlqZPfJmy7X612X2446l3zS5FIrunglaVf/wee3X970tdTV
Uo+7aMV0tX8gt2/edLeeY/1iFdPqsv5XYOYU7Tq1tEsgt1TFcr+Le27RdLNL
ipf61N+Um1el1jW9ywYtLfWc1M26HpX60kWll2We+lfmqIHto/yS0sy65pY5
6m07SefKOte6EsMcNaIdpZX1PLWy1LiScxFpXw8P1732vzpe6T8XFE1/Sr0n
9afUfG4kreszxaSFpbZ1lYrpUqkJ7So969NF07+upHpidhJm/UbTl1KnSl3p
XyXLM9dF+lT2p+bzT+RWVX/qPjs3mtaVea//m9/HlaR1pYb0WGCOy5t+9BVg
/gFmjUrSjZ4bMDcJ0wbfratXkh6V2tbj86b1pLHVahXTd1IT2g/3+DJqXi2m
69R9UqO5U874XJ/avwqW+tPDpKN8rWhaS+o2qbU8SnrR14umEXW95xvFlppM
6iMH5pJm846C5ZmjTnNQyE0rGF/UnVL/OThn+s07le+sPDWc1G2+g2vv8XdC
RHPZNJfUQF6q3LshnyubnpP5cZl8vmz6SWodz0a/c/JW82HR8GPDddZ8UDQ8
dY/UZZ6r617j2k3qL8/j9x6iV8X0j9RbUqM4I+TGIjbkd5Yw+wozXZiYp56Q
+soHCqY1JJ7aR+L/q0vk91TBdJcbii/qKacGTEdhNqkk/ST1mdQ4jkPPL3Av
XxVNS0gdn2sgqaG8mN+JiC+LSSvpGseakHcO119Sr0idIvNf8/upaBpF1yZS
Q0jt4DfFpHGkZnK/TM1i5aSR/IJaXOS+w/UfED8WTVtIXd83yF2G3PdF0yn+
gP99eQbrGsDPkTs0Z3jXFDL/czFpHD8DZlQG85Py1CV+ivwhOdMbei25G5tM
Ozi/YNq1fpWkrys3mUbwKeSeLpg+kPnjlM9Lw+h5ag6pM6xrMl3c7/wuKloN
8fVNpv+jlu+PouF3qiRtYkPIey0x/YWhpm6tJtOSUa9HDR41Zf8BZpeKafao
IVstYFZFbkDFtHgrN7WsWw25nStJe7ZSk+nzqL2joV/bUqql7m7FJtPmUV/X
JuSoqVuhyfR3N4VaclIrd2ouabqod2vH3wlLSSt3UgZDXRzztSXTexFDjR61
c6+onjlq5ahrG5MzbRyv1yEalKNOjPqyU3KmcWO+PuSpcTtSval/qwt59txd
mrS3Cqa3cs3Z/tKGvY3r7yjn50PvLZ2c56iBGynt1l2Y/+685VhDLRnz1JBR
q3ZWBpMvpbPhqf+iFu2efKplv7Okxyry97eS6ceoB6O2yzVkPEuXOrNSyTRo
xFCjxTOmZ4bavUOt68h4XjDPCabGi9ep8eJ1ntHLs3mpJdtHNftXkvaLZ+Py
TNyoaTugkrRm1H5R9/VFwfRV1G+5NsnP3KV2jLqxzwqWoy6MmjBqlqgDowbs
81DPPPVffubuc6q/BPFlwTRZm5fT+ZzUfI1D7itxbFm2umdUNx7xdcF0U1uU
k1bKzwtdnL+/8Xc8xGEV01DxTFDqs74vpNzhlXQe6oPSQTG/uPJHVJJ+i+cW
MveD6qmnOrKSzhm8L+R/LJiOinom1vKsQL/OWuqsRlfSGYs8Q/BK/neOgp0p
R20T9VN+lhjPObyK/52jYOfNMU+9lJ/Lx/MLJyH/S8HOw6OWiRqmV8P5aKyh
voj418L1FQOemqfXdS6Z4z1HLdJv0kH9jViZv6eV0hltPM+M2ifqmFYpmW6J
Z5T5tVjjmqJfdVYXMTX4Th3A70vEKZV0xtfPOquL9cwNRJxasfpfdDYY6/8p
WD3zYypJN0WdEbU2PFNoDfReq2Qao9MqSV9EXVPbkKcW6PSK6ZX6qp5n9KxZ
Mq3QGZV0dgq1SdQkvcrv0Lxpk8jjZz5RczQ15GtDnhqjrcX/ej7plKgRuj1n
mqP1gO1cMr2La2+oSbojZ/ohz1MvRD3StJxpitZXjZ8DQZ2P63+o82EdtT3U
9Pi5M3sFDDVFrGctNUixjhqc8ytJo8SzCe7OmfaH2px9ERdX0hkZPJvhnlzS
8VBLc2HF9EH0tJ8Rcnur/qJK0vbw3AT62rsehvlLKpbjmQf3hdx+4h5XSd7x
9Pqnnz/1PPsoP76SvOlHSV9C7c7n+aTJcc3OEdL4UHtCDQ71N9SauE7nM9VR
80O9j+tyqF15WHXMf5E3P2/XqVBn80gm/2Xe/LNdX0Ndz0M5yzNHP2pyz5Nu
hT7Krrmhhsa1L9TOPKo8NTbMUSPjHs7U7FBPM0q1zFF3Q60La1wrczW/wypW
Q60MfaOpkTlCdcxPriTPaWpu6LNMrcyRwkwWh/szuzaGfsv0U6ZnMj2VqVOh
PsZ1MZ6njzC1M9SwPBZyrKNfs+tmFsPXyKfUVdaaZmbFoulmqIGhBzH1M2hf
8y7yH9aaPsbz9FumfoaalqWE+ajWNDbkoc6GHsvuX4z/q3kL+Q9qzVeZGOpp
TlQfaloWBuZt5N+Xh/JK6ufaGvd2Xkhc79Saj/LKwrnWhv3Wo59hHf6PvoM5
8xQ+pWyaGupcuiL9N7/HlKdH8kll09XQG5nXG+rMA/nkcvI0Xot6INT9WWt1
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
mEMazMfyqQyHe2LSv7K/cEvnLLeK6gdqhmVyxvunuKll2jn0Xlb5v5SnVooe
kqPpWYg4tmBaKWqd+A8m1EFR0zQVmOOQPx5xXME0T1EzRU3VFGAOQ/5wxDHC
UDf1j7hWE9c04A5tMD72c/0T9VPUP5GLGqk7xHescNRRuc6KOipy0XdyFPJH
NVg/11g5D3VQl8j78coG83mkl6JrqejfSC0UdU/0kaTXpGuoqJ+iJ+U4rq9Q
6xoq1rpH5AXycLy0wfRU5HmjZB6EjeKiXmqsPCInSl/1Zil5SLJ+QoNprFj/
Vqaemqkv2ppf430Nppmi1oqaKXo1ur/h523Nq3FmQ9JbUUNFb0Zqsj5ua76J
9Is8PXC4T2RX8XwlHLmof6KWij3vLpqmyn0kv2xrvo0zMrh7iqbNItf7bc3/
cXqDabpmqB85qKOiHyN9F19sMI3Vvfy3mKLprKiDat/OPBWfbjCd1syi6bSo
k3LPRNbnEC80mA7LOcoBR10TfRXrgXseuN35fZ5PvoodhKNvYh3itYC5QBhq
r9wzkf6LxD4H3J5503Cx14bKL43cKvJBpE7L9VWfl5Lv4fLI/wfxTYNptail
ok7ri5LpuJZCbmXED/IzZN55viwlL8YlhPtJuivqo6jb+ryU/BHJtRzi54Bx
b0TiyLMkPY7kn7h/yLtf4kbyN8w1mnaLGqzHi6bDcu0WNVS95JdYajQNl2u0
qL/i9a0QlQyH67zIQU0UvQs3RSwM3GPIP1E0rRZ5qMdyz0X6HzY0GofrtbZR
jr6KmyM6BI6fxLGMeu2G/KryJjwib5quJ/ldXDRdFrVTw9qZx+GajUm7Nb9o
uqc925lHotd7PnJQozVIfoYrCXckYnIh+R2ObGeehOuE/FH8G0C9yDO8ndWv
15jy1yrfVzzHA7MNvf/k/0e9l+u8qNVyT8Kjgyfh3yFPLdjJyG1NL0BxUPfl
erD+qj9KHoPbyYOQONdYjZaXYB/V01OQ/KuLnzqvI4HprVrPr6E8tWKXI79v
o2m66A9IP8G6cvLkmyD/wT0bTRPm/oH0BqQebJL8Aw9sNB3YSSFPniHiuQS4
vYE5SDzUhd0GTG3ZeKgNG9fO/ASpDZuK3O3iYP145PZC7mDV7xIw9eXkSUjf
v4cQZ8kX8My8acPc74/6LvoGntKYNGXu7ed+ffe1My/A8xpNO0YO6seiv6B7
+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
LSw9vqgrXL2Y/Ltco0jcWjXWm5pC54s+YNvXmEcXfb6oF3QtID26WL9Tjfl8
rSWvL2oPqSk8XfXUFFLrt0uN+YWtJb+vqCs8o5w8x4jtU5O8v+jbtU7RdIHM
9dU89ACLvl/rFpO2kPpB6vG2E5ZeYK8H7HrFllpF9wOj3nAb6jkLSS84vGR9
qTl0zyz6gPUQtpH/9lMw/eGIUtIBEkcfsQ0DxjlHinOmMNQi7lhnHmL0/3If
Mcc8KL6u6kk/MfqFEeeeYrEndYt9Am534S4MnNQxbl1nGkR6fd3T3FKryDy1
iu61tVWd6RBnNLfUIbpP2ZZ1pnkk173NLTWND2V4qFd0/zB6jrl3mHPNFnZn
8VHb6P5jkYfaxf2lbXSe/QMPdY631ZgHGP3E6ENGH7GNgdukmLzMqGGk1o76
Q/qWLSwcMZsWrd808ewlnoUD16bimhe4qGd8RHz0KJslTeNmxaR5JI66xnsD
7hFpG7cQzjWN7mNGHmoa6WXmvehTdgXqr61r6VdGTSLrqWmkjpC6QPqVXZLB
HlZKXmiOo2/ZxAwf9Y3uaXYRcjfWmU8Y/croUcbcAuUvRu6WkKdf2TXlpHtk
jws1R8TQB81nuEbawVnSOLpfmWsd2cu1hNThTa4zTaRj6XtGzeP15eRfdnWd
aSJn1SV/M2oeqXd8NnDdLkz0OYt9qGt8oi55mbmPmfd5KWCpj5wbsO6L5ljq
KB+RhvEdxDPSOtL7jGfdu/cZNY/uQfZQnWkjiV/QbLpI+p2dVDL94ssB+3Cd
6SyflT6SnmknlJIv2ivCUCv5gTSOrpek1tExrwtHveQn0lS+INwpAedeak9r
vueak7aSfD7Xm3WmefyL8yE/hj+fEHfwu7lsGGogqed7C5jvqQVtNszpwk0r
J2+1t/mZiu9l8RE3TXzuqRY5v0LU0vunYLpK6iLdP8153wt4aizbUFtTMJ2l
e7E5llrPLzTDOoHTPde89x91pm+k79pQ5IfxZ03RNIzus9aXHk/8Hq83LzbH
UG9Jjo+E+ZPfSfXmyTZUGPdk+zDgGuvNj42ea+6rxly/NjZPUyZ/X5iFekpq
JwcI25zB3h+w7sO2nTSWvaS/zOF3lnzevNmYp7axj7SWvaS1dEwhbz5t7htH
bO82ptukXtMxPYShVnJX8bgms2chaTK9nprL6N22QSHpMp3Hz6QnnjrO7kHD
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
PtrONLbkGiYu+j1Sf7t3hodnYn/eznSy1NNSb1suJ679A5a62veFpTbXdbWV
gKe+9zn1HplrqdHtUE6932lnvop+rrb7P1JrS+2sn79N7eu77dLZ2g8VWup1
yfWeuPxMbfpB+rnb5PHzquMZ2jwrm9razSqpB30g/RxtnoVNfe7mlXQG92HC
0U/yQfEQR/3tFsKN6pB8H6mvpV+jn4tN/Sz1uMxT00rvyE7CxLOwqcXlTK59
pV8ktbgHiCdqceM53NTS/iDvSGpuHyuYlnbbSsJRc0u9bF59HTu3kPS73pMa
3i/kLzmvkDS5zuUektTV0ieS51tTU+tnVlNry3Om6THJs6J5XrVrctmDmlj3
hOws7OcB6/pe9750LLW2G6gntbr0eoznVVOzu7nyrsH186+JcZ/K1dQz+lRS
0+t9/PxqnkVNne3K5eQn6WdW0zOS51S7/+RK5aSv9fOpibkuYFYpJ+/KUzqk
c6jpM+n+kzxL2nW23pN63DEd0tnS9LR0X0qeI+36Xse7x+Q27ZO3JbE8b9p1
vuy/knS5WzSls6xXL5v2drAw1Nf6+cb0rOwiPHW8PCd6DeGptR0TsPS+7NGU
zq1es2wY5z1NGOp6+yBOxBo/OWd+ldT3xvOdybee+hJ3Ui6dBU2db+xJXe82
TYY5OeDWCZzUAW8OzJAm86ykfpZ+mPSzZM7PS6YedTPkB0oL7Oc+15eSF+em
Tabx3V06YMfQE/PsDE+/JvO7pEcmPS+p16Wu17nOF466Xz/f+XThugSce2Du
qL6ni6+L+Lynn61MvS39NKm3dY2va22Jod/mMU3mp0nPTOp8XePrPp3E0nPz
yICjFtg1xX4utJ8jfUhT8tnkucv7Box7ZT4gLLW+9NWkDtjPfd4n4McJz1kP
bjJvTuqBewUs5/OzmP2cZep9/SxmanwnNdk5zX5etOt7qXudJi3wpFB/gHDj
A+48Yeh3+SB/LuVT7k5pfK9tMq9Oz7tOmHnqf29sMi/Oh/Mtz17285SvbErn
KdNLkz6c1AC7z6f7U/pZylcFPH05Rwl7VcDyTOcrmtJ5zuSkJph9/fzjKzKa
YGp66bnpZziTx89fviKjDV6ilPTD8dzl2eKhb6fPwnOGqe/l2cSX5cyfk7pf
5qi5pRaW5ypTH3xFLnl0UjvsvqA8J7leHJcHzFGVdM5y5KJW+L9nG+fNz5M+
nX62sHPeGPDUBvNMZeqF6e9J389jApb6YeqK2Z/a4V8CJ89J9t48U3jZWvPh
pLcn/TtdP+yaX55/vKIw9Pik96drh6kPjmco88zlJWvNI5Q+oP0yOD+XeYla
8/mkhpj6YD8j2THUEVPnu7j6UkdMrbCfcey9Fqs1f1FqialF5tnJJwce9xml
npi+oYs3p/OKqQUeIy7qdF1TTO9QnnfsmmPWU0f8S6betcbx3ORuqu8kLfFL
/DmUT3piclEzTC0tdcWLS1PsONcWk6uHuJaWrviVfNIVk8e9Qunr2VHaYXqF
Uhs8hN/HwJ1d+d9ziRdqNi0yvUOpH95N2LMq6SzkhaUlpv8odcJDy5Z3PuqJ
6RtKHDXFb/Df4vLpbOJzAs7PMT5E+BWr4M8NePcH9TOU38qbFpkaZM7m5xJ3
wVzdSuZHSm0xtcPZs4m7lsyTlPnoheoeo/GcZOfzc4793OL7Aj6eM0wtMb1L
6UFKTbJrih8OWD+/mJrjeIaxa4/9HOT3xVUMXN7zulo7Xzjqk6lNjl6ks4Xj
OcBZfbJ7nhLDc42pT3ZtcvQ7vanW8sOlU6YeeaOS6ZEd496m1wU9M3Ebl0zX
zB63isf1ypuUTK/sHO5zOrnWdMf0OqWHKc8cpi6YumX3Or1WumX6ltLzlF6m
BwsX/U7dI/Qa6ZiJd/9Tnjt8eSV5oDp2mnCL8d/biskP1fOcj9rnJwPGtc3x
zGDHUutMf9RFi6ZxjmcLUx9Nj9N4nrBrmd1blT6p1Dm7T6proKudJ5zVPFOv
jK+KmsubTfMcPU5d81ygjq45aZrdO5WaZmqmr2xOeujonco/Y+tr0rnCv+TN
J5Uep9QpU1NMPbSfL/xz3jxSqXWmFpqa5NqadL7wr6GeWmfqoFdCfpUa0yw/
DcyCXDrjd7ka0yj7dWqZqWFeFddXrzFN9DO5dLYwzxVevsbOEKZ2eRX+DVJM
vqbLIrdiTcvzhP9TNE0ytcjL1Ni5xJ7zeuqVqS3eHPkta8z3lH6l0fuU+uSN
Q44PndrjqDneGpe3rUmeqO536l6nG+HyZjWmI6aGmHpj+pzSx5S6ZGqOeyG/
SY1pkpl3L1T6kFKbTO3vhjWma47+puSgHjl7/rCfIUwtMvXD1A1TV7x6wFBf
vK7y1NlSo7x+XaqvVz0x1ChTR/xmzvTGUT9MLfK6iLdy/6sdph7ZzyheB/F2
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
Vzo+vCTR55Ej/LcO0/BFXZ5ygMkQHqfDdHtR44efJXo3soBbHaavIyuYLGDy
ftHioYUjC3hYh2n0yAo+wZ+jwUOnp5zhzbxXz6X3Q5fXmc6CdfOVREeH5o7c
X7R0aPEWqpvfJNo9soTR66G9+zWd4XXzmlQfWcHo19C3ldE6pWdb83Nk2nla
OqcPmAYPfRv6vOJzdHXo89DlVfD168998pckH3hy18OdNfDnDGDygf/Wa7q6
MwayDg8d2kSuuTtzIOvt6ENrR8bvpL3m+/h903R06ODQy6GnIx8YX8gfCs/Q
tpEtPEmveTn+WHiOhm4btEMd5vuI3o2MYGUBo4vbIT3bqcO8I9HW8Uw5wOjr
tujIfpI/+TPlC2+enm3dYZo5dG54PeLHKL/HTdOzLcNz9HJFT8nN/DnPlAtM
Pzo68nxjLjAmCOjiyAs+vmNwHjC6NzKD0buRFXx0h2UB6xlZwejHyPc9rCN7
P6J9iznAeEbi+YjODQ0bejPyg4/oMD/I4nM0c2jV9nRdG3o2tGqz8vNc23Rh
aNR2cj0bz6r+fLa2adl2cQ1blz+bzXvRsQ2VGYyWDa0ZWrTde/+cGyw9G/o1
9G279ebcYD1Hv4Z27CT3cER/hrZMPo1o0NCVkSl8fKhBe4bXI9ozdGzkCp/u
2rQbQj86N/RcR7u/o7KC8XBstkznRYbwKb1Zf4ZWDQ/IgZZp1cgRPrU3a894
js9jo+UaO/dvVGYwGrH3GqYRQ3NG1vC17t+oGrRp7zdMb4aui8zhW90nkkxh
NGYfNEy/hs6MbOCbe83jEU3Yh+nZxw3TjaEtI1/4pl7zeERX9lHDNGPouMgk
xtNxTOhDl4aWjL/Ex8cRf0Y0YmjI0ImhEUMb1tc52KMRfRjP0YihnUJn1h1q
8IOUFo0aNGTox07m94P92ccxei+izyp35ho0YejG8HpEX4a2rAO9Q3/WndGv
DGK0X1un99umPlgDhtYKzden/JwXnkkDhn4Mjdm3oV/P0ZuhCUPv9VXv4Mxh
dF+TtUzPpWzir3vtecwWnrxl+jB0Wh/6DHk58nzSVvZrVI4wGrAf0rOfGlkL
hgaKHOJ2X84i/rGRNV5owMgw7uszv8bHwwxpxdCBkT3ccI0X+i/5NJI53HRd
F5ovNF14NOLBiK6LLOPzh3iGNmyD9M9lo07zZHxqYHAO8Zqd5sWI1+LTA1nT
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
fi6ZF+IPYS8z3k4//m06N/ouPUdTpRnoqd7l5/d0fitZfjS1P9VNm6U6dFlf
peff8VN+2XwN8TREC4WOCn0VHoPyNPyaX+/L5mn4hOulog4LPdU3qeaHkmVA
46uI9yHaKTRZzEIzVUnPxklnvHLOdqbmv+l+v9VN80WtsqbJo26XzSfx6UIt
+9F64XEoD8TeVPu3dCYsm2ci9b/X810P8Ps20vNhZcuPxuMQ/RZaLPRU8jhE
r4WmqpVqxi5bXjReh+izZvR69FXyOkSf1cSbq2wei7HusGb2WJRn4QzlrPnC
E/Elr1fWNHOVN81sMqnRdylzmrnSgFGr7Gnyq6UT+6Q7Z1hHPZgyqJkrTRg5
081q1nehC0PfhUZLnobSgC1SNo9EdGRoxXpD/RzeI79ENGVkS4/lnoo9Xq9a
dGdLlc0LURow6vq8hrxpeSfKF5HcbPwQpTmjvub1yqZGN6b8arRjZGDjx4gG
jf2q467oy7ir9GXkV8/hOrONGqYPw7NwTMu8DeWPKD3ZTK4p27hhWrN/tUxP
hhZtunRmcE3aJg3TqTHrTp+lzGlpz6ZJtbP6PGnM5JdIHfozMq6p03P2yneR
vejUpEWbtmq52sxrea38FJXNLV1a9EccPmD+iOjTpEfDa5E8a/Rr+CcuxK8p
A6ZFw3MRjRpaNjwUyc+Wh2Ksw08RjRtaNjwU5Z8YdWr4Ji7vd4l6tqh1wzNx
pNdEXRuaNunR8ELcwr0S8TtE04ZeTZo2/BA3Dc/xQyRzWro1tHF4Lm5bHfxc
2df4JF5atuxrtG3Ky0bbhk4Nz8Mr07m6bDnZ6NzoR8eG9g3/xGvTub5s+dho
3c7zGdLBXZKeXZHO3WXzNiS3emd+fWnkDGy0aGjfLk41t5XNJ5GcbHRquzRy
DjZ1yqi+KNVdVrbsbHwXv/F6zY6Z2NSPKZtn4ileKx0cerfdGnaPZ/we6OXu
LJs/4gnpnFjo2d3rn27lbG4yt/FaPCOdM6t59h6N7LuI9+Hx6dnpVcvMRg+H
Zk6aODR1ZFMfm55dXjU9HJq2ovZO3ouvp9rjUt1p6Zwf6jW3qMWjB59FvBE/
T+ec6mDNHX3KySaXG5/Fj8s5T1v6O81XVvaLZfNuPLf6Zx0edezFFxHvRLwR
0dZNl77N9P2mlcNLURnb6ObwOnzPa38tm4Yv1s/sPa+0ch42Po4fpPNt2fwc
+YuEGfqzHg/vRbR6eCj+VM7aPGn2mIf3IvdQhja1+ChK3xd1f/hEyntR/pD4
Of5cNo1gh9dyVzwgb/DZ+C8qB3z8StYDvlc1f0T0gIc2siYQ/R26vbErpg38
qGq+h2j/DvM6aQSpRQeIVo+8bukF8XjETxE94eHeE3WD6P4aFfNWnKqSvRqV
0c18ZXRzFzK68Wl8s1DHfOaiJ5SnI9ngeEBOl84bVcv0po47vOf78Wj8O1qf
inkrKrMbfSH6QPSF6PzQ+OG/qJxvZXejMURfiNYPHSJ6P/wUJ6uYnyMz5wrz
qEVv+HEr53nj0zhXJWsMqSezGw3hh76f+TEjfM5K1hxSTwY4msUPvH6sYTkn
HF0jd0WzqPdhv/wipUNULjg+jPgsKh9cmd5oEdEnxtxvZXqjKSRDHO9GZX9L
9xhzxJlJLVni+DeO77XKCJ8Wb7ke0zFSj5aRzG+0jLoDmkXywGfsMU3kwuEO
zFKe+KzpzNZjukdmoX0kO/y0MAtt5FQ95r04b49pILcZMO0h+sep04/N3GMe
j3g5ooVE80i297YDOdd7mvRsFt5xiLrtfJ58FaWPxMNxUd+5pM9DC4mXo/SS
yiaXZhLPxsW8ZwnvQUOJb6M0lPKKREeJDyR3YD/+j9JTcg/pKckKJ08cXeRS
/aZtlK4SzSQax129jsxv9JVoJJfuz9rJqL9cq8fywSf2umV8ZswoZyb543g9
UrNsqlmuP2srlTM+qsc8HDfpMX2l6tBZXuj31P6YXY5H5DY9ptcc0Z/9H2M9
+szr3eNxqx7zcERviR4TLSZejmgi8XPEs1Eei1e45yO+kdSiy5R3ZKWdfRsv
d8/GLXvMQxIdJ/rNZ30uXpL4N6LJvKqSdZs7hrlkkEuX2eGzr6yY/nMHn0kd
mefyloyZ5+SZS++5vb/fFWGmss3lVynd5/0V84NEv0lOuTSdj/Fze8V8JfFt
lLaTHHP0mfKKlD704XSerJhfZKy/yuuVQ35PqnmwYtpO6mYIu2Mu+r3p+X2V
rA+lDn/IK30edWhEqXmgknWm03sdM6Uxlc6T3HIy0NGCKrucTHK8IZVdjq6U
3PI7ekwTeoPX3Ox1tXb2mpTGlLlkmK9ZmEtWOZ6SaD3JMCcTHZ9IZZ2jJ1Wd
Mtappe66HvOdvMvvqx40pLeEO5Offn2PeUs+5LVoTdGZ3hzuIL9K+UH+p8d0
px80TUeqLHT5Sj6QznM9WWv6UdM0pWhC5VF5f4/lnKvmQ59VzExHm/pkj+lT
2XmMz0O7is40ZqJLr0peO5pV6VGpVx67vC35jyzSrz7RYxpW5qtHmevcRTpW
ctWndk0q2lHpWZWrjnYUzeoUXofuVfpTaVc/bWbfSOlfJ+2wPHZ0sAt6PbVk
saNjJWOdrPaZOrLWlecnhd3UkKE+F3pdrxvus7invCblk0km+3TpzIb/n9dz
1y39rjGfXZ6ZM6a6WTssY33AvSnRwOIriUclHpRoY2fosKz1mntTopHdLtSh
g50+PZ+5wzLdh7k/5Tahjlloaclib/Vm3Sz70M7iUSkvSXSzZLHjMyn9bPSm
lIZWuexkw0/ks1SnfHY0tWhtN+nIuljy1fGgxDtyx37T0T7eyFpa+UjiZSkd
7gzuSbmM90hb+/d2zktfp8N0udO4/yW+k4/5bDS86G/R1+JLSX77/O5NuUO/
6Wypkw4XjS+15LST5Y6P5cJ+B3p26jf97RONrM1Vxvz6HZbtjj/mPN7DndH6
/qdhmt2p/d67uXflgumMTGe5umlo0e2iy1Weuzws8brEF3N4r+W6j6ibDyW6
WtUr+x3d7X7uR0m2+0iv3dPnU4uuF/0uvpVoe8mJX7Ge9b34VlKLLpg6vC+l
9SUzXvOiDyb3kF8mnprS/i7fa76aqn2uke/BfaUDxr9SGex4WD7fMB9L6Xjl
iYk+mLx3PDTRCeOh+WLDvC5Vq4x56YXxz0QzjIfmCw3zxkRrfHl6dmWH+WGS
Va9nUTusDPmrU921HeaJuYXXSkOMTph9F3eYFyY1msPz2ds5R/6iVHNZOoek
msPTWatuOmC0xGiB8cbExxJdMbrdCzssU/4Ar0V3HD0y0RZfkGouSefgMPO6
MBN/TPltMhM/zEc6LF+eLPq1+bNmPWuL6a2F+eiL8cfcx2erDo9M5uGL+Z90
9k3PjwzzDvNZ/WEWWmb8J+9P5/UOy5VHl4ymGE0wHpn4X6L7RVuMNhgPTDwy
LwwaZdWhT8Zv88EOy5M/N+iUmfeuz5KfJR6Z+F6e5Xpkau7wvdTJm5Pce7w0
P+2wDPsNfC/10SuTmc91mEfmhx2WZ7+h194eZg/z2eih8bh8r8Oy6+9xTTO+
mXhi4oeJNhlNM76a73RYdv3drm2mBl9M9Mb4ZqI1Vta9vC/Jp3/YNc/HhvqY
e688e7Lo7021z6XzfG++B5poeWFyF3TMX6ba+1LN4+n8x2ule47+m190mKfm
U702SzXy4GQe+mp8MB9NNc/0mq8m+mc0zUu0TfeM5ya584+l58/2mq8mGmi0
yWij8bhcsp29NfHfHC+dR3rNX/MUr/2b1y7VNr00tfhhttOZPJ0pOm0/Gmj5
bEb/TGrx2JwqnWk6TSfNXeWziZfmMn5nNNN4d7bSmdjnbuv1D/hseW9SjwZ7
wk7z1/wl6KzP7c8aa/TRE6Xnk3WaP+dvoU4aa3TYE6Rnk3Sa/2ZHn2mtmSOd
NTrs6d1Pc4l0fug1vfQ5XietNHpr+XKWXHPNPtVJl42megb33VwUTbJruKk9
r3+wPhv/zIXcQ3Ny11rjw4nuWZn3+GSix0b/LE/Ov7le+0mv/cXr5MuJf+aC
nebtOaHrtJ8IM9Fv45kpvfU47p1JDZpsZkmXTS3abPw7peuexGfizcl+vDmj
ThvvTnTeE3ndJT4bLTjenNKDMxtNuHTa2/N9U8+eddNX47uJryWabrTXaLw3
7zRvzr3q5rf5wsBgzTcabunEt+afQ6rd2+fh+/nSQNaNU49ue5NUN7f7c450
781nvQ7d9+i21W7aab6b+HMu0Zf9OdmNfnyttmnLuetmqXZe9+jcz+dRy170
4mu3s+8nHp3Lub/maPfpROt9bb95deKxiTYcz8xlg0/nNf3m0Ym2HH/OVd3r
80Dvvzr0oyHHl3NN9+ZEL34dfzZM5/UBm4OeXF6bG7kvp2peGzDdOJ6da7lv
51Z9pi2/IT1/w2egO8dncwv+vXe/Tfwz3x0wfTi6bunM5Xkp7869+sy7k9q6
10YfT2rx0dzc/Tnx70STLs05unVpy7d1v028OfHRpPaddN4bsLnUojtHo07d
LkPUvuvzW83sDSqdOr6fu7qf57s+l1r07NxTmvOHOs2T82h+3ambxvyTAdOf
o1NHey7PzMc6zZvzmEIdend5a0rvfm+neYBq7kI+D737XenZ8+m82Gk+nkf7
vI/4c1rLtOvy+nwg1byczqud5tmJjv3jAdvNzMVapoNn9/2p5ulO8/5k5vGF
2kVapn1nNrr5J1Pt9an2pHr27cTfE237E+nZM+nczHdP5+RQg3cnunb8PdHJ
P5Xqnkvn6lR3TToneq3q8PdEE39lenZTn+nc2YnWXdp4aeCvSs9u7Ms6eeqK
evgr+gbr65cMM9DY49cpzfuTzOHX1H7Tv6ONRy+PZyea+efC84f6TeOOzh6N
PNp4/EGlv3+8b3Cd9PZo7PH1fKYva+KZiSYeHT1+nPh2yo8Tv86H+7K2nlmT
Nwd7gaKhx/vz6T7T5zMPnT36+pGt7AOKRh/Pzqm7Buvl0dOjZY96+0ncAxTd
PZr7Kb0mau7RvU/kdVHDP5XXRg0+tRO4v2elZjp6aeyloce3c4rgO/pkqNG9
0OPjEzq5e3z+7LVP9Wddv2rR9+PRuYj7fJZc/y5tPdp8tPfo69HfL9hlnqD4
a1KHjn/1UIdWHh0+Wvr5vRb/z9/7TM8vLf+BXis/Tvw/F09nJF6MXabPLzes
Z03vQaN/iN8DLT8+n0vg8ZjOKl2m2a94z1qh5+B29inFO3SZLrt7R8PYgIN9
LvdYMj1bNp210lm/yzT7aPXR6OMNis4fjf5S6dkor0HzP4vX4AmK56f8O5dO
z0ekMxrfxy5jB2Yt1MIIrN5lLAD+nkUeYLX0bKOuzAXg/8m+2X2G+ADmwAGs
kWo36MqswGteP6fXixmQZ+k+XZkLWLpmun20+fVG9vaEAYAfQMO/R1dmDUbU
rLbWMM9QOAEYgV26jCNY3Of1NQb7jo7xWf9MdQd3mZ8nPIF2H9e25zunZ4en
c2Q6SzpXwPN3fCb7jm/bTtiDnVLd0ekcy78bzhm8Vag/oZ39Rg9IdYegoe4y
/0/YATw+P+jPDALswYHp+Sld5iUKf/Cu18AZwBfAEMAXwBAclOoOS+e0LvMM
hWfAU1S8ArXyFT2zy/w+d0tn95rt/qjf6mATxBlwBxiEE7rMP/SfNdsf/UNP
7zIP0u3T2cFnfViYtbXPglnAQ3S7VLdrOgfWjF+AT4BhEHcAl4Av6Dbp+QE1
ew6fAMMgxgF2AD4BBgHP0W1T3S7pHOEzxTPIT5R6eYDi/XlwzdgG9uIBKq6B
OmrwEj2olvkG3RFv0cg3nNPOPqV4lO5Ty7wDPfiQwjvE2sg7TMh/00xn4kZm
HcQyxGfyH40chJ7JezQyDrAL8AnwC2Ic8AiNjAMMhJ5H/1H++BX5BnmPwj9U
nFOAJ8BfVN6gYhXEAIiDSFf6w2dU7IM4BbgCcQ8T+LzHwjzVwkpc4jP5T3WT
l4xT+KnfapgDQ5HK/ucxyqyf0/Nf+q0v/c//PEsvCM/UD1cxWcl8RucsGa8Q
vUTxCxV/gPZ/UnThJWMU8B2d1mvkOUqNfE1nLRmnMJS36SylzBrADsAk8A8P
/1FqDvA62ISZSpk1iF6lq3vtgV4LazBzyXiHZ8JMarmj+IU+5wzgD+Q5iifp
6KaxA+j+xSPAGIgtwL90ba+7wevEIkwa6qKPKXwD3IA8TOldp2nsAIwBPAJz
4BSiTym964Y65sAawCrI7/QVr4szj/BaGAd8TcUYoOGHGdiQP+u1Mjcgj9PI
GMAiHNUa7G+6aJgjj1NmHd0yvoBZsAfyMoUtwMcUDoI6eZ3CFMjPFLZAXqjw
BRs3be+xrcwZwCmM6M7eqKrdyGuP81q4Cvmdrp3O26n2nXr2N4UfkMcpfqlr
hJr3vA7eAMYA/1QYA/T/8kpdL513vTbyC3iqihUQV7Baqr2tZj6pw30vrAAe
qGIixC3AFdxes7kwBbAHeKkyD+5gdbThNfNTXdBnwTOc4rNgGsQK7Ozswb9r
5puKrh++AL0+nAD8we7OHuCfCp8Q/VbFGdA/TugXZ7Bjd/ZYpeYTfp2pm6fq
ts3slwozIE/Vu2tW81ndduKxul0zcwmwDjt1mzfrXT5TtXixbt805kAMw6Ol
7LsKQ4BPKpwBHIF8WdHswxDIgxUmYcJQh0crTMITJfN21XNmwRjg0/qoz7kv
1byezpvpfF23Wnxbl+bXlYZxBzADzIM5eCDVvZzOq/w64vV4tS7jtTt7rbiD
59P5qm67NXNnn8n+Z0vGH8AG4NeKJyua/ejtCk+Adv+5VPdSyRgEecDK3xX/
VhiFZ9KzF0rGHjw8xExq5fPKzHcCN/BYzbgDauEL9ki1ezWt7t3AKTzuu2Pd
nk3f387MwqNet7zX7enzxFJ8XcpsgXxepxnILAKa/a+cVxBboLqpBzILADsg
FuAb5xHENuARO9VA9paNnIGYBDEDYgzwfRU3gG+sWIfIJKh2eq+FR7i6ldkJ
8QjiHeAR8KJlv7xkm84M4CeLZyyesgc1jRlA149WH2ZA3ALMwnOh9uBmZhbE
K8AqyGf2wKaxB8x63WeJPfjUZ3X0Z99YmIIbfV70nf3MaztTbVe/8QcwBTe1
Mi8xi3MHqtFMuAP2sxsmYKHyX/vQRibhlVAjJgDPWfEFYhIWKxu70ON18q4V
u7BAej6ybP6y6P/xlmWfGAG4AhiBldJZpTzYp1YetcPTj6+Wzhpl87mVTy1z
7mhl1mBEer5iOXMBeNDiMwtLAAMAP7Bc2TiDt8NzafOly1821SxfNoYAfmCe
MIO6D70OHmCRdBatmh8tz2AB0PjzHAZg3nTmq9oufGnhBU7yOtgCMQ1wBQt6
3fxD1N3ttTAGc1VN6/++6/zH5u/S+DNTy1gA9Ppzp+cLVQezBbAD1NzXMr5g
nvRs4arxBR+GGs2j7gufBxuwejprVK1mnH7jB6T/v99nwhPACKybznpeO27/
YP9b6uAF4BDWqtq+OAv/XHbCAKyano9OZzz+LNVvnrSRG8AfF7YA3T/cwSqh
VnX458IVwB2slp6vk87ffJbm4KH7XTvzA/jjTuA1sAGwA7ABPIcfkLeuaiby
fbAI1MEisBOWAF5BvroThFoxCaqFTZBX7oHOHIwY+DN3IDYAz90jnTmIdeIO
fvY6+faKN4BNEGcAl7B/0P9/57wA80YOWC2cATwAtTAG4hHw5YUVoG55r93d
62AL9gscwg/OOYzwWs3kfq85OzBVer7CgOn0YQBebBkzgFY/MghTproV+XUq
1KLpfylwBVOEmst8VslnPVPOHr748MIGXMGvYS2re6lldTAH8uvF61eswZWh
lr1wAs+Ws+/vPl53VTPPE58gn967qpkNQO+PZy8+v+j90eZLa48X8EOhVp6+
r3hd1evkDXxfNc/EAxh/YPT7aP3/Xc1MAM9GpXMQv5Y0jCF4w+tgGf5VzazB
mqlurVArfoC9d1aNG2Ce6g5uGDfwus+Dc3jM9fz4B+MDjE8wmn48e9HUS3cv
7f/7XounMJ7Bh3otmv4BrxWD8HbV6piLNzF8AXp+dP+vVM0bWFr/dQdsDv7B
zHi1mr2F6VXd+gPZi5g5sAnwBfIqphYmYL0B8yS+zetgEtDty3NYXsL4Astz
WFp8eAB5D8uX+FivlffwWF4LD4AHceQB5D+MFh+9/hLpLFUxH2Hq8BLGb1h+
xNTBDKDrXzSdxSvZsxh9v/yIYQqGV8yvOM6RLzFzYBUWTDWLVLI+Hx9i9P5o
89HIo8+fPz1fqGI6fvT7eBNL70/dZ14r3f8CFWMJ4ANObmS9v+rG8zo8icdz
rT970fh/4TvR+MvTeFzX+cu3+MuW9csXeXzX+J/UyDVf+Rz0/fI33rJi/sbo
+09vmF/x1y3T5cvPeNuK+Rmjq0e3j7b+jIb5G3/TMr0/enx8kXesmC9yrD2z
YT7J37aydn+LSvY0RrOPxv9h3/1dK3MBm1cGeyfDBDAzeiNvVhnsnyxt/yM+
7wefF/2S0e2j1ccvGX09mn20+NL3o4OXdh/dPnp9eSOrvqibhweAGVgq1D7e
HKzxXyVo96XxR7f/pNf80vozC4BeXxwAHsq/tmzfqkHTDwcgTf8TPuu/PgsG
QPp8tO67D5iWH30+uns08tK6XxP0+ejt9xgwff7ToXZ6r70kcAJo7vccMN09
tcxGb3+R6/LluyxNPv0XBh0+vs34LqPtv6KROQNmwA1cHFgAPJpXLtS+4LWw
CEPp9V9qmtcy2vobg14f7T1+yi82sw8zmvqo1Uenv7/Xvdw0T+eovb8svf/l
6RzkNfJflnczdWj5z0s156dzwIB5Nb/qd4q13E9a/YtS7YED2Qt6qFo0+x+k
2rN7sscz/s5o36WTR6v/Tqo5N9Vc2mM+z2jf8XDG51n6+E9SzTnp+SU9g32e
D/V50sYz7+1K1tzL71mezdL/S/v/ViVr7qP3M3p+Zr1ZMa3/uoU5Ubsf9fjo
1tHR38qvFQ3TrqNz7wp6fOnsb+PXnIbp4dG2o4XvDZp8zTo6zKNeHtLS2r+X
at93nT16+Tu8DiYA3bw09q+lmtddX3+sz6TuXw3T/A/zu0rv/5Zr/Y/x2ju8
VgwBtbAGL6e6L3tMiy9vaXTraNVfTT/+bjrf9pimHv9o6e/RzKOXR8/+Snr+
Tjqf9phWf9P+wT7T1EovL139xz2D9fHyjh6/bbvR9UtT/0mhFg/qv3kdrAB6
/o96bI/mTNC2fWjo+1xjv1g9e01/1cwe1OjUpaNvu4Y+1n7ZzJ7U1Eq/P+C6
fPT2XzezN/Vy6VlPerY4v2bUzX8anf13sYafs1Pdaq63Zx/1eFLjZy29PftW
SDUrpdPrdf8Idejtvwlz0fAv02FaePTt6M/xkz57IOvs0bijm18WbXaH6fJ3
8rpzBrK+fgWvWzrVjOgwLb5mnjuQtfXo2acMWnn0/cxCV49OXrp3ZkV9vDT9
+GGjj5cGXxzA1EGrT90uYaa099SivZc2fole87C+cMA05ujcp29nHf0crrfH
4/oifr0ayD7Y1K3mddLmL9Nrftmqlc4enTs6+FGuhacG/b68sZk1g9ehx/9H
qhuNztl19tTLExs/bGpnbGf9/GKpbtV0VnPtPFp7+WpP77XccyXXweN3jWYe
fTu6eenfV0GL3Wv69ysGsv4dLf3KaLl7TXevftWgp1/TZ6CNl682vtnUvMSv
Wfya1DCNPPPQtqN938Xn6bm08Wji5b+9ephDzew+A529fLLRsctLG308ntbo
2dHGRy07vtz79w723aYWjfwcXru+18qnG508Htxo6V/3Omnu73MdOzp3fLjR
rvNsbn+Ofl36+X1c684+/LjRw+PHHTXxaOxHh5qaz5vX56GtR9/+Qodp29GZ
o11H246/9nxt08GjSZfO/ZUO08yvV8+6dDTm+HnP384adunsnwn16OzRxOPt
vUDbdPFPdmT/berQxePfjf82GvcF21k//1SH+X2zF/9udO3D27YPbb28vpmz
YZiDtn4hn4MGXn7eD/SaPh1PbzTn+HPj3S1vb+na5e99p+vOx3i9aqOmHb/v
e1x7fufAYM9vtOfy7B7jNSf0m0Yd7248vqVll+5dPuB3pPoT+wf7haNnZyf/
sf5fPu+k/uwFLs9w6ejRvcvv+9Ve8wPH7xs/768apn1Ho44uXL7fb/ZaDd7f
+IJL846v+LthhrzBmYPWXfryl3uzDzjadWrRrn/dMI279PMv9Q72A0evjh6e
eejVmfVKr/mNb+tzVPNNwzTwzEIDjwYdz+/t6lmHji84enX07GjM0bLLX3z7
uunZ8QZHr46eHU28vMV3qJuunDl4h6ON39XnRA06enY06NKqo0P/IcxEiz69
a9t3CnX4iUv3Ln18nMWcn8IctO/StI83hO4cnTj+4vIJR1c+n2vU0bOjff/F
a/ATRx8uLfukro9/sjBPvuN7+zy07FOnM02f+Y+ja/+tkeehTx87PZu+z3zG
0bAzh95x04/NnM4sfeY/jm7999CLVn2q9GymdOZL57J+04ivkZ6PSmfNtunE
p+gzjTo68sv7TR8ea9B9o1OfMtXMmM5wr7203/ThqjvQ6+YM2nS05OjI0bF3
8GekptWzFy35HK453zfUdYYa9O6zBw07e18Is9gnPTpacvmQS0eO/zh+5eu1
TXeOZnxR16SrFh04fubrtE13Lt06+vaXC7PwN1+3bfp2ZsmzfOWgLa96rTzM
mYkWXd7nKwU9O7X4oM/ldejR8U5f0fXsaNk1C690dsoL/aJO059Ln47mXD7o
V3WaLhwtO5r0BVrZBx1dOF7ol4Wa+bxGunRqLugc7IkuLTp1PL+wc7A3urTw
aMoXbNl90Kyf3/lnv3Rq0ayjVZ+/lfXy0os/2mmabTzQ8UjHAx0tePRJRw+O
Dv3BTtOgy2+dOvzWqT3V66RvR4eO/nxMmLuFz0SzfpdrxtGfL+JztvVnaMTv
Dlp19OTSp7PjnqBNR5e+mPdv0856eGnD3+vMuvDol47+G2042m/06B91mub7
7iHqzvQ6adPf6jRd+j392b8dPfrrnaYxRxvOj6MPjzpzatCRv9k52I99PN+z
tNfu5LVoyt/ozJpz+bardqd21q//le4cP3b5tD9b0JyjN0dLjv5bnu3ov6U7
f8zri7Xyb6e2jQd0Oo+6Rj36uUt/zn705wNdpj9XjXTnzBknPRsvnUeGmDMy
zEF3Xk91n/dlD/cfB0xTjpZcGvFaqmmk83Wo+2nA9Olouvdpm64brXg/Xrvp
fOwa9p8HTHeuedRKo47/+wd95gGPRpxn+7XtmbzdP+ozD3g83tGbM2Nfr+Nu
0Sv+w1A7bTPv29dr0ajj5d6spfvWzRM+6sjRbUuzLV/4eqq9pG7+72u0BmvT
0ZzLX74n1V2c6vCIR8OuGmZe7TPRgHfVTDOOzlw+8dTwXJryqu9Ej462HM24
POMP8b1o0aVb7/b6y0N99JGXNl4689GuMUdDfm3dNOaH8mtNO2vIlwo686u9
brTXHdbOmnRpzUf5TGrRlx/m89B7rxZ05NRcUzc9OZpwdORRF75G0JBTe13d
tOTUSp8uzbn069wNDft6raxL527Sly9VG6wDR1eONz3e8ujL0YwvVzNfePTk
0b8ef3rpvKU/X9xr40x52TNzjNejMV/MNebU41nPbLznpWuXznxR15mjHR/w
uk29Ds249OWLhDrNlAd+1IDLgx6tNj70J6Z7ndTOOmy05Wd1mU6bGvzueX5y
23Ti1EinflKYt7nPog7t+YldWft9R9105NKPn9jO+vTju0w/PqZuGnI04vLB
V5205tKl/yvUyhefe6ELP7RmvvRovMfhzzr8+alh/vXowtFYR5052nHV4IOP
Flya8X191seFWXjqS6/9QLrXQ+nsVct++NHrnppH0vPHXAOO1z078cSXb748
76VDvyfV7l0z73xqozf+OV6Hrvzfqe7eLvPGx/ce3Tfe9ujB5X1/V1f2vkc3
vpQ/R0+OLvxunneZdz7++ujG8c8/r5399dFi95SyhhyPebzhh/K7R++N1hvt
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
z/W95FPtHPp4T+VS6X3pgSM+z3uUU7W777zZ+5RVdbj/c4h7uav4X/KlDuoz
9hc+eNO2fVP4X7G/ZFwdmM5hfZYxdU6f8b+wwuRGbdY2BhhWFp72TN+hzCvu
dWTohUWe33s3b2e2OfbDB+/N/x2EvvcHck4VfC53PLWwUxzydt57SJ/lV30w
YO9IdtWWvvMU7xFjTM8+MN59lo/Fzg+9T3u3Ct/n5LAb9lgMMTPIrrqgz7Kw
xua/ETaNNz5xWGaKxSPTR37W+X2WUwWfS97VOE1jmMmngmEWX3y+73ved5Gn
dXno/STs3Mb7TwzfN86BQRbbrHtf1Gd5WnDO4pG5+3ZhDjPgnM8Oe+Gd4ZzZ
x/udPcSeZ8KeC/ssa4vekwu7dih8qzPDrG/TjLP6LGNLLPNDfcYjk0UFLy3u
eRe/i94ZzhjmF1b3x07L4LqrL/PTmgFHDR8tJpo55xX6v/R7kAd2d+gRn629
cNdfhFp46Hv6MhPNvomblsFF766F3vPDzs87jb0eE+46SdPywHb2e9JzYej5
LOyOXPekTcsHY+fOhW/Fe8JXi8dWztdZ9cxSfzeQd1ALc03mFjvgt8kPOyfU
w0x/P2D3i7y3WG31wmy/mc7ZdeO16fsh9F3sO8VZT+n3e73P8rm4o7LD4K7Z
I9667ntidhizxHdP5rNeC7MeK8xSZhhZX2K0mUd+WEfNeGn466dT38rp+67S
ynw4rDZ8NXliYrbpJS/slz7rvcB76Vu1Zey28sXoJasMbpz7wXqv7HXixsVj
kxX2g8+82GfCe1Nzjc+BBYfJVgYZXDgzYamf7TfmW7lf1IsJp4fZv/UZ900P
PPkzqQf+mx1XD8uM9srOR9MD2z1JOpOm81yqf6nf2G5Y8IPb+X7w4DDW7Brp
vXDeE6TzfL/x3QcV6mG34btX8n2w5uOmM146LxR2wZHDUS/pDPnosGOsmnHV
8Ncv8nddjT/vEvu9onPi6h07nYm8H3b85dTfVeiHRb/RZ7BfuWbjpJ6Ja8aQ
c9fuhn1DZZVtlc526ezQZXlgsNPzO/99Q92yycgbgxGH2Yavvtt3rOH92/gM
9S9UM8acfjLQYMe1Ex59TGEOLPtmXcaoXxN2HlXouz3Ub5zOpuls3mW5Z+yd
x/tvrOecMvXDtsf7b+L9W4Z7w6JzZzLQyEyDW7912J/fW/uZQT7aXL73+tA7
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
b85Ohk//d6+x7dQP8x7lI5/tcy/22cpKjn2tVs5UZhfM/tcdxrOrbqO61ZIv
DI/+XYfdR5nKMO8b1zP3TkYyecV6B7HmP3ufspVh8x9MZ5NC72eFXvj2Hzoy
A9/oNL79vl7j5k/m70n6jZ+/22coC5n+zzsye08vHDrs/f29xtIX+z/0ft4B
nwDe+cc0oxR6Yerh1z8Ou5TfrLzlYemM7T1v9+Y99JGhDI8ec5e527jpjN+Z
WXk4eXpO9T7lLsO9w8vDWcONq/d979Eu+tSzbDsz9v2pdiCddqdx9tN0GmsP
a97RZz4Ap/H7kX7jzclR5r7MGNHOXHu902bB3b/mu+k7vd/4ed2z7vuancbd
T5HOG2HfVqGPnZOEnezbyfexC0Z+sk7LfJ6707j7X3pzvzj5SX3GyLax6PD3
ZEBrp7KfJ/M69uzuO2D8J+m0TOjZO43XL85X33Jt8xMgF3qWTuPOYevLfcbG
t/uMjSeDmWxocp1XbBtTTTZ0kdcnG3qFtrHz5EPP5DNh7RFXw+z3hfo4d/m2
Mfvw9St2Gi8vBr6ZzuSFPjKkyX2eqmVZz6u3M+fNTlh78qapnbpl+dGrtjPT
v7zvWLUz8/wN2L6wRzumaVne82pt49Dh6mHl10lnvU5j4Hfk2/dZfjQ9MOyw
6NOm3ulatpt+ZVwv5TNGwiKns1GYM36fZU3/J8xhxvQtm7G393OP5dJZs9My
rsm2fsJ3qpbvsm/YSf2odEZ3GoO/baflVtO7Vz3vE0NPRjWs/xrhfmRTL5TO
3qEeXl950tqzejprdRqnT/b13L5nz/pgjwDlWsPKi6+HPSeT+or+wVnUMPLk
SK/dtixp+HWY9S06M2dPL/nYC8Kd9htjT971LN67lvfCy+MJsFWn+QKQk70A
7GX/4Cxt/ABGt413V73Yetj8ozqNsT+Ou9eNr6dnNt9Hr7Kxd/b7HVA3Bl81
3OfIMF8MfnH+gXXj8Jk/h88mKxufAth4+PpDOzNbD2u+R5/lXMPjw7evz++z
2sa5i1M/vNPYfTKzYe/h56nZsG0sfJwt5l6zDwk9mr+hz4dnJ0MbXn6H0EM2
db1pfLmYezj/k8J9yNcWpw9rv2df3qNMbWbAt4uhl1eAZpC/Le6e/Tums+sQ
c+DGxe/DMsfcbVjzf3offPtpfZbFfUv653Brv/HqsOcDTZujrG3lcsPWb+u7
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
+5w7uwd7qeiuP4f7cbehfFGuGeL74sXyS938VKYp3EG+KNxD3ijPt7OvCt/s
Qf9u8mbhLr+Guww1d+8wV14vL/q74bEif5E30nnTZ2reqmnGaums3rD7RV8V
fFHkUSKvkTjv9XTeT+eDdD4MM0vpz8vl/uxhEnfgvYJPCN4r+IS8PMQO7i3f
Ft35rXQ+Tuf3v5iv++/n83mHa3wHnjfyaIk74nu85e/CDnxYvgjvU+k37xft
413wPFnTdx4Ydl7vO/FNmayw57XwPu+l8/UQ30x72DHK5x/ks/GceX2I7/Vq
+GfxPf830P3nb6T7Hux3vc7viSdM9INh1ifplKvmQyPfm1nSmTWdtRrmwYLP
Cz4seNrIG2bOdOZPZzG8HsrZh4WZn6XzHe+bzm/deTZeOd3pVH3PzOmMbpif
zDHN7CeDjwo+NPjezI2XyBB78MHBr6cLjtrvH+frHdZu2DdgvrxqmP9m+88e
NEums3ThXX5Np7Nq3jM9he+DB806/FnOv9MRvkc7os/NbOks5DN/4ZtUs+dN
/CaajcfNuj73SJ+J3428dYrf4+fu7LejebOF+x3ezB418tMZns6i5ewns1M6
O5fN6wafm7+nM0U6s6Uze5iLXw6+OvjNrJ9mb9jIni746+Cjg/cMPjv4z7zn
+xZIZ+Fy9tbBTwcvnUkKs/v6s2/PBg2bx93lzbNg6l01ndXDnfHAmSCdCcN9
NWvuv7jnMX7P2/2eeALpW4wOs8fD+yDMlZ/PRmGevHb+3TKPnk//4p03DnPH
T7Mm89nTpzNH1bx/it9i3sIuvsdx/j3wErrbd35S2KlvhLfQ39LsydOZKZ1Z
quYXVNyDdxCzj/fZ+A3d1TJ/H3kV4Z+zXTo7pDMNXgs+D28gPIXkD4T/EP5A
8i1iDp5HcRaeQdukc3w6J6YzrX+HWavZP0jePJqNf9DwwvdgxylN88BhF148
D/o3WSt8b+2Zump3lx+SduBTtKDP3zjM1+y7wuyPCu+yfTq7hB3T+HeRxxDe
RvIpej99+w9q5jUkfyF9q5OHeJf7fOcXYd+O6fwz7JEXkt5lubBn2BB7TvX5
eAbhN7RFuPtcYY7u/GHNvJX4NvGO8X74Dm2Z+rdN5/B0jk7n2HL2LcLzCI8m
PJO2btgdmIH3Efd4wOfg06Re3QlfoX/4DDyi8EzatmH9+Aid1TQfIfofapl/
ku5yZGEOXkp4MX3s98E/aRu/z+l+n7P8Tvf7vZj5dZh5WDpHpXNcOieUs9+S
fIv0zvgubVs1byH8lnYqvPeZ6ZxdeP+H+bNmy3yKtO+QdI5I55h0Tipnn6bi
Pnk1bf8Xu84q7HrId+F1dKh/H/yaNq2a5xI+Terjng/5/b73enk24aEUvZe2
SufL1L/kgPk24at0lvfj24Tf1Cnh/urFI+lfZfN92jqdE9I5MZ2vauaZtFSa
t/RA9nS6uGmeTngt/eR3kpfS5WG+5m4YZn5RmKl77uJ3vdjvKy+nHwrvLD+o
q9K5oZx9ofBd+trffZkwV95NzD7fZ/+HP1+1zBMpzpYP1DXpXFc2P6i7y+Yf
pft/6zvwZVruL/ZcEN6DXU/4u+DhdHH4LvKy0my+i+byPS70OU/4feVthWdU
9Jw6PMyQz9Jt6dxeNQ8p/IrwS9qNP0c3sveSPIHYcUnT5uNppe+At9Wt5ew3
hZfTGemcOcSeycIefQvt22OInRc18148qvDU+i3sxufq9rJ5Y+FzhcfVKVXz
torz9/BZcc7vQ8yR79VxacZp1cGeVD/Whr677r2X3107+I/n+GAdW5ijb/FT
mBf79e74UxXvJ8+s41P/6dXsr6WZP9fMt2qo+8XZuiNeVHhe4VuFb9ZNYdY0
6RuuOjDYw0reWXh86RvF/mvSuSXMwGPq93SnqfuzR9XKA/au+HHJTwsvrc4w
Ux5V16VzfTo3pDMmzJs2zFvF5w3ltYVHGJ5X+E9xz2t91q1hnjy4mPv/0fbm
8TqWX/v/tm17Y897G4qKUkkRUZmHokJpNGTMEBFpVIaEhKiMGStUMlTITBJF
oyRTZjI1KiXNqt9xfK+1nmvt03nde+t5fn+8X6/v6/t87vM81rHWeV7Xfe+s
xQEF+VKCddkby/b9Yr+qhRL/Ln63zAz6W7H/FHt5zTPx67q6pmplT6xFGcHn
d2eGvb1OGI2uh9rj65/kQJuuZbWxF9YC0bZbtGnfroT4oKcV+2ltBJ/x/QN8
BX4BvyaFMbM/F/teteX3E7AYay4DBzOD/lPUa3t1qVbtA7Yd7PCsTx/ypwSe
speX9vHSfajd3Yu9wRgD+4dp7zHdT+Nhb7Atsn68eGP7kHHdJFmH/b9KgE88
+tgvjD2/VA/7frG/lWo6kBnqYi8x9upKwlqp8UFPMdWlmjaAbWAf2A8OOl5Q
K3uQtUkL+pCxD9gS2euLzGA/3Yt9xAphj+T4oC+Yu9en4HPZ66BZ342JfczY
t2upxMNeYto3jX3HtKeZ9gqrA3Zjvb3gCPgO/AySsGYhs+4daWE/sFFgRUbQ
v4txsK8Ze3ixz5rd74z4sB+a3W+P7HcYHOOdCwo6+7VPC3utcb/lsh/zc0j2
S5H92OuttMSxx+SAMXDdDka75ll9P8fRpvGz9xh7rqWlhH3UqIMauDd7lWnf
NfZp0x5q6qdqOCk62I8t1aw1kt9ZRQ/XPCIxsa8b+6ZpbzZde7fxKrFgsCb7
tKWnBL3a7HpHZB32SWPPNu1hVh80AkexxomkoK+c7eFWIzXo46ZrjQHj0oO+
a9qnjf3Xjsr6ujZ7wl0DrjNr/5uUs+cbfayZGvZJc/fQ3nFcX/vHsVcdfa4g
vrInXLqsVd2sxbyMNbnh57PlszXxubrxYZ837RHXFZ/rxu9S6Tn7vXGv2uCq
+KD3mtvvjWvwc3eD7mnBvuNl7zWyP3vMaf83rldP1tI+dbqWq8Wu+ays+a6z
ZgkTE9e0feXYg4295diHLTslWKsHv+ulBTGulTiP8ftZZtBnTtfqEB/2kLsr
Puyd5q6rvd2KYP0GqeH6L0DvNPGSfeY+lL1+zAx6pbFPnfadU826R3GzblFZ
12rXtdfJuqqf65Y0MWg/ug4SA3vLsYeb9qZjn7mr+d/VGt09+T3W+POB6Ob6
7CtX2qzv6n8Q9DJxuL30dC/rE/e6z/GL+75v9mUvOvaxa2X27G72Ua907Z6e
dbWPHnvZsYcee/T1NWuwh96ZKUEfPP0Me96ph3eDnmCA+cyQ+LDvHHvHsS8e
e+mVwDolU8J42VePffKmYs0X04MedOwnxx50f2UGff10n27xYU877fNn99D+
dlF7qHbfPuxRyLV7x+fsmcd12W+PPfoapp762T/k8+y3p736Bkj8w8U77fPH
nn2NUnP6OB28lB728NM1tf+exuv2J5wka9tefo1zWZuadW1qZn9B9tybEh/2
7NO+dNp/T3volUoJevC5vfDm8P06PVibPfnYG49rn8wMeuSVM75of0Dt8efu
qf0Fdc/SKUHfQN1zhtmPMW2UmLinxvS37FvW7Gt7GOre7E14bkrQy1Bj0TU3
yXonZb2LPGtpr8AXwMvxQc9A9gtkzzrbM9Cuyb6D7Af4ubO+9ges4NlH+xlO
Ay/GB70G1S/tN/hYwaDnIHscuv7Yfbd79v1X9mZvQvYMZD/DWc4ebh9FjU33
ov/sU2jX0n6F7D+4Mj7oQfhOfNCH8JGCOXv6cS32L9SefrouewPSK/YzZJ9G
+qN+sLeh9gtUrewZqP0Uuf5tUjsDItbWXNAXesHeh+WdfdivcWl82EfxAfHc
9l6kJ+zZ+KqsuU3Wyy9e6FraH1HXYn/FjfFhr0PttfiKWXug0c712XNxnuyz
A+yRvbQHou6l3qwU39mTcX38qX0Z87rXLmcv9lFcHJ+zZyM9t2vQ450ZQc9E
/d+xb+L78WHvxePxQd9E9kycAV4rGPQoZN/AS1BvLVPD9bRnIXs5sqcieyWy
f+HujKD3IHtRsu8h+zOyD+SH8WGPRu7D/ofTwWyzR3ns0QJ73J4a9Gvk+m84
6++R9ZNk/SomHvaRZL9J7R05B7wKKph1Vf8Q0a7r780I+kqyb+Vm0ejqWw5W
gEopgTbVtC8j7PPI3o1XGk3a81E1ub4uBpd69C0STVxXe15yffahrGrW116U
xz1xLzaaK3r2sDFwr30ZOftrah/KP7H2Sd57WGcWmFsw6EXJnpduP0rtq8h+
keytqD0c2TeSPTWfltgOYJ9DIA17pGcFvS5/xR6/m324x3zZZ1nBU3tS6l6V
87DXQZAqe7GHJ/2aK+tzbfbFrCJ5PSja+L+nPva2PIb//c/xQX9Lfs72nrzC
7M3Paw9KrnNY1mGfS/ajZL9I9rBkz8gfsV7h/Dl7Xn5u4uK6VzqxMSbtm8l+
mEVlPfaq/Anr/RIf9KGkRu3B+WnBsA+nrn25rNvRo/lL0ZwpmtkPs57xoCDW
z8gf9J5kP03ti0mt1YxW9rxkb81RacEajJ39OO1a7BV6BiiRP+xPqT0ndX32
69wPvhZPqps9uD57cXYFo7HPGDAOPMvviGCi7E2P2KOzCNYt5tmL/Tq/AF8Z
bzqdxvrMQy2JLc2zvvbnZF9P9rbkeu46b6cHvTi11yd7ajYwXqVjnez8Ye9P
6xNzcBD8WNCfgy7gLs+eq9OD/Y7KnuzJWd/smYr1M/P7e5SeAL/kst9Y7LFG
4tJepIyLfUK1x6j2CdV42FtT9/imYNBrVNe7OzXoe8m+mRqD9ghlr88zs4Je
n+xhenbE2t9hzZ8LBr1Iu3vWe9esV0LWY89V259U9bGnKXuu1jYau4HxokvX
KpkV9DgtLxq0b6nu/Z7sp31KbZ9T9hxlr9PLnM+qBvby5P4NjAZdlzq0Lyn7
mrKnaeMY62tP1Fhr95R115l12e+0kcTH3p/se8r+n+x9ekP+sO9p/ZRQG3ue
sl8p+3+yX+kNEZ+/GdwKOoHO+cNendoPldquSQn6deratqcpe4iyzyj3YG9V
9hplT1H2N2Vv1aaguWf9c5y1dc0TZs1SzprsFdvYsxb7mmoPVK7FHqhT04J1
fpO1zjPr3GS8oA/Xg5tAa1ASa5xfKOilav18UDydBqbHWPtGZ+1GoAm4A3Qw
ms/C+mUKhf1Y6zseP5TH/di7tRXWa5c/6MeqfVy1p6zbm5VrsIfrX7IOe7Sy
9yp7urL/6u34bJv8YR9W1cteq+xNOhqMNetfIGtrP1ftVar7sA/s3569LsoK
esO2xFr3Gt29PHv9T9/YlLAXre7zp8TCPdz1bzHeaDz3yh59TAzaY5Zrs9dr
b3jfJzWM4aTo13Uvzgp6sHLNrrKuq1l7zlJr39RQL3VyjXJZQc9X1ac9a9WH
QWCwx+/GovNGo9P1/B+jt5zoZZ9a3YP9btlfd0T+oLcre83aXrXspcs+sux3
uwX30Lb0wAPtfcv12OdVe+Danru9waPgaTBS1nf76d4i66tuuwf/UbLdQ/vj
sk/vI8YP9qFlf1zbU3dretBXt7xoayGfGQXG5A/73Wr/Wu0T29RZ43OwIz3o
Z5uUGezP3rnsa8seta1k3WfAuPw5++NqH15d+zbP2tvTg568XNuuy167Q531
2JuXXunnqEt782qfXX7G7YX7Kng9f9hvlz1n2XO3ZUrQd5e9dOfxe1pasF6B
zKAHLde1PXJ1be3FOzN/2I9X15krayTK57U/r+3/Ow+8kT/0hXpaiJ7BRktS
5qm9gGfkD/rnau9c9qPl57Rnrva9Va3U+QqYkz/o1ev26X2afSfBFNAqJdDP
Xrzsp3sgPYylsImHfXzZ75Y9gDs5e70MZuX39xLWfW6PsU9Bsw/7DFeVfdhb
l718B8ha4816w+DZk6k519P+t/ws++buBnvFN+3jOwqMAWPBxEJBb9yOKeF6
7EfMPr/0lj2B00CG8bkm38Wzgj7F9Hyxsw97DQ8pFPQbHmf0Pm/2Gp4a9DxW
3dwr2bNXdbNfe9lvi9lvpMSjcbDfMNdnT+ClacF66bKmrtPFWWOArDFO1qHO
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
cq57q2+uT8wnc8j8cTalneHo5mIr1tlm1oo3edD1VDNnRC4wWjkvknMNWRv5
pD44P1KfjZxJeUBq4YjUgp2BaXVsEk+p5XPRY7WUM/E9JjU7RHTpfeDq2+vR
d67Rty8x5wxQd0bncUfbVqMtn6OtvNE1NEIT53ZqDXJOo85/vCFfOFeRs/M6
ORpt/jnr8sfEYN7lH4nhzMt/QcGkcCajzrNjnexMDub8WT8LmLrR2Zicf8jZ
hZzDyTmZOsPwMYlpmPjN2Y6cPck5kc9KrAsyw7mdS8EysDwzmE/IuDnLs1Qu
MfOcca6kzqvUWZs6t1Jj2iHx6OxKq7uNo516h4tm1atzP63GL0xuzonh/1Hx
/4T4z//IJJ/RmpQUzO6k79tz8dzODG3r+DzceKz+Lnb8pa/7jW7O+3TndOZW
T248J01NJZi4Cjk15aunJCc+zUsbTy0Nd+roGaeWFjt1tFLyxBmn9U+jjuKT
cs4+1RioX7VzLiVnrape1erWuVvXnI/6peP/dUZPLM9/Es9/F53/OjVf0Gje
4vFaNVu/2+TibyxvD2eFs051TqvOEG0rnp4UP1kXaaB4UjgDVbWlgNTUYFar
+llNPO1ofNV5qNyf81C5dy3Zm7NEb5Z9bU7t/umgWFI4M9aX11harI6Rkl9q
WWHq7CvRVNtTYzwPpZx9bf1orLr+KNnD1vER8Zux6uxUjbmj7NMV9MsXzgXW
Wbk6X7VWUjhXtH5SMCuWWjhvlfM41YNMU9+c78rZq5ybyvmj1Mr5ppyh+nRG
OO91XEYwd3OZ+MK5r5y/+bXovhHcBlrmC+a0ts8XzJu9K0Kzzp/VGaWq+wuj
l1rT8qC3s9HKWbjjHa06O1Vn497g1NMZTu4OGq+4v87bpSdjJXfM2zeyHue8
DgRD84WzQ3UmJ2dT6to1QYOkcK5pM9A2KZiTyhmnnJ2ps2aLgmKpwcxZjZVz
RzkvlHNUqYGzUDkzdLro4SxUzgzljEuNs5XJh8b7OHgiQms1qaN6Ti25mg8Y
zbauVLerWefZqu5JjnbW01onBtbWd04c7UwcrKuqJne1pZYOOPVu5/eqLjtf
d42pZc7V1TnMrWS/frl4xpm11SS/9SJy/IUnx5zBm208q2P86p4enDnXK59P
P4hHdrYxdd8JuoABYDAYki+nTs0v9XJm7x2gvTkDWpeuj5lGOz3V+b6q/W7+
3uvot7o5S/i4yavNaW/wqOj1eW3zzVzrrOCWoKPJ/fce3UWcc6W6rzKaJxqv
3zUe/yia3drobc6+zsednO/Ue01n5LYAt4M2UhP0mHOFj5q6KJ4aaFI/1Ued
N/y8+Kk1wFm6H0sd/OTR2FdqYFC+cHYwNeocX/W1pmhmPeic4pamLjoazTq/
mLp/8NxbVjvzrzOAbQ2/L7q1hjl7mX72kRqIyj81XiPaWosu1cO8qwbrYVRe
mdM+Jne613TwUr5whq/Owr1GznQrOdcdkoK5uN+LD5w7/LPRUBKcZfzQubZT
jCc63/jFjJwznzlbmHOYf88Kz4V6orN67SzmuaJ1keNTc1N37UTv0Vz0XmW0
TjR1p1qnGR85k5lzin8Vray3x3KpNWprKtraiR710OZssrOv5u8DUzsnPHty
vrPOYp4KZsje9EjnPVuf9J62uTwm/uj8Z3pztieXOvvY6p0WoZU+0aMJjkab
P601netMn3S2s843Pmq0cd7zL8lB3qiPc585o1pn5LKuOIuZ9fSp+PWbx7MJ
osfWFefzcpb1a8a3ZcY3zZ87w1n9o74Toi+Wd6rV5+HLET5qLH94YnFzP8uJ
QWdPu/kfJLGMTwpnPE9NCuYba138JPH84YnJzvF2Y3lJYuE8a53VPMeJTePS
Wdc6y3lrZjA3++8YseqdpbPB3btL53j7al7zp/OJNXY37hMSd9S9FiufL+bR
g09ieMBZ5Tw3M53a1Pnnbh1q7anexkarapzu6Frv7P+n+D5RvJ0l/tq51Zw/
PgyMNHtPSApmdb8gPqqWX/lbseMj54afJ/qsLjsffI5o2+TxhDPDOQ99L9gP
DoGvwNfg23xBXQ822tz61vnWOita5yi7ek8mh1o585oztDnzmDOVOe/a6p2d
Ecxttno/zwzmN1PzvxGe6rz1WLEMBaPE30kmlqg4XO9PGu/LOLEwBy1NHgZ6
cjFb8vFGRE40Tq0bW6taMzvBbonrG4ntWL6whjlXfazU0RSpI85DfwW8HhEj
Z7j/6cRXTuLSurex6dx0G6ON71UTo8a3TWLjP6jjnPSo+LaZnNmYxkj9TZba
0xnvM00Mql3z4p7Z/jH0rvfkgrPmo+pptKmbVz2+at279W69c/2yNRAvPukz
aCvYAQ6AI0bHX+DvfOEs8Mz44Mw+5fFsumh9LSmcTa5zsn+TGvg7OZiTrbor
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
9f9hpx71XpgqntPjT4zHeh9aP+nje+B9U4/7Iu4B+1tEf7kD3Jq0d2NUbeqd
SV/fN7Wp7ye2PtXDqDszqlbvds6yr07HO2f4xYgz/KmnRu33B1ujWp/q6cdS
n3q/fg+OgT/ASfAP+Bfkg8/xIBEkg1RQDJyRL3yffFTug6fkvp1s/Oa9+xJ4
BbxqvJ8HlpgcvAX2gy/A8cTwe8oaqfEPJB8bJCefgc1gW4x3eebpV1P3bq2f
Dy4AZflbKbgYXJIWvC/kdjffnH7q70bMZy+T094mr4PA42BIRs53homSY+b3
ZcnxTMnxXDAfvJGZt/vIfY6uAx/KewVzvQd8FSPXzHOBiFzn9szV/Ov7or6T
PGeeuzPBXDBfcv+WOXs29/ZZzOfEe3nMu30un/DkP+q5HFUHvr/rNcqlDuzZ
1lpgHfRxzrivHtxn94tSEzNMXcz21Abvgo253KNb5B7dLnfot3KPshZ+BL+D
v6Qe/paayEs9uHdv1L3LO2C2cwe8ARYz32AVeAe869SCeyfznewTqYWNTj18
79zRvzr3dF7zHOv+vgnc4rnHe5kzb3P9qCff7v3+kpPjWRF5Zo43g21ge1aY
V+b0CDgKfgAn4oLvbtPBi+L9HPHevXPfSwx9XZ+c0zt65nrQxPGhl4lZY53h
xEHdm2LU51ZwSOpS76bf/+P9lNd6VG/mmHqcL/W4KuJesrW4IY81qPX3X2rP
vWfcmnOfMXmps1j3yGemttxc6fvDDsnVYXmWfC25+lPuj7/l3ayw5ChF8lQC
nJXHPNnvbPbdYZ7cGUvkzmD9rgWfgB/AMSdHH3nytCU55/dg9774DfAf6OVL
9d8dF/7H3LUGbWPk0J6fx8AAyeUTMe4Le8ZeBa9LLhdmhnlcKncE83ZQcveV
3BF/eO78f3PJn/29Qc8Pc7JAcrLCk5OoPLjP6t+N91Geu7/jNHH87ZWLlzNi
eKb31NYYd9UW8ZH1/6X4SP/+y/PQPgv1Trb1u9G5T1iff5g7pcxp1GCs51W/
iBrT91D1ZUvE3aDeHBRPfgI/g1/Ab+Y7hN7dSaDQ//JdwufdDnNfH/Lc2es9
75Dq76+Or6y5cv/hrDePcca1Fgeae/qJGHe1nm/W6WtSq/a+Zp3uADvBvlye
r7Zmv3Zy9Kvk6X9zZ8fKzzKTo3VgPfhMcnUoxt3tPl+3OPly7+ky5vl6urlz
32ua5/HO7ufJa17u7DlOXvUOYk4/NzndKnljzo5LzjRf+eUsFZTzVFhylwaK
5AveZ5YZz7ea86GeH5f7eb3xepOcDfXX9bWJ8Uk9ivKCNT7Y1PkMT+ys6Xmm
rukD7xnGyyZFvD8YawJIB9mmNs8Fl4MrwJWgJrgONAJvI7ZPwV6psyPgqIn9
J3AC/A7Sk1BDoAw4H1QGVZLCGtwKdoCdYI/xJj9IAMmpOWuuMqgCLgc1QTOp
qRagTXr4jjYUjAAjwSgwmt8HMwJP6MUCsBysAG+CVeBt8Wd3VlgTv8WFv9O4
5zjD3LXqF72qCqobv+bLc5zP8DXgQ7ARHABfga/Bt+Khevcr+C0XD21tbZHa
8nkZ7/hp6y7KV9ai660+9936i/J6tqcOF0gdRnm/S86neh8n9Rl1HjNBFigK
KjlerwYfgA1yPl2/jxufXS8/B9sdD33ntZn443qjvlgPNP6d/yHGoqbWyoFL
JF6ez2qghnNGfT7sEQ8OS/zfy5n9EfwC/gB/57HeNsmzI6reCoBET73Zs1w+
Rt21MHegeuveefT3yTzW3hum9hZF1B9z8gU4dBq5SZf8ZEuOLgBlY9Tivohz
b8/833msRz3TiREeV8jFT/udVr1061V9o2e8F/caj/LJHVgcnJ3LM2OvxH3E
xKzPix/lLJ6QGoyqv83iQ27PC62vSz31pc8It46inhVu7fjqhr7sET/OBCXB
OeA8qQM9n7VBE3ALaAs6gE7gPvAAGAyGeLz6znhla6QAPEkEKSAVnGE8Kw+u
EM+2emqHNZMCUlNzPgOuBFVBNVAd1AC1QG1Ql+984E542AV05Tsc6AF6Rvg6
DDwFnhF/6e34CG9ZY0vAUvF4pfi7JjOsuTjPO0spUAFcBiqDuuCqPHr9trzH
8Fx+6dSl1iS9/gfky8XrT43XrNFdnvqk70nGez2r/xfeu/dilO+u54sjPNe6
PpB16ndNfRaVBucb//UdqK7xVt+Nj5hnjr4n/i6+FjDefirPlu1yzmP5aGvX
/e433Hig99lCiVfrbKWJc7+51/Qca3wVQRXzblcfXAOuBQ3BjZ5z657ZkyAB
8WWATFAElASlnHPqPks11oL8996gsIlb77aoszdc7ranTS34zp56sszccfTm
rcwg/4fBl+CbrCDXl0q+T+es8R77MzHnGSrpOUfbJecadyFzXv6358R3JpY6
8Wr9HzIx+2riUrlvrpBnXQPzvGv8H+96t2b+AvmlZlgvRUHpXO753U79uLXj
3vtaQ/9/3P2++ov1DIiqQ80Ja/FgxHOgouSjipzPBnJGmYvm4HbQBrQHd4LO
oAu4C3QH95r8DACDwOPgCbnLfM+In+UZwTwlIw/ZJk9nOLnS95jaoAW4HfQE
9zrPDubvMPjKc+9pLpNNHouCYqCEPE9i5bOmyeV1aeE7YQfQCdwFupnc3gPu
jXi+2Lza96ZnJb/Px3jeaH7fNOdO36dWS64/Nvn+Ss5hXt+hCpn7pZTnvLhn
IS+13zE9uv7d2vbdJ3qX5KV27bOlGWgBWkn9tpMa7iy1y9jvl/gfAX3BY6aG
81K7heFJlqld+naWeFcOXPZ/VLfqe1TNXiE5UO/r5FKvmg+t27zWq33XH3Oa
NbvCqduomj2S9d9zpvV7JigBzgUVwOURefjCeO/WtvU6lreuh88Yf9xzHevM
Mu6vwffgWFb4blgL1JP3BXsftxVv9Cz3kHcFepAGihsvzhEvLgAXgUrmfeGA
J/bKUlPume5samaEucM01nESr++OYqzvZIbvQlGxtZaYOkpcXSXvD4KHQC/w
sCf3Grt+D9YaOBucZ+6yC3N5pqgvBz21kezUheuTWxud5c7T2hjhOUfqm9aI
e1a0VtaIf1or33pqpY54eTW4DbR07j/f87uHPMPvF3/tuXpcng1P5AvfRd3a
Oltq60Jz1qqDGsbbVqAD6G587g8eA08azw+J31+Db4zvaaCI8b44OAOcCc4B
pZx3XPvc9p3ba8C1kiP3LnSf4feBB8CDoJfk0FfzzN9UMM3Uv619zd9HYIOc
g+9M/iqZM1FHzgXzeCtoKnls7dyLd0ou9TkedUb0fWyE5PBM5268ClwNbga3
SL7uAO3zkLcjkjPm67vk8A7JAtmnkavc8qTPML2DuuYxXyNj5GuyydmKGDn7
4P/j7ryjrKyarN+kJnXTAcWsmFBRCSqCEpQsknNSkkgQRJQoAoKigGRQVASU
nCQjkiUrOYsSJIkKKCAq0fDtmls1t7o4z3Of2+D7zvr++K35Y9Ya79m1a1ed
c28zqm6unqM6yX6l66Tz+QXuNTvDeqQJ719vqxrpPpO9opiqUX3VN9+rnjnu
yHOphfTPQz77mugsfaE1bmNyXzS0eS/afck+/zk5rEdL1uJF9mc39mgPdf7M
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
5oGF4AuwAWxKH9K2OntUtG3J+pJP27NHqee7gV5K435GZ+tb8exg9ivtmvPB
59z7tudFY9Ey3ugoHra5WdShI3nYpV8Lh4bi46HgXQ8/00zp4zFPJF/neWSs
y9PVladJ+0bK15IN7VnzaDPW7z1untKfvL7f+NzL39rXrvmejzNFe9trb6yv
Zpqti9RjSCpqMRZMVH6X+e6XLbYOsre3VXWQedcTvOHIa6lBP84YP/0/Y/0X
KP2/MzU44lMHr1yx2hc2u4Sf9s1NrkumDAPDA9ZAMmcsZ/xEznmvnqA6yD5c
FlTJ4v0m+hLXg/qhM/eE1OItj76gWvQP2BNSD5ml0hORMt+VTbmTwm+hesb6
7bt1k8Pfldg9z/YF9YRoPk5lz3zWeZXPPqL3OvK5vDO8zLP0VZ6lXj73yp5+
jt1Ez1TR1+4rNveD7CqPObzt2leaeni7nfL3e1H4WzLG7i9zwGKwFCwHq1l/
ma9fg2PgBDgPLkaRRV7zwO46Q8F74CNVo7FgHJgCZoCZYCfYpeom9RocoEe8
5oXU7hj4BZwM2C/XghzgOq73DfI2BO70yTbXvC/OPigLyoEKHnnXNNl7B3gJ
tAcdQKfkkC9GgFHZw3NlrtqfVnGNqb6UT91VXd7NEp4FpK/4X/ydg89biH2s
z6LvdvL5qOffV58nNX6Vt4rZnMnL+Qzi13VX0acdOEdezxLaF3tnCe2KlNPD
wIgofdovyhy/Gj51eTSIP2X2ptajOvdbBvApeeMD5dHZyqMrwRqwln36DdgD
Dqha/w7OgnPggsPL76lajQGTwGQwFcwCc8BCsFnVbTc4YHqAavceGK36YSVY
B9aD46jHiWwptbfZcLPS39U7pG9JUIo1fpp1dvUUadkGvMJ6kpadlZ4fcq9J
/8g9lfpmBffN16znvgiakp6DOKffd+S0aDolgKYyZ4cpPbWOx7J5+9dLR9Gw
uI9+L7BubdiDVjfJpnGslezeotdK9uF29pj4ayDrMpx1oSzozzNpqPKK+CPR
nMt6oLjygVfNX1J1/kj1js72reAQOAp+5JpKLtrPT599FBgNJoCJKsvmqBpK
Pwzl2snZloMVYHV8OJv0rHDNR+3/J/m8pU2+iO9bqdq1NflBNfuYfO7QYQVr
sQVsA7uMJieV1zNmwL0dZAO3gzszXK7Tu6zVSNZqvNFK9kry/RbwNfv+CPje
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
aTzPKNs+U7l2p6mbq17VuWa6XpJltmZvgH5cO9svUje/eSb1o7n2M2eba5bp
mkmu5VCZ9qgjy6RuZVSWSQ81V3kldaLMGsJ1Gca1Ga5qo2fVF1wf3VsdVJ3e
5vpIbw1JxQyy7w0Pmb2Q9o2SoCwor+pXifOsjmMGzQ4wew4GmDvRzpyCjpxz
zZpI2afrJnPGq79sLfWMoVykGdKTc7AXZ6HMFMlB2dUpD8fynJmgMvFOVZfC
XI8yXA/aBaqBeqqPXvDIPamJX98cUf0iNcnoqIFXrrl6Q/QXfW12DXNkFGm3
HKwy/hfvy1yRHUx6QDSN1tfk56rs6Wbs4YUR9mWtlfVsFodmBVmfogE92DIK
35FeK4xWlOmdWau3WK++nBmUFe+ZWezyXpB5XJJ3Hp0PVTx82SrCTF7kmMVW
8x8cM9i1B3l51MufQXaioHN3iCMTxNsr2de9eB+SmarviHqeki8bgsagpdKv
g8eMXMi5KzpKxsrs85pveg/R86wZn7mVmWPSrx+p2SU+XA2+yp7Sg5J/eo8Y
ozxHe+Bc5b2H2FfiI9FA/ERadASvgi6OrHPtd+Il0UTfde0+YHUSH3n5R99T
SacXWashygMfsFarlDa91M41gmf4aNZnMpiqdq25jhkuOlVVWjXiudzC7FSi
lczqhY59yk+jUw6dXBqJp2S/9ZrFeh60Ys1kR5Le+ZA9pv21hv01jD00zsND
5Jk2yht9wCD2iPXG6rjL9xGbIbbmbfBZX+Y6j1S1XQs2gI2qzvQ+NBQMN7kr
/p8F5qn6fgFWgbXgK65zSc5ZqnVd7gm657wE2oNO4DXQnc/cC7zNZx4CRmRN
2RdfgBV89jVxKfcAq0WWBHeu3pAQ3ruKquwoZ2pM9X2J9WoH2oMOpt5U6xFg
NPiEaz6WNf0yCk3HKk9MAguUJ5ZFoS3tAm1BO9AZdAVvsq7kpb7gHTAUfMja
kp+Wg1URdP3ZaOqlp/ZcGdU/Ln3bsr5e2lIffWy01X00VvWR+FF0Ww5WqtyR
3npd9ddAMBy8b/prheqxNanoM8kLl3c+cpxnPfuEzjMbLAJLwAqwRtW9m+qV
nqpX6PN/kDXUHytNLdfGhT+37YNbwK0J4awr4/j8rzjOYP0uPh+mvDyevUx1
mcO1ma+8vNpRm+7s13e4/4dxBujaLOf6rHLUR+qiz+aqjXjRdbaPHP1MNVqX
PVSb5epzy1waoLy0kj8TzZ7T4Nf4y+fMzerzWc+8oj7PJ/zfp//2JtY3iLbi
l3Vgg9K3m9q9BqqMjaTvWqXxL+CkOtsZpbs9nysLyilfad1tn9OZN3uceR73
xkrujy/BJuOjN7g/6Kz9uU8Ge5x1tccZ7flcveOVd9I/7flsdCbqEfoZfabQ
P0Ufg/9kTDZwE7gF3AbuAHeCXTjPt2AP2A++AwfAD+BHcAqcBr+BtLGY5zjb
KPAxGAO+xP/xr8A6sAlsBr/jLH+Ac+A8uA2fPye4HeQCFfCZK4LKoAqoCqqB
mqATztEZdAGvgW7gddADjMPZ0qpz4T8fg//zMdeDW8F94H7wKCgCioInQHFQ
EpQCZUAtUAfUBw1BI/AyaAc6gE5gGHgPjAafgNlgLlgAtkCLrWAb2A52g29Y
t4PgEDgMjrKGJ4yO58B5cIk1jQUZQRaQFWQHN4NbwF3gbvAweAQUAaXBU6Ac
eBpUAVVBNVAH1AXPgxfBR6ZeY8E4MAlMB3PBZ2A+5bqq53qwQdV0C9gOdoCd
4GuwG3wDvqV7KTgADoLvwVHwAzgBfga/xYd9cVZ54wL4C/wN/qG7K4yaDqSn
3//Tv7kBcmRL6aE7wF3gbnAPuBfkBnlAPpAfPAweAQXojgsKgcdp9wbFQPnE
sA8rKS+SD6uDGuzHunQHBvXBM+BZ0Ag0prcb8ALtu8q3ryrvdmX/dmf/vgF6
gbdBb9AH9AP9wUAwmO6P4EMwAV5PB69lBJlVDyeE/rmymGu4j6mH7wEP/od8
v4P9LpmxT2WGeP+Iyo/jyvvie/J8un/Z96nx/Lp/wff/1zwvfpfcTY3Xxefi
8e4qo6Px+Hj2eHr2ufj65v+Ctzezt11+Pqz8/JPJ8/+ElynDR7KfP4nS0xuV
l69mfpOHL0Xh46vl4Qoqr6umMqe7sG9T49nJ8OxUxx4Sx7sIZfR1vF/lAvfG
hHaFb5SfvmcfHcsQzild142OHepi/OV5cCfr6TXHaqm5pOdRTz7HNJAm5n/+
3PKyM0gv3qP2qv/UjNHz5TvW7bCaK6Ld8f9CL1Ifjo6yB692/6Vmjvzbe1Nq
Z4nX3pTamTKFezNW7Uw3xITvPtSXucEDIL/qTe23A9yjPyqvye4ySvUq1X68
2R8kb139e8n08J0evVvV4y4kekzmvk3HvRtr5ucd/4W+JR13spZ7+S5p70L/
zXtQaufn/+/3IJmn+h6emh7W8yU1fTspOdS75Ou0ytsZ1Zyle/6NMaG7fi72
+L3s7/z/AY/LfX8ne1yy4qjZD4+xv3//L9z17Z1n/H/p3uM1ryQHU+P1O6+S
311vT1cyu+SdKrUzayJ7Pyc8dju4C9wdE94fyduFwOPsa+3pp8DToAKowt5+
lv3dGDwPmoMXA3qccvtn8As4Cf4AZ3nIpFH+zQQyg3iQDdwQwMdl2Mt+Hhbv
im+nsHe1b8WjW8G2AD51+VP7j5aENNlCPiT/ZVMeFI/dDx40HnP5S+cn7d+1
lZ+0l7SPurFneirfvGV8Yz0zA37B//ife/LtMeH3XPJNPvAIeAwUBqWVT8qD
6qAm+4Q80gq0Bm1BD/AG6AcGgSERfHIGXAB/ZQj5Q3bwDOwR8UcCuF55JCe4
XXmkIHgcFAbllT9qgJrGHxOVN2Zxrs1jj5A/xBe7lB/EC4fAYXDE4QnJpj9V
PmlvSEZZf9xnPJJX+aMgeAwUdvijtkfWNARN2SPNQHPjE+0RnS/vsFcGsVeG
gnfZL58av4hXJGMKgIKgmMoYmy3iG8qYBpwxki/iH8kY7aP9Kk9+VZlyEfwN
/lHe0fkSB65RniG/3Ks8I34pCkpxtpQ3+VJDZUwrlS8TOFdmKe/Mz+q+qwX1
kZ9/9HzTnsnryBTxjORKkExpyLnSVHnmhQDZIp4ZyL4Rz1DOTE8OvT0nOHwj
d6g84CGHf570mFOVjY/IQ8+BlqA9+6ejw0NyT5PvqOQt4Djn0El1tyBv/cmZ
JP5Kz5kk/pI8ulH56w41u4L4rBJ7zeWxcWaGzbgCr+1Vu5b1nOxWfp7LoOaa
fQvIlXD5jMvDvszn40l9b7V3f/FoHZ98k33K+lV2KvsGIP5907FXiYf7e/h4
pvLx7exfuRvnVfOyFM9K8mtZUI7nZSVQFVQDtUFd9u4zKgObcQ62UFkod4te
4O0AM9XP4+Lt3/ku8SfvZDRr0/MuRp5OBNcpb9/Ks5a8fQ+4HzwA8oACsSnv
GBVAReXr6qARaOzYz8jXk8FM9vVsMEf5e4HZ1Vz+9prDQTwdCzKyr+NAPP07
bCDR590rktf97g+FHXcIl/e9fN/A+P45M9/tncLrDczO/L7sf32vGGL8T/N/
dnLKDJc7hnhf353p3lyCe6EsZ3e5mPD+WMn0QgNHD7wA2qgeaM+53jUm+P3j
D/a5eFyyO4m9fRv7Ohe4T3k7P++Tj4HioGxs+P5cnj1emXP7WeNtm9kz2duy
Y35ufB3p7qGzO+g9RLzt5Wvx8AMB/KtzW3s4Uk6LX59jX0oGe/lvCPtslsra
nI68pX0hP+8M9p1GMrcC7wmyc2qfNWN/0Z3lFdA5JvidJdIOod8mJV/TqnyV
ffSm2PD95c5Y7ztMxVj/e4y+507mfXSGylR7r7H3Xlem+u0KNl/Fe3pPCJKd
4jvtuQKOu45fTtbx2AuaeNx9/HLxTY99YIDHXWguPDo/OfwdM2Wh3JXJk7LD
ii9ldyUf1lHzX3ZXm30tTf69whnYmfPPlXHiM9f74E08x+/k/fQezru8nHWP
8W5anPdTm3U11ByX/dSVbQt8PKYz7ZDylNc7SpA57ZVjXvlF2WV3TO0hO1+b
8lzV+6Przqz3xiE8M8kjn6fi/uP19izZVjEm5V1a3qTlLca1S74Uc/X3SfGf
ZN4fGS5/39Me1PekWwPsk3qX9NojxznyL+g+GfRtOpodMzUeDpKXV2vHFN/b
ea13y2j3yp7mTqVnut8++ZlPfsr93zXXZXesAeqx7xt4eJ9m/ItRzPf9/A4g
9/80nKn6HfJakCM29F5t7/7iZZnh8l4tb0o1PHw8Wb1T29ltfWtz1d71vfzq
eo/UvrR+1Pcb67tHHX6r4fBXfZ7LDcx93eUvrzt6X8fdfLDDT3OSo/MU3U3K
x4TfJmvGpLyb02xuAprGhN8o5Q4SjU9u5Pl7G8/fXDx3xSPFYi//TsPOWvGH
nrmSaZF84co0O3sjecJ6wetNx8sD+j7Q2DFT7ZuMvpPKLC3GtZL5Vyvmyvf5
G7g2Xjt4sQB7uJ05dueOZq/W+7N+13XtxvUC7LxBdtl5Pn1DPVMiJuUeQvlL
d6uqnMOyd+he0RksO4e86/eMCe8fvU2N5F7/IRgFJoKpqmZLwRdgBVgF1oEN
YBP42tGXf6nelO+T5H3L7sR38z5C77YPgkdBId6LnwQlQMnY0H5clnuWdpPK
3LvSs81Ac9ACtAFvgbc9+tjuKdTPK8DKgH29V3lJvw0cV546CU6BX8EZR8/b
HSUzyOLYU5KUN68DN4KbwM2OfHgown7yJCgBSoLSjp3cdbfTM8TuKC04U1qD
tuAV0NGRMa63B/uduuwqw9R8GQE+Ap+AMWCh6ZdcMaHvwKRv5P5ne0f2F3mb
qBaT8h4oWUb3P9feLvPnTe6ht2Iu3+OvRg/Z7+7lLUN6yX6Hn6Dm3fU+vZU7
NrTnPxQb2vUlZ6W3ynI/2Tno11P6LVlnsd79I/WU13cmh0x/paavbD9li9BL
0b4v67lg+0q+93Pt/LqvXPfeSL3VLcn/OxWZ4XZ3C9Jfi5LD733ynlI8Jrz7
2+9OaNbQewnt+pHeTPR80N/t0dscvQvr9znyr+udhPaCoG8l4xzfc+jd3muP
128kf8ZH9x5ivxP2egvR3wvX8XgHaWLeQvRvCPS7mexrA5IufwtZkBzavYPW
7xWVdVS/V7mG3cBQzrh3Y1J+BzAGjFN5Nx3MBEs485Zx3umso+/BbN3v5B0g
N+cU7QBF1B5ANS/NWSVvFDqz6K3imdjQ9wJU/0mOWa93RPo+YBFn1CrlB693
CD3nfwLHVCZJFv3j4ZesDs9I7rjeZF2/QSkKngDFQamEkG+C5EcrlSHtEkPe
cb2d2WwYrvJhNFgcIRvIV41iLr+7kb9axbi/U+oeE9pLZR8doObp++Aj8DGY
AKaBGWAe+AwsBMvBSscc9csb+Q6KPHeHR9YUV7NR3hEqxKa8K1aPTfn7gfqg
CWgKXgAvgbbgZdAdvA76qlxyvePK7wsWGE/ajDoY5/4dy48+3qQs89o1szne
Ia4HN/CM1O+9QTOumM9c1LknHtZ5Z3fMlg4vv8x+duXiOyYPvfZL8vj7yucj
2etLjdfle1XaH/V7r/i7Nftb9sbXwOsxoX3xrZiUe+JQztARytuTwafK3wuU
t4PMz2uUp+U3A3eqLC3IearvU3p+VmIv11czVLzcUnn5FYeXJyk/24ydrzLW
77cxdt/z8/Mv7GWdteLnrMbT1st213P9Xkb/LlQyNxofaw9r/4p3X1L+9fKu
K5ddXh0Flvh4Vc97yWXJ4C7Kpzp7B7NPh3MGj+Acljkv831WTOhuMycmdL/5
HCwCi1UebwHbAuayn4/v42wmD+s3IvJzmdjwu0D52PC7gM5mucO0jg3fYax3
dQ7PV/sBvSWtdvjXby9w3VesZzOZ3KW7yTV8L/HzaQFzp4/Wo663YJ2xL4L2
6q7h8mf/pJRvWjpTyaMfgI/5TvEF/LlCvSNWMb5sFhO6e9PuKW9Vndmf3R17
gdyztTenc3bODLAf6F1T+0lno/7+QOa+a943UDkpGanz0e+NUjwm3zOsMm+W
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
SL9P0Dke7R4SpAei3UvI/2XY/9b7cgeNdk/pwLtKZ85/8X1q9pNxPAO03zey
z/VeIr9XiLSPSL6vjQnfL8W329mb9l55SO0lx8CJmJR3zCB7SS+zhwxlL05i
P85mT+r741Kzi6xVGb7RI8NlF/lP7CHR7h2Rcrs47x06i11vIdZ/krviu06c
t649We8dkrF6F5Z8tTux7BzR7huya+gM1e92qx27xg6Tl0eU7ygjI90D/XaI
lpyTrzh2iE/YjzN5hyBPzuddwvWu4dopXDuEvAV/pTyY2v1B/Bfpvc6+Zdxy
hZlp3zIi5WPrCPc4vRNE2gfkOwZXPupdQHy6FT7dmRzKRvmtoevvUPQ8t5lo
72c2EykLf1Sz+1f25h/sz4wgsyMP5TdAvXhG9+cZPSY2dCebAKbEhu5mM9iH
c8BczscFnItyV5P7mfjQvjscAAdjU35vtZwzcZ16b3Bloeu70qB3Mte7WqQc
vE/dw0r77KTiu5aJl3/vKfnntXPS3Ut+v+bKP9duKXeuHQHzz/4mTeegzOfP
2YP6t4XiQZnJm2NSvpVtj0l573LNafLjSeVJ8qN4MdrdUu5ckpPWs2N5hk9V
M/wzzkzJyyVmhuv5LV7VHrW7p/7+f52a4153MK95fjqAZ/32Ub9Zrv0bzf5Z
KsK9K1Kuiuf1zqlnf9D7lu4F+zam9wF736Kc3XWFbxCu9wfZBfReancCncsH
eD84zjvCaXA+JvRufDEm/IYW5A05te8PtDtMduT1Z5zZcr/SvaB7YGes9/d/
em/wehuOZncg758D5wP0gN97hKsHrvR7Ecn26lfhvcH19nYl7w72HjbF9EI0
fTCJ/S/3NOkDuae5+sH+NmYX94K8v8l7ws8xKd8UznMf0P8jI7qvpef7mswF
urfdCu4Ad4N7wCPgUVASlAbVQI1/qXfkN2Sy/+jdR+6F0kcLVS8t5z6iPVzv
QBtiL3+v3m/mzNHY8J3xF/AHuATSZEQPZPTe49ebO+Re8F0UPem1TwXpTbpv
0v8zxDT0N0ogPf1+G2R0/M2S/Ts51xuK7V25h+YD+aPoZZljNMMqOu6stfje
Wpd6GjQETVLxriK9be+1tNP1BUNT8cYyVvW1fWOfB5aC7cmh3Y/uE657hOxv
rnuE3dcOxITfU/T9gd5TzsaE3lRkXl2NfqXfMdF3QfQ90Bje16bwvib3XJlX
ctf1ei+/kn5awfubq3eimVsXouwL/XcwNwZ8Q7R9EOk+IvPKz+va1/JWI37W
d2DxsXh2VFLKGWR/hyIe3ZYc/H7yn97F5K1QvsfXb4aZQDaQBK4Ft4P7wP0g
37+8q82OvXxX0/OF+sBrX5M++A4cAoe5D35QfXAMHAe/gjPgPPeD344nvbED
fH2Vdj2/fkmreuZKd797+A70IMiTijkSaSesBmokhN9B64B6V7gn6h1RerAn
eAO8CfpwT16NnVH37XQwA8zlHv4Gvfvt/9H+lXcE6l/5LSX1cZo04d+YZVQ9
nEv18AOgEHj8P7RLBu1tr77+mntaZtsh7uvvubePcy+fBediI++M+u62Hezi
vo52b/Tr70h9nSHAnhi0x3V//+t9HWFXvJIel/7uHWF3vBo9Tv39Gc/pvejx
M7zbpVc7XdYodjqaS5t4J9sD9nnsY649zPUdmHjRzgmvneoele3Veeex+04P
1le0lXdU2Vco7/Ykh/dp+3eTkl1yx6UdWv/OhHbnM7wzp0kTfnPPxHpm4z1Z
8kLuknKHJA3p/ui6O24GW2JD++7uWPdbusx4ygL5fsdq+0uc+73cbx7Le6Pf
dzfSi/eqXdW+nei/8ZA38g5q39R3J5l38u9mjmJf67eOacrTM8Hu5JCX9Z1o
dkzoN/r2b9bWxqT8rYSdP/JuId/xneEdMRP3RTzXMwe4XvWJzBivPpG/39D3
H7r70D1Hvj+xv3Gj2u/gObDPzAK92/3Ctbf9tVJ5YLvpr9T8TZArz6UPo/mt
m3gml2M/0/cbucPb+4wrk+Xf2ZfvXTqre7n2lc4B+bf15Y3Zde+W3Jyp8uJr
h9+87uBrY8L3769jLv+exPW7G6+79o3g5ig8Z+/bUxzZ8wXnzlr23gbO8y28
g2zn3Nlr/Kf3kEg+XGH2jh0BvRjkt5Z+nvS7b7vuC5JfQTzp+i2Ey5ded23J
Pfke0HrT786tvwt0+ZPm2RG1K8u99gZwE7iXvZOb/fMgyA8KgMKgCHgSlAJP
gyqgOqgF6oC64BnwLGgEGoPnKONAc/AmeIt3A9lpN3Gebec826t2Bbm3HlV7
7UlwCpwGv4EL4C/wN/sqA4gFmUECuAZcC3KAm8DN4FZwNygIHgOPg6LgCdAQ
NMqY0pc7eSfeA/aDA+Bg1pQZ6OW5TCAOxIMEkAiSQfZ4/i7O4asC4FFQEDwG
HgdFQFHwBHgyW9hbtNPUB8+CBqARaAyeAy0S3N8tkKfe5r1S7o7vgH5gABjI
XhsG3gXDwYfgIzAy0f3dAvltFpit7ou0T84HC8BCsJh9+AVYAVaDteBLsB7s
p39fXu2W+dhzxdh3JUB5UFl5rh5ooLwmHiMP/cy583ts+C70p/JLeuUP8UYR
UByUACWVH8gD+1T9D2UN19tV42viQ3WlWhZSdXvGUae3TB2oBkNY//cc+pPO
c5TOC1jbJWC5h7b7IvS+zA57L5YMKAgeA0+AsqAcqAAqgqqcA3W596kWTbge
LQL0u/S59Pgv3N8yM6R2F7h+/4C0GUP1k37P5Oj3G1Vd7+Ael9q6+vtr7nGp
80Gus+1z29/ZQJLpa9vTXv0cqY+bBOjlXo5e7q96ebDp5/d8eni28Rb18OeO
Hl7GfSx+++4K70ln1X1T9ml5q/HyZh614+j3m1K879CMqgRqgtqgvsd8kszw
uofZ7/Bc393ZPfww+5neV08oT1s/k5dj4MeM7OEsIA7Es58TQbKZX7eAXGp2
FWZvl1J5Jfc9fdcTj++mNx3es7TXve6CkXZ9nX9JnH3R3BH/928CQF7wMHgk
wAzUu5bsWLqHGjrmoeuu6frbl7dMT/XjnqJ+GhRhPvrdUfUdYpZjVn7OfbYo
wqw8ECHP7+Z+uceR53k50x9W/aNzvZLJbNd+ZjP7Z5Pbv7PXdWanZ49nY19L
Vl8HbvPI5G9UJgfdt1z5K57Su5XN3mcc3mnikbt6ZosvXJmqayy1PXgFWXk0
JvxdleSl1/0vL+9QD6v5LTu8rrXM7ivNR3mf2M4+0e998kZ9lP1ygj3zK3vl
vNrLotnhg2Sg/r5ql8o/O+u98s+VfVcr81Kz+/vdMf3uAq7s+9/fGzl20Ej3
AFfOie91rgXd/w/9CztEAsgOcoK7OBNld7A77ZXMf7mvar+77q2XVB6myxjO
xET2t2tu71S76d4rmNP6Oxbyb9YrmNOSp0FncNC52zsx5X20fxTz1M5R8t33
8NSP/6G8tbNV3k3o/lpC7aa0l8pbnOymlLsNOXfte8m/nbsXHdlLe2hWtYtm
4z00u5rXd4K7riCD9/A734FU5K/4ODPIcpUz+CGVwYWuQg7rPbRJKvJY+mAQ
3+WuNI+lPxape5wrj3/w2DGvA7ekCb3VUJ7Su2FutV/m4x6Q3bIYZyz1QBnw
VJT+99tF9W9b5L6lfX6afe511xKPJyh/630jqM/17vq18rfcsbTPg+yxGXw8
7rffBvGt15uDl0+dv092vDdE8qdrP3a9M0TyJWX60QjetL7M67EHF08TfsMi
L9ZiP9ZJk/Idqyn7shl7k9612oOOoAvorvw6EAwGQ8G74AMwEkwHs8AcMBcs
BkvJ32A5WA82gs1gK/gJHA/of30P0++d1vOZ2ffx6m1B/H4Dv5nlBLfzm9mj
7Pci7PmS7PvyoCKoBmqDOqApaA3agJdAe9AVjAXjMrp/Y6J7ZD/3Cb25HQZH
wXFwIoqeyaT6JZt6k6O+uR7cAG4Bd4G7TS8VUD1TWPVNCVASlAZlQCXKflAb
1Imyn5qCZpL/oBVoDdqB9qAD6Ag6gc7gVeq/CD2o3/uo/4Y43vveBx9wP44A
o8BoMBaMBxOpP8EU8CmY7tOvulfl3dn1JrgSrAJruHf/H3df/Shl2XXtCTxB
c2wBuxU7sbC7i1AUuwUTFLuwUBRFsVvswu7u7m6wABVFMb6139nrmT37XNcd
M3N83vf7Yf0BMnvFXvu6j88CzwGvAK8CrwGvA28C7wDvKrermdWoBzb/W12w
HrWWyWfsDa0e2FsDdYFeJXqwH3A8cCJwWs7cJvf8901+4/7wrXrYFM1qtk+Z
oaG0AyfH22teE0/rajKb7Q/paQsqx1dSfq/ZUOzItwC2NPz2WY43W/te7ENz
HxEOfwFMzJDt8vhg+8i9JU/2y9IPrZQx8yXx3nJ+T2Bv5f1+Ofdx2+ePcv56
Uc78F+rzH1GfJVfFZz/vVsiA1d7JycWQJ69WU9pP8d5n86LlJDsrZscYNw8C
hgDHAMe1oVfn7RDs34ewe9tX6uXsDX5R3lu+08u7qo/7bmwl592W2/Tx9dTH
NwO2yeDhoX7C+7dk3C/Vu/N0FZ7nsbt5zMvz8J+39yT+x/JzWh6wGhHLAXtq
BthbM0Ca/+fpT2wvTc1gNg9lgzFOR7Jkg6ydjNcd3jaSckMoMzyfkhu+UK2K
9X30eeZ+vomSG/YWNcU9dKDqR1LeP17148Q20pCXNNd/bXx/uvH8Ouf19PjZ
NMP30Py+YEADVlcdCOX4ARn4b/vID5Tzobye1kPa/tzfz2P89t88ea8OZfes
nPW9zcCAf+fN7KE+PSsPx+bgon0HkodfT+fk2Lf/YhbweZw5wPs/71XldqeV
+jEzeIPxY3KSfVI5Nyvrr/bdUd47ve/7K7lZZfHMrH1pUk7Oc6fP4neV3unT
PCypq5r4L9600rot4Qxvut7f/q0u6795YxNedjF+OYd6pfByXuUm9+FqdV5Z
7nlJvVc1bn3tM3Zhld4Cy+3P8rzjYX7evQw/LucG2Ra9Wt57Zlt1bROq3KFv
4bRG+jLZz5M6s72B/WtaZ+pTgNMT9OcK4KqADt0N3Ae8BLxS0zYdenNDvDtn
b75iQ7FTW8Pt3rJzbwBsqHs3tWRXYG/gIGA4cDRwBnAmMBa4GLgWGAfc2JC/
T2cXJ9oyJWen3imyh1v9WDChT4/l8XWADYANA7qQp1ff3e3UVhcOAoYE9EG0
YViObj3E//NVA0L782XAVaoD1xgtuL5LZT275/2TAd5L9ngJeFk1gPx/QzXg
baMD31WoA3LbtW/BJZMndXHk/NCaYh/H3vxUYCQw2nD9UuBq4Cbl+y3K9XuA
J4G3gM+B74EfgZ8r5Lvv15N4z517HpPrV9U9W3LD+obrmze07tT7muw/CNjL
ZInBwKHAYcCJwEnAycBIYBRwkdGFrDc2rwdfG02QvPG9asNPwLScGpHU180B
zAl09zs9sFgG3fAZgpqRVSuoD14b9gcOTNEI5odjgONS9MLmhlBm8Hrh9/zL
NTtc5bRiHHBrglb4rJCUE6gXof3/BdWMV01eeEv14n3g+26lPb19P2r9Xvbx
I2oK+8RRNaU7hXj7CPX3M5Xf9HPh+TXA9cANyvlb1NdfAF5TvtPXLefZj5OP
9OBVAx4s3FzXcHMTx8kBykfx430MJ8WbhwLHG06eBpxvuHgJcJ3xaduLk2/f
G46FuOP7MMsf67fkj/fXPoYr6wc8NvSNScw/kzgylB5q+DHCZWbvl6G5v0Jn
3nvkOOOTMv93BfZu+80T59rO9Is6068FZpoeKLP9QxnfR9r3fr6zsr1yP/VF
ciP0fSR3b/FB5t0Ly/Ay++aJ7/rEy2rUy5oD2VX4wpsweUM/89zZSPlCL9va
cCf23aR/AyUe9E3kbYd/zx/yk9AbqLQeanXjI+VkS3u7PTCDD/hvRmJ8COXH
NJ3334qE+PC4y4XChUmY8SlAl5ri+1XeRlarad23ygzz9mrvrINqwvdV6v1w
nWXmOmY6ZrlrnL7fWlPY426vKexy0ic9WFPolB4HngCeAp4BnotkvtDfEuGs
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
HCMzz1lvAtoDXWvL13XOu/2bApc3FDM/59x2P3x/6HXdzntbafsfbubrU2ae
2UYyzVLA0hk0P/QWI8udN4/+h97op2WZLB4Q6tN9j1mODyS9KyJHkvaCpkDX
aXdm9pzUfvuGl/of4sI/QB3muxnoAHRWPswMzBroNiWH39RQ7H+YUWSO3wjM
7kc6t1/p7IpOs+eu0/lr7BDeP0MzZ/vJpAxBXQ11kZyPMyLdo9XHW5wmUg99
12g18L3I72q1r1l/T77P5rcX9m1obF8L3TbYDcrvOUNt4TftpL9lN/N7xvY1
/s7HNbT+9sLuYjeoZz+pv7n9vT/U31vuHF/qbz7JefM0o030YK9Drf4WSkR3
srwHo/7E9qg0Hz5ctSakM6dFPHiUm6vYu0bfNXhtsXMWe6cY0hKvIzJvHRIy
5ZPqr+wM+HaL77Y+U4/9ymmK1RPbsUm3VoOZamc81ufKhYFFgWWB5YEVgZWB
3sAawNpmPjcEtgJ2AHYGBkknB+wucwscChwFHA+cCIxJyKfcw/zfWbVdQ8iz
7S7Gjvs9nXX22t82FPq47xsKndwvZu5/B/5Qb65VX24PdABmA7oDcwPzAvMB
CwBLACsCawA7AQONj9vsOiPQEegCzATMKb1ews4murpMSoZdHVgLWBtYR7oK
YL2O+d5u+Y6PnNob2Ee4lbDXhfT61ADfRirnzgPOBy4AxgAXuvybpafwPTm1
/kHgIfX4R4BHgceBJ4GnpMsAngNeAF4GXnE5OUufEcvIkgG+0QzwLfAd8APw
IzAJmAz8DPwK/Ab8DvwFdMqQqcn7WK62vLe7pOe97dWZJ5ix2RPSf2ZTDSD/
Q7xfV7m/vuH/NsB2ZfI/S163/I/ldt70RQNeayjt5e296331Qpvbv2yI763M
7dSI6aoRdRVqxB+my2ln/DWLVmTJYlk6ziw6EtoRtitjZ07SlSz7wogEfRmV
oDFpb75je0SoU6pUc7L0ULH9o5r60zGSb0PfFovO8H2GzbjsX6k1NuPWqbZ0
dfoydxlZlt0TO6e3lb/MscJRZtX6QD61fEj65jxtnpk1bcdzciBLhnwsqcPh
XPn/v43vbrL0NjIPXVuKe6ffTaYYT+hs9J/9is99zHh8L+h7wNeMxvKWw32S
uWuiZi6vrTZ/UWNnaCzsG9TC9tp7hH5Lapvomd0fYp1FTJfYU/NWyTvlNe53
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
5rjZFl71ZddwB+nzIjmb5lfzVshh6W82VN/aFtjecZi50XaSfo8Z9i/yz98p
bfajT61qeOf5Y++R1qOycEa8qU+FPWQSP4ZUgQv0qEurwAXvVZYP1Zr3KW7m
Zd7nxkzP11KY1Y11NnkvtFlqH53JAwJ5SvzkiNriDTGLh3CHFl33d2/uE2tW
oOX27mLnb46Ijper1XamQno7RufkMrPr5tW7SWVolfyu85hehZ0KNYj6089o
zl4mN+yvvzV/Y/YnzAq2R5bf+0xgJHAOcC5wPnBBbSFXjwUuB64EbgLuAO4H
HgSeqi3tVmyXN3dj8eZr52N53TtX0Z1T7r/rAxsAmwDbmlnpD+xocvSuwN7A
vsBRwHDgdOCMxkLXEuqdbc8id5S5gXl0dhYK9C2hDtDOzkbAxsAmwBbAlsBW
rmuxPTRn6nAzV0cCRwHHdmr9lnWM06dLzH55A3Bj56LePN2ldd/C7vlVnUWZ
w/d0DqcEMi675umadTmL9cBcLQXflO82eK8TrfHvFXi/kBlkj7dvbTHD2ncK
fv7OAs7TWeOcfaDex7c6/m0O97K0W8WyOm8rNBZvvRtHdImdnmiT7fUOAQ51
c+Z7DmrU7AGNsrcOu7+FtMrPGXUqrVumP9pOg7M2rFPxBnK2+qGdrys6F+4b
D6mfPa4+ljRXr6nGvaMa90XX0nejkxNm7E+ds1qndzJjvF34bz95C7a7U7/a
0jswZ85qH7PXEbXxO9qpwBlGA2UOL6pt3SWHtC/PnIbeNS+os2pvapxV+ujq
Rh85t1urTu6g+ijzupdq44HA0Ig+2r3Iz2uPgDYm/b3H2ByHNJN6yXmmZsbe
dB6gvuz3oJiG2vmO6WlMS/3s+yznOfCy44H1e/LhvQAnbI6zGjyta+ue2+ow
eVKvXOmpmmx3ldCeYt+Q2duyvbMwCx5RG34/JjngMtXlK8rMAP7NF/VY5npd
YENgU2Ar5/07ZvR72zNb7e2R4vNJNz87uzGPD+XFJF+P3VCsp8duKF57X3fe
Hrohx3RX5mqGbkWPX6CloKX07v3Uq4eqXw8PzAa18uzaQmYcVVvIjWNqizvD
gvpb9wbWAtYDNgI2A7Z0vst8l+S7szitEm8N/W4bBfSG+d7qh/ii7+9Dtyv+
u1u/i92ovK8tmIOn3NnIU9t/H6Q8Zf/HfU36P3bh8pucVVua4yVXjdbf5ULj
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
v7GdJotP3aFelYe7efyM3K0kW5Xre3lzVu+M33/4fsL+XQxyV7qJewO+yX3m
DeCd2uI+I+9yvqitztsc30HYb0vsu1B2EfIWlD3EMY2tu4hTGotdxEjlKrMb
bz7Mbv7uc6vh7j2N+d7psGtgp2d9cukOpW9yQt+15OkXYvefwQl3VXIxrdsr
p2PIexvK8ndW33GczPsmJ8v3VLYfLPcNjnjoyhX2CMI33yG8B3yiefVzzaxf
1xZ3HuHcT8q7X5V705R3Prva21Fad56lP8jaofPeSt6Rb7c0FrPrePVFZtYn
GuOZ9QPl3RfKudAdib3B4ubOumygS0/qDjznvP+FOvVhri/I06PnvTXFfC92
dwrlVPbrIa8jn3zHHusOfL8e8jRyx3fsK7QUvIz+xZ2OtyT//Rq96DPlxRfK
C74x8G/UKuEC70jyFmg/5QH7s+PM7MvcS+dt34PKzF+rM09/uUU9Zrz6C2fe
zrt4DO+l7ybMfHeT+dhn21n3N6NK5zv2LWXW3YyZjvN8Z45Z5t8qs+9t/PtN
ekTWWZ7mPMG/zbQ9s9+vYrO8ks5yJb2FeIG8o7F9hZ1zew/ys15u58C+4dKA
VnN2mYv8vVNm1XcEdiaZf5ZP6AhstuEM+nmzM5akl7d1Dt/l8+zwoVsGM0fe
/dzOj80Ukhs+i/yO/9SW7r+hvTetf5Lb9IONhX1Tds0X9beSXfPNxuKe+YnJ
sXKfju2boi0rmb4nbRdM0wP/5tXvbfz3tnsX3z+EehOb1ewbhlj3sRr+/ftU
yNUnInz9Uv1oinrS1MBvPENdwZfq69J/a/oUd6fFgCX1d7a5rRLuC+/ZY3u/
IvfpW9Ix2m7xBeBl4JXG4pu4D9W3Pmss9IziXd8DP5i5agbaBzpG6odoxorA
qrz3ZNCQ2G7E2Yz5mc1pI828jsmgN2lexrl+GHi0TC3i3vO54YTlg+8imNfK
0aqOES6RQ/5N0JptxCNmPO4+k3TnEU79UlvsCmcwPGrQrqEj0LWu+FaO3Im9
las2d3yXEOr97H7D/u89o83kzzeqy3bfCfFlGeXMysqZPmVwZlAFvKHWZ9lr
LG+ycCZvDx/iTagzSHpPVy53Qr2B9SLPH/GiNVoKPKB/2Leg9IwZTZfWQXcZ
vonrrh04Z3t57dhW1J5tLWADYBNgS2D7utZZTzIDb/rMDsx5zBAvaX54S7OD
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
5e/C/nEB/T3I2yWVrys4zgpfVw/wdWPzO5G3/crgLnm7WYC3WXp8/ub/Bo9f
S+Cw1frfzRxl5a/NyAsqf5O4u2lL8T0Hd0w7b7bbkbnzb5/knsS3d/2V5+IZ
+2TwDf69Bq8DnLcOzi/sm7ru6hl29kQTeukM2v6F88gZDOVTzmAe//D9Ov1j
44h/JM2h7WOGReZwTBVnMc1LbH/5a0TX8sykz4/zO/1LmtGtWwo9ub3jyJ7F
+81GJsfQZ3YFBgMHA2cC5wZmkFnQ9gnUtQXNXC2qXtPLzdWyTudW0fnqU+Fs
rRmZq5i++TefsTkak2NmXg7MiM0ZvyXMhOwcNZiDWjcXnAmbL6hRdgYW151i
KTcHm2EOtjR6Zb8Vol7x/U8fYG3VKXrkpjojvPX11znZXfXK7+VZNMrq02xN
hS5YtGlu1af5dZaoUzGN4gz1NrNjNcbOwUYpGeaQFO/y/W1IH15O0YSpgRmw
+2ZMA3x/43WAu6T81ltFfuvY7yy/b19gR2BPYC9gX2AIcAgwVP3o1Aye5H9n
/sZeJxZwv+8i5ve12rCq8561ze9cbgbys7GxzkWaPhzqNCJL9onNztUJXhPS
EDtTzDm/6iz9HtGTJI+Z081UTFNCvrJFS8FbfP5hxmbWsf4iHR534z1VN+yM
DQeOSfCc2IzRi7o0Ffdizhh3Y+9JvdSDmG9iOTvkP31zzJf3oU2ND22RMmuH
5Zg1/24gS56xu/FrGfbjX7u07snsvMW8y+vZPAH94syleZjNMtQxZpkNdd5E
y/rVte5hxKMOVJ86VDXtOOAE1TV6l2Rn3kroS3OrH1mtWlQ9yfqRzNRyOldJ
fcvGOkdrJmRgOyc26x4e2L2y3BqpN74T8b+zza0xXflHtaWua+vvl5J+X6sp
9KvNVUv87s7fWb7Rs/fwjU0e4f7E+0Dstz7S6MvJdcXdir/5WOASYBxwI3AT
cDNwK3A7cD/wEPAI8CjwIvByXXqHJ/okb5CYdWbSufK7mNUn3sF7ab6xXmh9
0OfjrYFtgP7AAKNRewD7AfsDBwIHAYOBocDxwAnAScAZwNnAOcAoYAxwdVPr
zsDOK/OU1bOtVdO2A3YA+gM7AjsFNI67m9W344DjgROBk3Luc37mrwGuBW4E
bgJuAW4FbgfuAO4B7k3QRWriO6qLHwIfA18E/PiXLnE/phfXKGdEGxtUH5uA
9kAHoKO8awG6OJ+2O6Dnlc3+vVQzlwGWU91cEVgJWBlYBegNbAO+bZ+j62ZG
ZP5n9rdZkTuA6Oow1dQkL0/jje286evkiu0xmRmXUe21fOmtnGFmrGZnZmd/
yxx7Zd6+LEtezOLhaXsn5zPNv+0dK9RBxPy7bw7/3hnYQ+fLZsTD1bOPV9+m
jo9ULT9H9fxCp+nU81tU029L0PQk//c67XuNVZtK9xQ7b9uYmRN9HmTmbh+j
0aLPhwHDgeOMRo8I6POFwEWq06Es4XMmNbmv0+XQnHodHpGQM7zeXpdBc7Pq
bJ58Yue43ulsc0Rns+aX0IxzLxK9XT5Fb3doKX1j7fvh1epav/djJ0ce8C5x
mGrsMaqzZ6jWnmUyzbmGA5cClwPXOz4IF+4C7lU+CA8eA54CvgYmqFZPNDsX
3xuF9nvhy1zKF+o09y2fk+3uJTpt9691gHWbinl5Q+XSpsAWTYWss0NTIesM
BHYF9gb2NTwabPTcZh3LofOUR2OBq5RH1wM3AOOAO5uK2h/qkTY1+u9zDzkm
/NoZGNQhW38t/jDc8O8Ew0H6xagUHtIrrgduMFwU37gtwMXHDQ+Fg+8BHwCf
A18GOBh6rzQ9g580aN4hF8nBbkALMEvX8E3Ve47dJ0Kes4z6znLKS8vF1YDV
gT7Ky2py8gjgKOA05aTl43nAGMPJq4Dr/o/wcW3lJPm4QVNh/9gE2LKpuHts
31TcP3ZWXu5luEk+HgocbTh5chvwcgvDS7uLlMPHo6rAx7xcfC3gi9XgJblY
TQ4uYbJeEt+2bSnkQMlxx6Z4l98Z1lZPsD2cze57NYXz++ZmFux+Kjmdv+1w
l8etdjJvv2qydVJeTsvB2+m/QTV7CPm3SesA9mqqrAfYvEP6fp9lh0/LhbEc
yH/z2hw7tO2ZsuzFA6q0E9t9mFlNOqiT9Dcfob+7zL3sLufozF9sstqVOvvX
6vzL7iJ7y911/539OU/ftKeZtQN03g4HjmjKv1vb/WXbDPu11elydmyrz5zR
2wL7ttfm9zPu3KF8VBfYV5oy7N6xnWSpwLz3/xdm+2SdbfY+5wMXGQ1n1uEs
36ea9kBd/l61mvNtZ1t8RXbzXZ23yI4uGWaImeVhTfl29DzzLjq7fWRfz9Iv
hfLKiBw8yNKVxngQ60mTOJHEh9junpcflhfLRzygn/Hm01SnvS5fX9e6T7oT
uAd4UD36YfXpJ4EXgJfqihl+bdVPZpn+ZuZEP/c28ybaaXOzzN3RxqvPNTN2
MXBlU2levrGpkJe9f/vZGmDmi/k4aZasto7oWNr5eO30MxTaMe2t2mpg7Le3
edXeqP3uF/N6m0t3bCnVr7H6m1+iv/dVqmHXOR1jNrsDGB/57Z8Fnq8rZrRt
1C+tvuypv7V4pWSyw1RjJJtJD3gscCJwKnBmU2E/Ev8c2xTOZv3MbzpQf888
v+W4DL+l30uE93UJuz5/v16R38n+RgNbWmcl8ZIL1E+u0lx0nfES7s0P6r+/
35vtv7/tYXdJ+C2o9aLzRwJHNVW2s9r3JeSf30n5O4X2TPb/WXn2tvt9PN/8
7pK0Ey7mdhlyK8apnVqKbz+YF2xff47JB9RWzzP+tuTXfZoVLK/eAD43v/OU
uoL/8x0R86v0F9IjSmexhc6CdIgDdQb2VJ/n706tHWb09mTV3JH628tvfoH5
3S8FLgMuB64ArgWuA24FbmsqeL19h+i12PN2F52J3YznZ+kjzgbO6Vh8q2jf
gti9Nm2O7o7sZdTuj8w8fQV80zncOdDXvS5QEzrpzHU1M+fvS6GOz2uHzOGq
Zg7XAHbGHO6mnu67uKR5u1tnzu/cnDtm1dD8rW10fhfj7fT0wTpfQ42uHK06
f7zqPPckqzHn6qxdnGHWtjYzNUA1xs9UmhdwjtLm5K4y5sS+IbGe0ej8IjQb
ob2e/Yr3ej8Puwd0KeQ1okvsoK6uK/Qxtxstuj/g9486bYrp0AZNxe7Uvi2j
HsVug6JLh6kmMRdwVmQ2RutsXJ2iNT4bxLQllg/SdCU0I3caP/ooohPMgEn5
wesCZ8Hf4uwciAbs2lLcQ+80eUH85HHgCf3tngFeBd4E3gHeU35/aTj+I/AT
8DswHZihvtCnHet4a/e/S5SzVytXJQ/cA9wLvAW83VTUf3LU/rufCZxlOHku
cB5wPnBBx8K/NTl4H/AQ8DDwSKfCv7fsYl8D30lv3LnAOdud2WxtuTaT+j/5
FcvRa6jvr6X/3iGOCb94FyHH2HnajoDdJ/nG34o6zGz3HPAK8D7wAfAh8JH5
vSYC3wGTgV+AqcBvQAN+r6b6/DmBnNy7KX5nPMbx8nTNC9Tw8zUzULdD+xrn
4hUzG+8Cn6bw2mo9Z2jXMvg90szZaDNjY8rMFCGfkBl9EHgUeAx4AniyU+v+
93OdXesdnOFJAR2pcZk2pCGdupZm3Jl1xkOZg3k3qTemx6ypHNilJe4zSRwI
zT5zCL2G8/+EcuCZutIsTM36DPgKmGTmfhrwB9AOs9++jef/OOXAWTr/owOz
f1VT6Y7E7ML5fwF4w3Agbf77u/nPO/fUWGqrnf1Ks7TM/nijy0lz/3Fk7r9P
mHk776E572r0PG3el3OZmjNOneeci9YP0lnnbJ+ncz2mrrT79X0ZdX18Xem9
+wmdaWo75/l91XfONb34W+B74OeEOY/t/jZnyf4nWYsdzBCdZ7v7Wz0P6bjV
8JvU4+8CHo/MMmeY2s3+jbnMZvWs/Y3PB3aGk/oDzul41ef7gQdS5tX3vXZm
J5p59Z1eTIt97uCcLpNDg0MzumcZmd/nfZ/1OafU3teBt82ccj4n6ox+p3Oa
N4uUuyuwR7Qdouix3SepyZJTmU/tTsmsep2b5by5ZICb63Jyic+/eXNJrCfj
nMeyyLsRLZ6YkkNC+0yo8/BzH9PmtD0njQd7JfRxtn+7uq60E7EZhPnDzv5z
Ov+i1aG9ifoc2pn8zK+r875pU/FdEd8U7ayzzluc12jpx3kTkY78rKbWO5jP
3FanOc+c41CX7nO17eWGR+Y3lCtimSLtjdD4wG73ToIG+7ycNKNWn2M5eaaU
uQy9r/BzKXq8R0th5/4E+BT4wujlZPXyX4yP12NWZgQagWagMzAvMD+wPLAi
sCawVn2pjlG75De+uamYL+9WHXsCeBp4Rv35VeA19el3gA+AD4GPgC+An4Ff
mlr3aLt3KPzGSd47FrgSuKpj4Te0umN/T2rQ08AznQq/pdUc8dQfVXMmA1OA
n4FfgF+BaZ3jPjoXMK/8hl3jXrkRsCmwBbBPDs3gPcZ3pzbTpemFz3b0yl/N
LPxp5iFpDirRliFNxdu+aMqIptLen52/7Xasb16pc2fzoJ0/eqnM4cPAI8ZX
X9XZezdh/pI0yt5wQ/eDkE5ZjUqa4TFujvPql939fb4MzX6Stk2QtwVG29I4
kaR9Np9m8egYp9K00d7Nsvq25+TebcBJ4SPfKHhOWo3+Un18SpW9PC/ffE69
0mi9cO0W4A5gfFOxS7jPcY26L3qfxft3NP6/q2p+Vk7ZPm1UFXJAiEfeR7Lk
As+htuJIW/Fi33+ZC58pB8Sj2C2zdxCP+k39qZ3JKu3Vp9qSH+cajlwc8SLy
gh50u/LjfuAhw41HlR9PAc81FXOR7S7En+zOl8QX22UwMwt39gD2BvZN4VGo
nwtxKamrq8SX/E6Yl1ffB/yprXg2ZxtybT3ggADf2GXLeym+jbsnwC1yKtaT
2D1xsvqLZL9/gLr68jPfhk2l340Jv3YEdmoK3+XlzYfslMcq105Vrtn7jfUh
4ddV6j/jmoo7pc97kvUecN7zovrPm4Zbkvkk630JfNUUznx9zT5q+5TdcvqS
96Gs+S7WcY9PyXXkEPOd7RDtGwF7p/wxR6ar6ZrcNSb1LUk5bvFu2TrIEHds
dtu/pfj26YK6YtfCnsW+K3jY8Ofputad+LvqSR9rRpN89o3h0Q91xc7lV/Wl
2ow8su9XdlVuhL4XGWm8h77Dt2/XqO+MUy4wk92tvmPzmHjOY4YXz6r3cB+y
vuP3ok+bSncj6R7tu9aBjh/Wd2LvpmK+4vmR9i1L1h2fPMiT1dL2Hf8tdLuu
rW+hWfzE8sJ/Z+Dfb6ZxgT5iObFfG3gK+UBv4Q3UZzTJZjMBswKzA3MAPQ0v
FgMWB5YAljL8WAdYD9j4X/Kcc9V3+O6L+47vF+4wXnOf+o1ku6eaSnuul4CX
m0oz3fuOV58Bnyu3vgW+A74HJgE/Gb7VNsOfgSaguTnsU7b3F3/aE9jL8PBg
4LAKcmCMqxcCFylnLwWuqLK3kcePG297CngWeBF4KYPHhfKh8PmnNva72YE5
gB5AT+X53MA8wHxt4IMbABsq9zcGNgE2Uw3YEjgo4y5nbxN8D/y40QRqAXc2
74nSXfwF1ES4X82bhPD5ZOWzeCXfC481XhnySXJYfPJB9cYn1RefbyrtLN5T
7n6u3PQ72Q6Oh/RCy8Mk3sW8kNzKsmsl+eJTZqciP2Lex+57svIj7Z7RnMIF
63WzKR/IhbQ9KnR7i3menf0DXQb0M80cyFsbMx+7iHI7iA5AJ6AL0C2nx4Xy
ILOg3N3ObIp3EbaHYAdhuwd61KNNpZ0DPSrUPYTy37cpvrRVh9ZvoW0vQT54
T4q9EUrLiiHP8Xkx1kEk+UvIW/zb6rT+IWtejN0DQ/yZNcVLYtnR9xC2g7Ac
SvKOwf/lDNnF+Ah5JXxaGlgGWBZYCVj1/0BefFC9xubF1x0Hyb+Pm0q7im+a
ijnxR2BqU7Y8KB60Txvnv8uAy6uc+3yfIdx8ISXzWQ8jD6cCvwG/VznjiZ91
N5ycR3e5+auc7dZ3HreJ7nebA4eDm3/Xtfaflpwe9HyZum+1PEmbqbHPOI2d
FNHLOVP0br0UzToE/y6H/Rd1i+/OuAPPAsymOZi/i2jXcsAKql//F/dfr2cv
qp75ztXPlWjaD6pjk8x8iab9GpizPDq337+481L32mLvtTsvNTDL3pv0hmWq
cqwt9bCH6bXmayMtJO83NXw/tMLs/6nL/6FbvOy2co/nfjuz47bsuAsCCzvN
ZQdcbu73N/pQ7rf3+NBeK9x8VbkpOZ+dlOQMdlE2Y5Cfnpt/ANOb4tl/F+Wi
5aF/q5elC7Zcuxi4pMK8/0iEU3kzf1rez5P1Q98N2N6Ivkcu5cn5SbsyPXNT
9U1y6NO64l2DPY5kix7APMACOt8L6YwvaXxsefWyFZ2fra1zv67O/gbAJsDW
wLZAX2BHYCCwO3AAMBg4GDgEOB04E7imvnCzkBsFexn6iszvBGCiZpYpmlv+
AuqNj3QAWoBZgFmB2YDZgZ7AXMCSwFLAysCawLrAesD64kHAhsDmwBZAX2BX
YDfJQcB+wBDM+qE684cDRwBHA8cCJwAnAad2KM6/73s4595XrgbGATd3LMzx
44E5fg543szya8BbMtPSAQEfAB8CHwEfA58An3YK3wJD/ehfwN8y38AMmPFa
oA6ol797BzR0Kcyvnd3/eIDMLrA4sASwJLA0sCywfNfCfG5oNN1mue2AHYB+
wABgR2AnYFfg4JZCBq5W5zPFaT113ue3+TTDLeL20BAPVgZWC+Q78mBzYMuc
PPjf5B2fNBXvGV+rh8S8YxowA3jSYDjZuQ35mORNwtVDDFdDPPW+ldbXjg1w
l7zN61e2l6qU42m+FruPTM3B/Up8j55nd72s2lGuJ/ru2HtiFv0ZovrDrlj2
Qf8Nku+K/V2ku/FX32sl6Uk1dGSk6oPcS+ROInse39II7/13dbyFsJOa0FR6
v/xBfZdc/+Nf5vtA0zfvm5HjWb7ts3mUHh3a/8h1v8M9WwF3k7JmFl6GeBbK
lvOn8Gz1AG88ZzbPwJlh4MuRbbCrSWb92fg337bZ71rmVK7NZfLsQso77mir
AL2BNQy3tgK2AbYH+gM7Kb92BgYBuynX9gL2+xf8+VH15+fUm3nPeaWptHvx
73nYKX/j8vIPJjPb/kWy84xAV6CbclZ4OjcwD7ACsCKwinJzU2CzBN+VfuYg
5aNk46OA4cDxVdgRL3V5+XrghjK9N+ldHXksXfTrwBvAm8C7wHs5d8hY3v4D
mA78qRz3/G5Xod/aPTPkt4uqFogOLFWlvTPmr9saveiv+jC8iple3ijwbQK/
c2K2542ppb7Y58yhOiEaMXd9sa9dFOil/rys0YuVVTPEk/2uK7qxtWrHtqof
O6iGUDf2Bw40Hl1uzs97G/Y5/wWT899wOsK7sNWPicb3p5is/6d6fjugEegE
dDFePyfQHZjX+P3ywErAakAfYB3n/aItm+TI+aH7M3P/YJMJrAZJLjjRZf9Q
R5y3swrt8tSmatysbY9l8wW1iRmD+lTujhDrvvJoV30Zu0LoHh57W2WzjOjY
Ii7T9NJcU87uELqbJ+0Pm7sdYnvVuL6ai2wmOqrCHYJ6JRrFe59o1VJGr/wu
wYwjvUSf+kI3sX7KPrELsOu/sFdYbflR9WWq7hQN2uN1Nl3eHKopPU02ma8N
9omDTK93ZJX2ibS+z+eQ0B7xZhk7xNQAVyvdJSz3yt0lQtyJ7RJHtFSHO3Yn
WFT3Aev1njtJnu93hrRdoS138N+bCreaGuUMc3xLxI9jeT7EA991H+nyfCV7
dcwvk/jwQgbvS9qls3ChXc59OpSls+7RSfm4e0Dr/YzKfK4amM8t6ou3l+3K
yKQTdK7+0rlqrxlvpjbOeIPdvMVym89dV0Rm6dkM8xLT0zxZp9xsUm6WGOo0
kd2I/5tIcteT90JzmzmSvLBMfXG3Yd9IretTX+wdbVaoVOte1H2DPYXVtolu
v+ANoYPOXUjL5s6hZ3YfyKNjVrtiM2b1SjL7UxlmLvSGzb7dKEenKtGovPp0
LGbvuBzz19PM35I6gzJzvXXm1tC5k3nbCNisvpBNt3D61U81bICZPc4d9exY
4HjgZOA04CLgYmAccBvwIPAw8D7wYZXm9e+mQofWXjWSWbVHJKsub+ZWtHLt
QG7d2OTWHYABwI7AIGAPYB9gf2AIcDAwAjgNGANc6Obf3qpl5o/TPHsKcBpw
ZkYOUHdDPLgNuAu4G7gvwAmrxcyzWbT4M+Bz4Afx9gh3QjlX+GKz7Yyq1Y1A
B6AT0BnoCnQDZgJmBmaN8Mpn30Ucp0TXVwBWBnoDawJ9EngW03vR+V2A3YC9
gX2BA5VzJ7hc0Cui5ZZX1PINVcetfu+iPNo1oOOy+x1SBp8mGP3uCMys+5vV
756B3EA+rKycCO1ylfCBHkD9P9rw4ETHhdBbJLuv+VkP5Yykfc3PtM0aaZqf
Z45DXrCIm9mlI3ObdPMZkDCnx7cUZpOZws7ipvWFvsFmidAcygzurXN4KDDU
zB9z6iXAZcDVwPXADcCNZh6fAF4AXgLeAT4CvgK+qS+9d8xiZpJaLbO5ILAQ
sDDQy83oKjqja2nG3cTkjq2ArYHtgX5Af2Ank3X3BPaymRcYCgwDjgSOAY4F
TgFOBc4CzgcuAy4HngKebi52m8N0jv/nvqL5WGbYzu01wLUus9wC3ArcaWZ5
vM7z/cADwIPAQ8DDHQuabWc7pt2c8W+ACWbGJwNTOsVnvCYw56EZb5E3SF3i
HcSyOs8r6kyvJhqsM70usCGwcdei/trugRlb5nqQzvZewH462wcBhwCHqR77
Ts72Cb4/kN1sg/rwvSCUa/Y0WjwcOMHM/rnABWbm74jM/SvAG2bu3zPZRXr7
LoYHotOzKhckt8ylPFjE6PQyjgcrOb3uE9Bs8oLavZ1yQzgxENjFcGN3YG/D
jQOUH4cpR4QXJyovTgfOBS4KcMPeH49UfnB/HNHBfHsZ6CGEJ9cZrtwI3BTh
S4wrdgdI4837Ae7QH8ih7w1/Ylkn1OeRQx3VG1qcP8wT2FVDXZ7l06qGU2s6
TtlcYzPNgAC3dlV+7akc21d5Zjl2TEvBTyzPLMfsHZ/7g3gMe23hWl/l144J
frOHcm0f5VvezGN5Jd115+Zi7iGnmHkWa07PPX4f2Li5/NzDPntoJPcnceEa
w4dxhgs+/4R23jz5Z2obZB/Ots3pvquO5Z7N3c5re+lQ5jla59Rqvmg9M/cO
CbMne6tk7YOAIfWFzJ2m9zcDt+bQ/Zl1BmX+5gcWAJZws7cqsDqwhs7gWjqH
Mn8b6QxSy9N0fA+n4/uXqePDdF+VrH6MyTkn6vxyVivR6mpqc2iGawKa3JCi
y/MHZtZ3h1k12c9y326t7yx5NPmUnL0jNdvvqdxL2few4+mrWWjH+uIt0u4D
1ewXRas7Or3mjVHyfy/lyCqGG2kdo+2ty+kWfVb3N0LfMebtFqdnuANm7RUX
cfOZtVfcslvrflt6xZMwW6dWab78G9oN60u7j92N9vIO0hba29bzyrzOfCHa
vrjT95Wctvcx+u5zxr+t8TEODTM8ovZT9yvhlM0xeXwireO3/pHXN6pxD8jj
L1n5HfOgpcrwoay6EPKq/mV6lejJiJbim97QTn1Kfentc1nNQ+SHvWGyl5e+
R/ZZZvGdmwu9DrkwVGeXueVYk1ukn6Gmc/4kT98O3NGxmJtjvYrcJmO/t/w2
y7jfZqWupV6/s/4byr/fHsDJLdXzdO5iVnOtv9PbB9SX7mPsPLiH7VdfvEsf
Axynv9NI4Jz65PdHleqq/WZBOhB2gMs1F/Y16qnkZd65Y13HlsA2wLZmVmwP
GHqDZDVwqNFA9tWco7S3SFlul5w/zl4ejeN8+rt5uVoWysmNObNITKuWVl4s
Z3iRVY9Ct/j+Jj8PdJw66V/iEt9zDIjwSLRO+gzulUeQQ/8l3qxsOLNmc+n7
PM+bHQJ8iXFkuNFY2/NVetMnN/JwIqTbH1WBE17nK+UE+bBShTwgB3ZWLzlR
vSTW19ke3L4pCXV0nOV9jRccBRytc3yW+sHZ6gmV3INi/R2/heEuuJzOsO1G
2M1tZfJyP5OZOb97NZd/62GHx7eox5u75ckZejyfd6n3We4+vssOZVzvAbHb
z9SMfXXs5sNOz97de2nesdq+os520v0n1PP11Yw0MJAz9+gWvwWdlkPz+R1o
6A2q7Q+p+7bPDnUktldkV2LzE7vsk+pb31CZp84HLgUuB64D7gMeAZ4Bngvw
Ja+H+L/ZEPIR+80oOxjhntyf/N2pt/oId1qb0fnGcMvm4i2Wd9hQ9jrQ8PE4
4PjmYoce46P1oiEdSvNaqK88oUNpZjsjoz95Lsd6ztt0h70HuNfwOLS7lvse
MsbpSvomvjlvAtoHuvxZcnid9zmb+7wurNK10PnLvrpGQBvyeGIoF9pMSA3Z
XTVE9lW5HewT0JEzqpQdV6kv/XZ8I/VbZkd7b/admGRHyY3DVCfOUK3wfjsK
GK3acSFwJXCt8d3bgbud/7Zl9rSZ09/VqBf2riHZk3eNzdW3+5rcuVNz6TuN
Q4xODG8udFvSa52XkE2pB8yn9q2R6MDpZeRUv7vZ7sD6ObXA+nqWLBu6fVgt
+DoH57N0VOQ+Pd/2VXlyru+qyP9YNiD/mQ/WKKOjYh623N8pwn9yfy/Df8kS
pyfkZXbYvG3777bYa9m9T7grmZlZ+UT1/lOVy/R88le4y+ycxuHHgaeAp002
eK++cAf/oL5wC/8Y+ByYBvwB/FMfz9d8b2XzNfdE3sG9t7N/4864tXr7zs2t
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
DKfN77UtBc32nYTX6AWAhcrMm8+pvlpNFT2dpFr6V3Px9mK1z+qezEisz/K/
LzVqnoDe+N/K/w5eU0JZMKYbxyTkvuvMv7PXAvY/PfTfudzd+LWU3fQX3U/5
b315YA9N8xH59/b/zvz39f+2/HfNsqcNDWhw7N/yevxb3txSzL6fmNwburGE
7pv8t2fm5W8Q0uVqajLvIM/rXvW67lbvAu8rRz5XjogWT26DrOFz8mUJuhy6
8XM2KtHkcrQ4LUukabDNxKHbIzU4TX/5FjD2BsDOb5r+3phjjqkdfpa9VvfQ
OaZmU0/aKldzpl/QmX5DZ5rz/KmZaerS95o3bJamPrXFnF9m9M7O+TUps/5y
lTJIuTk6LXcsrHMfy9FZZ97qcjVm33phGgdEz28y/viXyyLt1S+l92oxWi17
4xxATzPri6huL6HzvYrOtnjmGjrjfYx/2nmnlm9vZn4vM/eHAEeYuT8LOBsY
DVwIjAVuAm4BbgPuAu4B7mtXyECfmLxNX+bsy9z/BvwJ/NNcnP06oD3QDZgF
mF150NNwYV7Dh4WBRYClgKWBZZUfvYHVgNWVJ2sBGwGbAJsCWwPbANsCOwG7
AHsDBwKHA6OAC4AxwIXti75xuXLpWuXQLcDtwN3AI8BjwJOSKzqEs0QSh74E
vgImdizwZ3qEQ7XSTSuXyKNmw6WOwEyS5YEeQE+XDW0uXEJ5tCSwFLAMsCyw
HLC8cmtl5VZvYDXJ9oEcmbSf7uD4NQDYWXm2J7APcCAwGDgYOCQhc/pd9YQA
104DTlfOjQJGAxcBlwKXAVcqB4Vznm/MR3MC3YG5gXmBhTUb9dJ8ZD2FXhLi
GHnFbllyz4RAXqU30BN+B/7QXaED5m9OM8+XuiybZW940+h4LJNwvuxMxXYK
r8ObJMzBtmYOrMYe3q31rcHr6Anmt5Xf84aWQob40egmuzZm3Jk1G8xhfsee
qpWLqVbyd5SdY8UErdygXSH3VlsfOQ/PaV6gTk4IzMVkNxPTgXrMQTPQojo5
R0An58mok9XQR2ojs4bM4/UZNDJ2z7PzmlUz/VxPD8y21c40vYz1HotVqJv+
prdV19LdO0kzk/TS3mQ8n9K0MqaT41L4xjt3i+YTaqblmuVZb8e19VwO2RkY
ZDh2EDDEcO1IYDhwYhvwTXj2ayCPz6iZvJNybVZgNuWc59sCjnNLKN+Ea6so
19YzPNvccG07YMcMXOOb3csN166tAt/Is48c10IcS8sloYzf0eT8rHyjzyyq
vFs8A/fsTrByCv+2dPyLcW+getbuysG9M/LQd2Xe08hB8bYzlYfn6p4Q4uOt
4OIdykfLxQ7KRc9DZhfuw8LDZRwX6Xfcf2N7r80w7+uOO8H5lN1pJdv/rVyq
U/50AboCM7VvvduKJy2nniT7rd1t7cz7fZZ3oiyzHfKQpJmuD8wxZ3hel4sW
DuyjSW84kvTe7qCxmTq6W2ttD+2bd7YUtNvmXM6H3SO9XtsuNpZz23qHZL9L
vZ7oOpTfdH/837gz+nyeVaNfzzCzVpOTMk6l+2Ee3Y1lnrT3S+XuiElvlSrZ
DUVjb28pvVmwF491irZ34e63JbA1sB3QT7PNLppvdnU8sTnnUOXMqTn5MsHp
cDvNLjav2Kwyn+aVRTSnCB+WB1ZQPqxcxbxCnR5n+kfhwK0JPLD7q98FfEYJ
8YJ7APnQDpixjGyygGr7ooYHSdkjlDv8vdPO+o6aL3bOkC9srvezfarOdpYc
cVtLwRc6RLSfms+5Xq1d6R1uw3aFvXhT4wFJ830YMMzM8wR36/lV57VJ9Zv7
7DxOuxcFegFLuln1XTg7uhvdrFFbY7vlF2ZuJAfUOD21M9RsZob3wFhe5bws
bWYmNC+xGdnJZFDmguGRORhh8iQzgGhae/X+RfS3XhZYvl3r3ph3Ebm1bm50
bFugv/7G/vetxOfp6b+qj8/UvnTP6vlf8O5L1LfFr29QzUrybN+15e16Q7OW
1bvp1Yvn9OUt3Zxl8dyjzLxl9dNbjNbYDpXzJzuI7d3Wb1fo3TZuV9hJ+rYr
7CV27vYHDja6wl5A5u90ncFzgIuAy4EbgZuBB4CH2hXeuHkNEq/sZOZvdp29
eduX7vVL6NzZmdsQ2AHYB9gXGAwMAc5VLbpeZ4h+9wDwMPB4h+TO6yOnTZyb
r4HvO7Z+m2A1ivNDjWoJ6BT726WcLq2o87IG0Mfoku1wd9RZ2U01aS+dmf2B
A4AhRqPsznuqzstI1SeZmfOBMcDFwCXA+Mg7HfvtEHdZmaPldJbsvuK9i7q2
ofoWc5rdXdg/xbJZJR0UdxnO3qRA58Q9htpHL5zHzKFo4GLt26Zbsm+RrlPt
y5LVsvS3Sb1SzHPLzWxJ3+3F/Dhrf7Sp7jNJ7zAHOM/O0hvx1pX0FnNEzr7o
7hQeca9ZOoFH5JDwZy1gHeXR+qrRPiOIXtucsCewr+HT0cCx7Qr7zZnASMOd
i4FLVa9vUs2+RTl0r/LoYccl3wlYPvEtBW8kvq+dXzPl4iZX+jcWaZzaDdgf
OAQ4EjjHcOqi9qXfsV5r8gR5dbfxA+HVEwFe+UzxacAPJqon2P4qKb9m6QOS
uLOMcsbzxeYM+ofnTujNYawH2Mnkkt0CXBK/OSiBT/6tYqwbILeYZ0YG+CUe
NdZx7K4cXYH3JHKI/Nk+wJ292oA/viuw/GA3YLlBTqxcRV6wF/B9QBIfkjqB
JE7QX7LOf2znzzPvaW+cy5nrtLfOI8qY33uqmLVszmK+2k7nWrK89GCS5Zmz
6A2S55mzJNdLByY5S24QkrXkDiG5nnlLsv0o4HzgEuAy4IZ2xex1a4pn2Pzl
s1foxkevWED5sET71j3EKmYfEG5soLzYynCjH7A7sJ/y4tAUz/jPN13Kj9s0
g41XjjyY4hvl7haeNzWBvSKLf6Tlr6T+jLxaFVgdWLOMDMb8NUj5tYdyTHaV
fVN8IymH2Qx2tu4x5JrsMhcGeHZvhGf+jZ9/vxrraey+bD1ku3bFvZl8E34d
CAxWfh0e4NdJwAjlmfBrtOHW1QH+TNTb3+Tm4rfgSVzy+7TtnXn7W7F98f5H
Lq3ZvtjtCa82DPBqO+WW+M4eyiv71vsqwyXb5QiP7lEexbJWbG/5WrubEDd8
Z+PzVBoH/P5BDqyhPOjjeGDftaZlqh0NJ7i703P2C2Sn2LusUP9M3yEn6DsX
APeldJD2TbbfKZiLdgJ2A/aJeIbM8zHAcVXyDO4WM2OeerQv3kyW0Hldxc2q
zOf6qv2bVaD/tn8M3UvS9N9/MxSb5Zjus5MMaX1o3+Zc59Vy30Favd41o2b7
TpK6fFYObX4Qs/lwBTl+IzOvfEcR238PUf21XRJn9gTgFDOzF7QrZHvpMcea
uZVO8wrgGuB6YBxwd7v4LTAt3y+jGmxvKvZt4NqqwTLf0qtv3L4082+rGtwf
GKA6LD37QTrjRwDHAscBZwIjgbPbF/qn0e1L74ShfeAeM+tPZdgFfOduZ/xb
4LvIThB769FiZn72DHtCFj1fLaDpawHrABsAG2XcIQYqV3YL8EW4MkS5cqho
e8YdgvwZGeCPcOcS5c/lwBXKn0dMx+/viLZDsrcl0XbuB5JVdgf2Nrp+mHKF
Hb/PKOcBY9q13n+vV20f5/T9DmB8u+IdwN8AZmlf2hFR63lnWtnwgplk/fal
t6bNDC92MJyg7g8FhkX4MNr4gL0b2NsTufCQ8uFRo/3CjSzd6+cR7ffc+DvC
j+ZI/zp75BaaxI2YR6wR4YTlg8825MPOJt+QE/QPywd7n4jt0me6TGN9xPLg
oZbCtzirtCvtdngfZy5nJues+2x+iM79ETr39AZ/27I3B5vTY/eH+drHb+bM
LbbP2cJll211nvu1b31DFY0P3RPs33Cglo/X+fU3hNjNNDarfh5Dd4EugawS
ur3b2QvpsmQVam9/nbFBbraYn323f7yZqTPdHPH2JfnYd/cPtMRnymYN3kc5
T8wZnCm+KeJMDdW5oobafEH9DOULztXdOkuiidzX1tScwDnaqH0x/0ou2N5p
oeSDQcCu7Yv9YFo+sLvbrW53oxY+bvJB1hu8zQQxfYv5v52lUCeYpmXWz23u
pX9zL9tX58p7+fEu9zLzjjK7F7XqooBv368zxrliTyfzxNzK+RnarphXxYdP
VS8+V314tPNi68Eh711G54daJDPUR7MmNcnnTM6SnSP66qE5vPUmo0Vpfpr2
fsPPjs+OXdzsxN7+WO1ZMzArfY23hbLe/3yv6mbkFOdhNsud1614d7dz8WAV
NIe5jVrD3MY5uUBn5aJ24Z3G3y/uNXPzsNGf/8feWwZKVh1dw90XpvvC2J3B
fYBAIME9OAkBgrsFT4DgLkGCu7sEd3cP7u7u7ja456t6eq/nrK5b+5x9uvte
Zt7n+7F+5U+Y22fVqlWralvPaOHw+wEPLUU8tALVsDXoN7QOcdGWzm9oX+d3
ZLnoevP7uYN+P2V46D3B+5Hf1diR39YwwfCc3xjn0Vvlow0dTtp8WJb1QM3j
314eNx1j+OmE8DtUjjqFfo+nh9/kHY53ZPsL5Ig83aWaCxmPjYjbsOOA3yfm
acc5v82imZr1irS/xuwMczP4RDaftnz4fa4YfqNrkM5ivyjPKzqPtNYVxG0p
szSeoZX1g7zfoOcLlamT8Iasvgf32byR5wnZPZtDhvuZI+sF3V7Sp8TvDL0s
st4bDIhr/B2JGzHP3X9A5vscHbjy+AF+fwueZE1W5FXOY36D8Ha8/hW/xVXp
t8g1dz3BPwTbEV/ulsOZ1ufJ8zavpd+tp+tSvc1UfsVvux7hWI9f837fNjcU
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
Bekc/R2zZwfNA72D37fqHs7gn1hp6B/N4qv+Uf8O2kc9u0sFl1cauudmwa1B
76jW+U7wQyV+K8WbGdusft4cbIxa/gwMumXcWnZzcpJatttt7zfwbhF/e/a2
ErIj0DSaH1na6JqVgq5RPcPZEfTLGwRts7HgH0bP4JveW3CMftuqOwSnCs4W
nCO4QnAD6RXoFGTczhvYrEvsLi70yQ3kK95Tcj4Xm4O/GvEX8/QG7xB4PFPk
LcZ0xTCjLaAroCd4zlBGO3i6gfXCX1QHCJZWLhMs34YusFk4qwmwqwR/Er0o
e5RbB22wXdAGOwt260D9t/yptd/bafL2FP49rLGncEao/+cJzh/m95nyf/V/
79/gFp3dT/Bu3kATFM1MFgkcvFQl6y+Lcr3MuegzwbvwOaEf7I26XYiD4Xfa
DJ76nwcHTj680tjnPD7wse1FeZZymeAKwVWCayqN3hR9KTj6NsEdxNUPVOJ9
KXi8E70pOJ+zgDYHGLtpiawQc77NH4PrJ6z1npuC8/N2SMHtCxl+XzxwvN4/
WM7h+dUC168TdBn7opvUst51W8F2xPc7C/YS7CM4pJb1rccKjiPe1971vFpz
73ppLetdrxXcXMv6Vq9fRUbRu0fCdeGaUBuuN/WB+1atFfe24YXG6oidMXMt
sd6orSd5ves3LWSoy3qimGFp/zpxid41da6NfnXOUHPmKdmv2pq0XKhLKb1r
yvy8qGe1tQleKdcm27vuGupUmd61zJze61m9moWeFTXL613PL+hdbxL8Z3jz
rQ6tach8olcoutHGc32tV8tWmjNuq4ZahRql9Qk5N3igW1aa+1vOg8dqkfVE
0Q/wPYFRyQ9FXse7XwAf9BPKD3j3QpCj06wAPM+pQi2J7fxqr869AvufWkuW
CrWEa8jKtebeHn0D1xL0DKOiHwov1O7RsA96g1NHWvE/n4z0Hnk3EDxvMy/j
0O6szPYdXBvKeptFd6dTfMxWPMy8u16r92T37izncz8CnxJ836pPGcskc28C
bre8jn4EnG4zFq16kTcEPp+5kvUQ6tssH7jX5h6K7lRb3lXOPVBwkODQin/T
RXdz1JuxPQB4+ErB1YGLlYPZo1EOvo94+CHBI8THzwteFLws+FjwaQc42fov
0OHKm3PXsptLlh9XDXxoPZQNBZsKtiA+3CZw4g61hr7GHZddAzfuXmu+raD6
ez/B/oIDBAcJjhQcVcv8F/guypfnG75M4cmLcvwXzIVuF9wVdPV9hhPzbv/F
MgPgu5GCL1QPK+cJvh7U0LlF2SzmMOYv3GOY2HDZ5MpZgikFU+XwmuWpeQXz
B75aMIGzoGM93lq9J8tseTy0qcNFWzn+yI6JvLRP4Br2PKx2tFyjGvJU8j7O
LME76o3cIrjV3O9ULSn/c9ONYHsP2M7f7T1g1ZjYG4K+tHffoDFj2WnrRW9U
yTJgyoPbVppvwajm3LPSW2+q73F4hPOsJ2257/zAfxcGDrTcp97H7ZWG/8F6
lLnw0cCDj+dwYSd8EeuNx3xxu6ttb9d8Gfxx+CTskWDupB6J+iO4dcq515gf
PnMt88ORf4W2VY+Eta3etPmLYMla75tbqxru9rQruNrevrH8fHDg56MDP58g
ODnw9GmGqy8wXH1F4Gv2zq1ngp3O8wb693SsR3Jj0LV5/N2qr57nh6R6659E
akCR596JnFgn60bMq0+Z79sbYlxzUjTy0qHepPgmqW83pOTLuIZ59Qu1axtT
v7R27WzqVxkfJfUtiFgGjeuhVwtRB08xtdDWQcwE8urhzf1QD5GNzquJefOC
WE2EF7NNpXlPn/sELyeNma32DHuH+ome4YhQLzHHRb3EzIB3MDDH1VqJWS56
hjIz3f6sW97Ohr0lwn0F34aEv4/7kOzLaP1axtQu9vbRf3iejPYh6vNrH6Ie
/w61Zk+Ge45W5rpck2J33rguwW+5qY/mukVefJnZbup92qL6kjrbLVsv2Gfn
/iR11ttX9cDraWL9TN68t5Nc7/U+sb6HZ77/aYG/wdszB+62uRrOfylvF+2F
Fu2ErlfJ3jNRX2frwNl8V8XOdfcM/MwcbPsVL0NzeyXrTfqad723T2yOZngt
m63mcTCya7jlxDka5uAY/6J/iPEwsjTIB1suRp5G+wrtJ+D5gHu1l4AX3g4H
p9y6Z3+n1XyN1f95ed73OsC/RTek2Buy9zk7xb92vqlafb7At3y3s5O8m7Lj
4d2LYR+JdXi7nJuy3+HNKT2v6RSHb1Uv3ym4l+aRdi95RCXb41BuzZtFptyV
WbnS++0X6GLlVtXGm+VwK/vlNreoPrl65LpvfGTF94qwwxHzyi+rNOdmbqn0
9oruqmRekecTPSN4oZJ5Re9Uer/rireqcCPHvnvM80i+P6x6WLUwsi1612Pq
Wuajw6vhTEvevSu9Q7w4cS52l8vu/dl8i/XdPb9d55Ls6fCM8sha5uvA0zmT
+FlzMBfWmnMw7MHz/p/d0cBddquV+T67zibvBl8LHgheTuq9rjz/Jm//uox3
U/YdlFZuBJbx/62Hk5dt8d4RmttwvfVmONcSmwVgZol5pX2DiHk+heOL5gSY
X2JWwH6Lve8Mnrf8nsLtRTMEzC69OcJ5QVvf3qFMpWptzrDbLKX1SpaqFL/r
i4wKa2vOUHpzU86p8KzU1oCTA+8jt25vTpwX+P+iStqsoCz3Q7f3R/4RGh0+
ic2rsEeCd57gkag258yK6nObf2RtrnVCff1YZgW+iNaGzWq98487hPpgawPX
hAOpJhxBdQHZyONDfTg91IezqEZofeBcC+cktVZoVhK6vigjad9ZRO2Ax8Lv
eqB23JtYN8pmIvM8mJj+z/P/8/KRnczAlK0f3EN4dWSGkt5Nnt/P9YR9/rzM
fl4eMq+XSOkj8ubRqDF52f1Y/jGvpyjTT+TNrtnPuY16jBEV//Y23oH33gIo
8tG3qcTff4cPo3Viz0qzR35EJZspa55RfXLNNB5XyfqGkypZtsbufiPvqJ65
9gzaK6h3c0sl8220T7i7ks2UNVvzcKWRr3k01IwnBU9T3eB6oZ6MvVuEt5FU
8+OtMtzzgMeN7Lryt/opupO0fC2bwTJfs5+tfL1R4GvOFoKvkafhWS2yNMiv
s6bXLLtqep3R6mwWHgvreMxnlasxm+Xs4Q3E0ZaPL4/wsX1n6eaBjbzh7aTp
lZdbeVvJ+t3Mt8yx4Ney3kreXaS8+ekIhzc9nc1v3s6X42fbGejiQ/05qPJj
7KYov6fk7SflcV/eLFN5b89h8V0k+65SkY7Omz8yl6l+vqtg/1i5bdbAbZyj
UU5bodLsLyun8XtvG1UaM8HNKlk+BhzG2UBoXc0EWq+DMzGx3aDzKs16t9M6
N3UfWm9MYL6nmhU+MngN+8/Ka3PXmvUp3tVWTcp+BXNcqk8MfWpndqpNd631
1qf71Jo1Ku/sQJ9Cl4Lz2tWn2O3mmd9VA1vToNCf4L+YT9GpjEk7877UPHUZ
PRnbRffeNfY4MkUz5u2u2xmfvS8X48ZU70H5MW/3nWd59s2DMtov5jmAM6H7
8vgSOrDsvQa+T7lhpbF3GctScNaQ+RRcenDg0cMDlyIzYfcs7d475wttbgK7
L7r3clOl4SeoNrwrcGpMCz5rOLXsbQm+K6HzOZ3JwRdWnYg+H/kH9PfKo6oV
lw58qnpxpVq8v4/tsG9S8/cb1QO2GT7t7TXHh75eOVP93tMCX4Inzydu5BsX
PHdL6cs9HYj9xdS7GNCDHifaHRNwYdmbGan8l5KnG5HDd3nvuafsE7ImTL3V
kbK7nqoLLf/9s4D3cPMjZV89jwNZL8Y4EHrxjgQO7LRm5Jv1VjPyLrnte2Oz
Mtvznh947+LAe5cF7rsmcN3NgetuDXxnuY515JPEd68KXhe8LXhP8L7gA8FH
gi8F31aoNxb8LFBDewzBmIJhgvEEU1bb16DIMXj555gOXYK408uOsQ7lvNjm
tebdFeVPr9dGLlr1KM/QwKOHBi5VDj2plmlPzM6w64d+2+78ae99Za2hP6+v
NXrvG2vZTE316B2COwX3CO4VPC54QvCk4GnBS4JXBK8JXhe8I/ii5utXzkl4
N9LA2bcEzsa+4F0Of0PjPix4QvBMH+ndIq2rO4XfCr5T3hf82IL+LcpT26wF
cz207m8E0wimJd07fQe0b1EtsHs5yEivKFhZsLpgzT7Sx+ybbhOrDz3NOeg9
ehpZ6L0Ee/c08tD79bF+Rv043akb5w5rzjpfNKyRd75UcLngimGNzHN/1RS7
q6N1Zc+Knzm2szfW0Vxb4KnG5nHIYmhtgZ6+vpLpaFtf7q3EdxdRU96jWvKJ
4DPByFBXvja1RevJ2GGHZ1DY4xkqGEcwjWBawW8FM0R2efqy7vDuDfJzRfUn
dntK64/6vazdtQ5tWWue0XENsn6I1iDNMrMnovVI9ycPCfXI+r9nUD2ydShW
g3DXBPVHa4/u6zxGNUjrz3NUe94QfNhG/dG6cyv1DKg7XHO03jxGNcfb8ymq
O2VumnwW6k1f1xnPW4n1F7FaY3d3Wqk9qXXn16432GWP1RquM/uEGrN/P9YZ
7lG4znCNuYxqjO7WqNd9t+ABwYPDs0we/JM9Qw04KPB7ytsenk/CN6nydtL7
YhddfWXrcag+/3stm4VtGjhxm1pvj3hnhw/tHAxeB+ZhnGPwssfn1srvlrNe
vjXwFbSy3UO0OtdmBj6LaNtYBrgv9sPb1Z28l5cya/LuDuXtfHtvOsb8gdS9
bv3e7qHvTf6so4RnoN83drHtPhmyVXavjO8BnVdpnjeBA66rZDNzL2N7T+CC
BwIPqIcAbQev9JVKQ+O9VmnovLcqDf9gdPEOYrqNPQP4BcpHm9eaZ/PWH/Ay
tl62Vu9aYHcae9N8Zw5c5GkznlOleASeRuuER4A5F3junqDL+tMD+NxwZad1
mTfvyuv/WYuV7fdb5dzYXnR/ajCbF/DyuKNK359388PuOuf1//cPb3D/0pXs
RvQqxPOq1zRDu3Wldx7K6rdDiNtPKeDy8wOXq/97RaWxK3Ft4HPMvGyfjluj
yETdH/jc84PtDEw5FjlWzbAiv6rajedXyKPafQV+QwJaju8EFek529+it8W8
in3W2Nzq4oFZhjTvpqb1NWP3zVL46TPDT5g5pbzBUEbLKe+AR1rJE63X05yL
TM1Eev4e5xjLfI+xOU5ZLYa3iHkvSjUZ32TE94msu+qwrSq9vTZk3PU7zfPb
jqg038dhbVaky3An5xL6fm+o5Offocu4N7PfsfZqL1Uy/+2NSv/PdaDL9P1j
q81iN97hsSE/uUgte9Nx2Vr2riPfA4BG8240wltTzvH8NM5Osn/GmSLMdJhn
1ENTnfZr6DPM3r2b8rHZO+Y38NBw87GMVsu7d/aew3+t+GWduPNY1jNL1Wmc
3czLsPeXPkvdjS27N9UXOu2wYeV3ZlN3q1L12n0JtaSop+f9Ka4lG1Wynh4+
3TaV/Dd6UVPwng3XFK0nuPOLHBTXE64lqCOqCZF7svrv9kpzJl5rCDw+WzuQ
LbW9/ZuCd6l2wAP8ytSPn0INUU9Qa8iAauYNjpt4j62V/n8KqjPT1ppvW9p9
XHgAqC9L1LLd2+Vr2d6tzV55t+Uxx8HsBncPsHvr3VLDjIZrjHoBehdYvQCd
z6gPiT1b3a9FRuCaWvN8RmvKLVRX7hY8IHhQ8FCoL1pT4FWijnhvptl7wXxb
7baBfg6AM65aTx4ZGL+5Vqam5GVdP83xSW2d+VnwS5s+QJ7fmldr4LNOPcSf
07Qyo4ndxUm5P190Q60VjyBvtyB2myFWg2z9+VeoQZjbwP8tW3/y3kOJ9Sax
2hOrO5cMy2Y48JTVI3joV9hZ4Pri3ZFHneF3pvLemELm7MpKNjfifoU9B8yR
0KfwHEl3rTzfmGvKJ6GufEa15ftK853P/4bagroy/Fea/cf8Y35zquhOmZc1
s7eS9wr1Ap4x9m/hHSNbpvVCfQ/7RomtHXxbx9YP1I6nBC/WWpvdY14PL4Vv
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
2eH06k4rvQz8+QWHFuf5W+lj4GUh1xnztLSvwb2wvFthKbv+sZpl55mpfc+R
pvfhW2RFd8hazYXEsqFFvdGtVN+0L3pR8GoH6pv3BmHs9pitc7wThlnpvU6t
Qy+ltY7zZu9Vsr1S5MpQ334OdY1rmuelDQ1emq1p1lObNqdnwvz016ppmJ/u
SvWMd8Bs76T9kvdOodcr2YybnW1oHSvy1biOPWnqmPZK8Nj+X6pn2C2L7ZXx
bKS/6lreHCW2e9AX9a0o88u17desa3ZPLdWf62RNa2V205+1rOxsp1M1THuz
56iOaU7n/Erz/Pv2SnwWwz0T5jLaJ/EtGK4nsbwh+qOUXE1eJhk3ZvmGALws
fsOL3wmwfQbuc9leA/x8D/Gyl00G58LzYe6yehzc9ULCnNab0cb8+TxPxfon
iwQ/pGivyPtuVX9uaTRjq1pRv62Thvkedxk9h+9Af9vP9qN3Da/B5tPwrdj3
+nh+Cf2FfUz9ZrDXY/P9qsXGDN9NLXgM1l8YRlpMcyPwsSevNmdH8nwGnXHO
Sd/ffNXmOSe+R+RHVnB02taCbavt+9q8r4ncCXsOfK8fmTa+tcR+dornkLpr
BE5QrQZ/W7nhIaPZ7M6C+tmcGX476DXrb2teRXWb7nZqbsXud3qz0rGCzz2E
PG7VbROTdpuKfG/rec/g+N5zkn6D772YYFnyvmO+N/wIuxuKPAvrNva8X3B0
m2q2txL97zJvbcdyftBtAzrggef5ESm5mbJ6ra/98BQPYn3B34b62ZpW56y2
nvA+SZ5WY69cddrxPa3PWmN+eYoeg09+67DMJ0eteinosHZq1pmVvs/bfEk1
yrsXMIbjF6hXwLPV2K2AaUI9sjpwxmrmf89abc7fYL4Kz2Dpqp9p3EywVWI9
6sssTlEOx6tB/K4f1x/UHq47ejPgyZrvDWCW6tUbzFHZK8BM9YdQbypUb+qh
5nA2R2sOMpLqGUxIdcfOWlFz1C+Yud47p4OaMz/VnT+F2oMs5dKhDrWa23l8
YJbd4RpkvYPXOlB/Ws30eLXHy2a2k+nptA/eav0pyvfYHmTVAs8ANShlTlsm
45NXd+ycFhnPo3rS5rSpOR/0PkVZn+vIB8DtA57Tcv+PWSvv4LCn/DT1MnY2
yvcIbN9Spb4l9k7s+NUsdzNx6FkmraZlb5C70Z5lLqdvWTD0Lsi/F+U0Oe8O
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
f4UPrrUKb8rybSxbl9T/hvetNUn9b+09vbnjUvXm3lM98FXqvT3wtUPd0nqF
OaTtN7U+ob88VHCY4CLBxVR7kHXgmpIyr9T+8G3Hi8bM8n/6w1BL2GuO9YCt
+MyoMyMGx/3idm5geD1drK6gjqB/035s+RJ1gnchkP3N67+2CfVgj1ADkB+z
89GymbE8T/Zkpy86y/D+BYH3tSdCZoxnrK1mxDxP9R6nn2Gef3xYtsP4bOhl
1C/9UPCx4LOEm0vYeeBsML8hjhmrvbuY9y7YrIbXwenIg8Hr5L5lJcPnG1bz
fU7vhsPoNmfN28PQnJp3g0nrA7LF7E16dxQ1n/ZDrfndGa4JmkOxe3rD6vEs
itYGL1usNcL6k/YGE2akPB9Fjfi/MB+1t5meGZi96/DawN4zUK/2xOagKZnn
mB/ZiVnn1E6v473Z0J+zylb6mk75ha3OJWN3mTqRj+6POaR3p6kT9wnb8fvK
zBy1dn5AtVNrHrJDyBrqPgveLOO+ZKVQt9aq9r4VqHVr+1C71HvjGd2eoX4d
THWL/Tfbh5wpOLvaux/R2nVjtXd2Ufnf5o+H5/A6+NzLHHucDj9K9f8C9Uz7
Y+7053pD/yu3qze1TL337Mlyex6vbxr4XHmc/aqdAperb7Vn4HH0BNgp4X0S
cC1uzWD+81HwkMCz6iPZfbyiW/hWv7fj+aTMXZgjwY+x/KG9f7Jt4CvMN/iN
xFQOOdnwCDiEtTPyiNcNa377sOgbvyfnO2cdjIyi+hkfRfz6mFcPf541Lmb6
Ke8Zqr7FLN/68swNfw3coD7F5oEjtnL4QblB9yB2DxyB/Ted4R8hOM7hgwtI
zyoPPBg068NBrz5H2jTPR4eHfl2tcU+C3yxR7fkK+RLvhNn3yDD7/i5oTdaY
sV01vrVlb2wx53h+uHLPXIZ/wDvMNcsGfgGvrOVwC3gFWnHrwCW7BB6BLtxf
cES9t7/A3jX2KOyNK+YcaDvwDmbOdifYegvqK8TePk+9QwVfWv2DMm8nWm6K
7acVcZL1EIo0muozfmexSItZf5l5jb0E9o3hGUNfYbcilucq0lJWR8ErviDo
JtZI8IJ5xyLvZuVtORrI6h94wPAF2A8oy4vIPIETizJO4MRFqs13GtHrr1nt
7dWix9+JtBHvadgd4L72bPuSI9Wr9e4ge/ePJ6xn+2Ajgj5LyQOxN8tzw9SM
Mr9liD7c82mVV+HVglPb8Wvz+JTnf0W9Mvu0eZyap+1iXi3za8yv9bjWerUp
GrAdjzaVX3F7uBVfNoVLY3eDizRlGS+2iFdj94CLtGdZ/1X15ycluNb6rpo9
hffK+2+Yn+l7NvZuTOxmzNJV/26MalDcWYAG5Xv2u+Vw7wHEv4cEDobPelI1
81qhSy+pNrzWy6rl/Nb+yo0wl98a+JzncU+HedwrtSwDqpyO7KfO4vidGt77
47toyu/wV72cyGT1bM8PfipnQmau+5mQot0Tm/v05m/wWJXL/1rv7a3iFi28
1C0iHL9zvTkHqndp9wq8vz9xv+rovs6ReFlQmyNhH+AdUz/YA8jLkdid59jt
nrxa0orfitrSyvt3qXWmlXxnJ/ImqxndDy82pT7l5TY7kS/J82NR6/LymDHv
5JQe339tN2sS8185ZxLLWOZ5MQ8O8/3WMtkT9Wk+FYyM1MqRZm8DNdPWS55T
4vY83yfVWWXsbV2+V4HMCe4TIWeiOxjYv/Bqp9e/qH+DHQzOnIyqt+bLZivv
qTW/Zat18iXT++AN29ibbvCKsA+vdREZFM6exPKRnIvEm2yoffCdOXcCT0hr
HvcwWvNGxZvrtp7h/TXvPVm+n17mdrqtZ3l36Mr2Rp2uZWXuevTF3fLU2rXG
0PRZIrKRXL86eZO8bA3DzbyirEwnboiXrVc2M9NX9761Ln0+PHsXHn6Y9wZp
Ub4xNi9ETUE9wR0BZFyQzedeLJZ30ZnAUYJjqo3ZgNYU9GL/rubPDLX3uqXa
e254ZeB6cPwrgcv5bS/0ONrfqIcFr189LM6OoLfxciJF/c1cgd9j73V5u2zs
Udl+JmWWiDkizxC9HXY7S+T3Lu1OGc8T+V2JvPckUv2madvgyXZmjOC/NYxe
j908ydPr6tXvNLThH+1HWjrmwefNIU/pyeaQ3gwS3pDVv/Z9qDz9+wBpYG8O
+VnQteAQ6/NYzeplp2MzxwUCryBPl6dXcV/NzhiVX+yckfeFDw+8cmTglqOJ
X+D1cKbuDMFZ1Wa/R3XrNdWG13NDteH13C24V/CI4LFqYy7ZiqdzJWnRR4MG
fbbWfJMYmTibm+a8tM1Jw4v37oN4OYnYfZDYbi7mltazYb9m8XrvvPRy9WbP
Rvd77M7u2vXmPR8vD8dZOHvPCVx3jODYeqZj4dGrfk3VrriVbH0XjzNtBoPn
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
12hPg35Gbx/g7QA7f0G/gtmLN2vhvSfwlM5Ybqw2e53KTZix4L6PN2d5ptro
S57L4acvAz+Bk5iDYjcxcQ8T+h+an/eURtSbd5XsvUue42CX1rutozOc5QJv
4e2V9R1+wpwG8xlwFOYzyk+q4ZG3xlz9kMBN0PDgJ52r60ymbO4a+h1zdujn
l4xu5vv7fBvni8BV3wi+N5xl3zhNyVOn6uEibsPNTath87yyTu65gvfsDc51
h2bv/G3peFwe1+0m+NfQ3rusynO4x8n37ItuAadyXmxerbwHbcc6Lu/WbyoX
xmbP8I9+drSYzpjtzgu0mHfPPZZj4v0Wz3sBz+HWgNVgeRkmzJGV2zBL9nwX
vm/W394LazbWaylajd8OZc3G70/ZOwHMibjtghkJext8I2CPwIms2ZQTsYPJ
nobuY/Js5Jx6Q7vpfOTSwI24/3KN4Uf1OW6p974l0N/+BmtFu+8Jz+Ir4mDr
W8Q8izw9WcTF/3N3po+9CU+Tpryx1WmPoYxexezecvfuxN8pMwvPL2iHzzvZ
47erdTvdl/9XUB2nfW28fKgl3jtbnAng+5fQxt59AFtHrqz2vg/A+SOrib2+
/Zlqpo29fUmbBdBa8lW1uZdHLamGLEBf1pNW9Thm+NDk3r4kz/Bxg171uepy
zPC1HiEHiz0Pvl2DO5Yp/gHfGrMZWHsfIJaB1fp0Yr0xs4/VqJT5fersvtO1
yPYGr5OX/rGpR14t0t7Am9PbPiH1ba7UngF7mLH5fCv1qZX+oi/yZTyXz6tj
Xh+C2ubVtXY9mKJ6Futbim4NlOlbeKZets55/U3RjYEy/Y03I3+1hfr3S6h/
yNvavX97v9n2P6k7jFqvdNZs58xau+4L9euhanZzDT3P09XM13m+2tvX0Zr1
vuBDql0jQ+36MtQuvnVja9UQwdDg/wwPNUvr1QjBbwTThlo1u2BOwYJdjazu
XPWsh+GbMsh0oVfx6gNqQ97sdZ96s2eDWnBUPfNuTqo3fBvbo1xQz3oU9XD4
RqX6ONqX6A0ZzXHdR/XgCcGTghcELwpeFbwWagL8Z9SEHwRdwukDBYMC59se
g9+kQn8BPv8pzEQ1e6V8PmBQub0H2ztMT/2D8vLsgjkcbgYvz+f0BIsOScs2
cS/geTaab1p3SDyHVOTRQOPv43Ah8khHDM18mtjbgucW+DGXOxr+2p7eWaE7
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
B400gnTSbwXTqYcg+L1gBsFMgpkHpXvB+p0vIfiLYEmjf5YVLCdYnrTQGqR/
1hKsLVhncLk8IrhgZ8E/BbsKdgu6ZE/BAYIDBQcrXwxp5oRTBacPbb4Ncp7g
AsGFgouNZrh6aHM9v6un9+6ycsOjpo5rDX8+1O+XQg1/TfCm8khP1jN7u1Hg
ju8Df9j6qjW1FurqWIKxBYMFQ4ZnPupkBTV2hlBnvbmT9TaXDPyEORPX2bW6
sly58tOGDkeBn3guz7c0wEUHjIJcVKbWc5337hJN1N18kwj7stiVRU9mOWsB
U9M93loycNcKoxl/QYtgzoUZ13hBi0xk+CuFu4pyBTzD6hR/dSJfAH5L5bVW
tJDlv3MSOZA1k90/ZT/ScmNZXrQay+tFYlzZCk9OUsJbHFX2iexNOp1p2dvu
eXeTmO/hO6oWRT7ZatLlAvfbXSKrR3E/ib1EzSmr/vxnVyOvvHtXNtdirleO
t/nk8wyn3yT4j+BmwR2COwV3BW6/N/D7I4HPnxe8SHz+keAT/bccQ/4tBVOM
MepmIMruGukNCO8Gs72/7PmNtn7Zu8tF95R4poZMGd98mN2pZ7ijxPVssVDD
tF9dtju7bar1TLPNa4Rapnk0zTf/vTvzITenmraNYFuqa7uYOqY17BDBoYKj
BccIjhWcmlDHLu1u9jBvEdwquE1we6hn9wjuFTwqeEzwhOB5wSuCVwWvCd4X
fN5dbkdq7FAbxzMa32p7+J/TOvVRa+McgrkE86rG70CGJGWuiHrLtdbzSVcy
9RW1dT3B+i36pa3uUKXc1i7jm3o1/V+CPUJt31ewn1PjjxjSPztW3vuCeX7r
qcFXOX1o74yi1RTQEpcHPXGl4CrBNaorBDcKbhra2b2s2LsIqXvP7Ps8EnTM
40HHPE0e7fPBp4WWUZ/2VcEbQdO8J/iwp7M7W969DWTLi3apeV8L/eWPgv8a
/3ZM0k7dQT8NCvppqOonwYTDG33mFIIp/49pKLztgDdyoJ2gm6CZcJuD97ti
vTJuXsVuUKqO2qOrtz+tHt5BgkOCnsK+l9c364z2jK7GnPasoLHQO18muKIr
m9mid0bPDG31PumpT/9/TRXVVJjb4pYW+wITkJaagnSUvUWpesq+cYGskvU1
eTfMegSqq5bubngE0FK4G6+aSv2BTbsb/gDrpx2DhoI3sAdpKeioIwTHC84g
/XQBaadLSStBH90nuL+PdNJgo5XYC52UNBN7odMErdQf+ijmRXjayPMgVCfZ
mTJ7EaOSXmL/o4xeYn2EWTM00qimicpoIeuvXD6K6yFoIU8HPRW0EOsgzKtV
A70edNBbo5AO4jcIrAb6hXQQNBB7SAODBhriaKARQQNhxocsF2eCVQNgvoeM
ls1nsVfO9V/9E/XNd8/RANj7hgY4KuiAmIeO3BY8dNUAFwsu7co8l2tIB6jX
Yn1z67PAN8cu2ximBiK/5N2TLLrVbPfXMP9GHUR21945+WN3b68cPjnvTv+1
O9ufVn9h4+5mb2HrUBvVK9/Z1EV45uyXoz6meObndjf8BvYZvFnfBIPisz2t
ZVNHvPGYLx7r1ct447YWxTzy2P2RlLm/7Z9RE2y/XCYzdGoLnH3pUH82mHLj
+OFI/8heuPaPdk6Yeov4B6ePG+D0ceyDq/et+Vbth9ALIaOqs0D2hNUL5n7G
cpm93+vN/kY3HlPtjxu6mtnUfCa/UzesOz2Hibu47I/O2Z2fv2TeUg2/3GjI
WzavaXV4Ge5Kee+kk5wFXdtuNiHGV4c6PIXdgk7w07Wk+27pSb/J/mAbnPV6
0GV2/8tyGOel2uGvqQS/Gc38J+8moLcfbN8S5TeZvbtCyGooV8N/4lvr8KFi
b05xnsyb5fEcD7mNQxyePqEry2lgL0BneucEnr4g8PQlxNFXdTVyG9d1NbIb
N3Q1Znv3dGXZjQe7mr2oxwWvC94SvC14R/CD4CdBZQz5WwjG/H/Mm7K3BeFJ
eTfe8R41PCnOo+r7WTaPyrM+1uC4TYT3UTw/SmvYvN3+bA91jGd8uF20qmC1
7oYvpXVM/agNuhueFM/5NjN1bcfu3rkV9af26m6e+ekewkHdzbO/w6iuaU1j
70rrGftXlwku785yLNcJrhfc2Z35WA90Z17Ws4LnBC93Z37W24KvBF93l7+N
yLmYccz8D7V08lBDfxO8LFtHZwz5mDmCtzV/P8/+imoz+1urDu69K7Hur+Rr
dTLXw/7WTqQRdhnizwWt79VLO/SjF5a66269sDKaBR7YtYLrgxfWaR/M3muE
/4Ub+tb34nznYz3NM0De1WD/y+oieGDvBB/sgz7wwrw34Wy2lHtF9r1+dnQX
7294+gseWI/enyIvbFSZA1YT9ZfeBOA33mM6LHbXCnce7a4m6zA7C9S+eZ2u
3rcB0DPb/RTez+Q81S6kxbx36XRP084DOWOlc8CzSJedG3TZxUGXcf98VdBl
msHS/NWdXVnu6r6gzx4Megy99BtBl6GX/r+ky3heOJL0WZ42Y590SNBn9s4X
Z4nhM7BOQxYrT6vBb1CtZv0GOzdErpjzWCuTZlMPYq3ubJa4Pmk36LZNuptz
x8hoebPFvYxuOyBoN9ZtOm88UnAiaThot7O7G77Eed3N2a1Lgo67Oug3+BM3
dWf5rTsED/azjuN9q9hsEnku1XTTBz2HrPMs/aDp8t4WimW64LXYHdiozzKK
arvU+xOt6Ln9SdMdNIrpOc+D8rTc+aTnLhraOzveX5rO3srgvb4Un8vqO8w2
ofFsxgv5rr7WdXZHF/PNopkA7yB+TzqPZ5xV0nms7wbn6Dv126YOfps3N+A7
2Nglgi/F84M1u/LnBeo9eZ6T1Tc2Q35iV9xzOr8r8514Twh+E2sa1jMvCF7r
SveZeGag9R7zAtRzu+fLcwHMA3h+qfVYPRTMLpHj4Zq8YndzTpqzPeuberyx
U5O3DvXY1uK9u8v7J5gJ5HkoV3VnPsp/ulv3UtgH8faEivwQWz/tnMHWuxT/
Is+7sPOEdrwCzg+negVF84ZWe3ebY7F8b+cQeC/d4+dYBtdyc9E8ItZ383zC
7hjF5hOx3Kzl07yZRV7PPK3Dp3wHwd4CXZG41LuRjJ1xmy31+knbS/L7Acyt
Xpb0zK7enr6dvaqPj9lrK3NX5VC+pQAetd4190W8Y2mzI8q1PH9FfmRR4lr0
P8qzvI+CvUr2rLFjuU7gW+XZf3Q371li9po3dz2wu7NZEWQf0VdYXmw1JxLj
xHZnrJwPaddTZf2dN3stkxfJm8OyDk6ZxebxH2fuHu1pnr+Wmb1+GOE1nrmC
y5jDimauqv1+K/i9ybvZrBtukcHn8nSe52tZrWf3wo8NPHRiV3P+A34WvCzo
PTtj1Hy7aj7NuFs/S2eN0H88b1QdiB3xVF8LvBXLf4Ov7D6dd6Pd7s/9ifiK
uQo8tbLhKWjDtYirWB/mzdvg1djsyB6Bw1Qn5nk1ls88r4Y9GtWGnk+jOrFV
r8Zm5+ze3LTEh+yxFOnDlBxKUZ47dh/M80fyMtV97UuUzdZ5WjLFN/D2xKye
RO4uJbNc1NPn9fIfRPrsr0gPxrQgeuuinlr13zQOp2K2sIzhVeZU7qG9/pnv
bNisnfbQujekfTR2h1jnnUhaD9yKnWxovMsCt17Rld17BLe2sj8Ef1x98RTu
tLc0vHvs9kaW5oThe/+xO9N8ntazPGr5cwPiS9V82lez7lPu3C7w5q7Enaz9
Dujuv10a8KCXwYPnPHXomacd5O/ExDiwFX+4lb0Wy4E2P1xGG+btmKS+OZi3
/9Hq7gffHEp5O9DzLsvsZfA9Iu/en+1/29mXQL87XeC7FB8R94jgI2r/q32v
96Ztio+o2WNkjZUDbb+bt0Pp6c28TBs0JuePH+xqzrCpx4i7uOo1vhd48oOu
hs5UvvyYOPMbwf/H3lc/SltV38OduXBn3vs23dLd3SDS3d3d3d1dUlIKgoiI
lDSilIVBi6iEKCAhJSWI372ds5w1e/Y5z3lm5r4v+P38sP6Be+dZe+21197n
476m9lTdyTzK/TPfj0XfHHtPFrND3E/DTgXvUqjuxBvl4EjmR3Cj8uIugRd3
N7yofuN+gRv5BhFzJN+S1f5YNeapA6368uzAmecNNO85qN78xkBDayqPQmcy
j1q9iR5aNee9gV9VY6ov+XDgWfUlVXP+WvD0QFNzejzLmecY13LeeQ7Hm8R8
b8EC/uXePJa3stxbxLvRO0fEw9tT727f4OhmTsZ+5gkZXiZzchnd6XmY0J3a
r98R+NjzLlM5avAz+veY/ozdD3ghcDQ06V9Ilxb5l7GMNff6nmcJrer1/cNI
v6p2HUNcPluCw+FfgsfhYWImZD1M3DD3duPw/mkqD+PNiKBvcascN+Uu6mv1
EMDl6htw/sXqW2SU7+zLu0dUxPM6U1LvU2dKr/S1a2OP5603ynrZew/Deycu
ddPH7t2xpo7d9dE6gTt1qBGsq60vwb4p5329GRX2Vw4INeKwgXY9rbXC5n7h
R/DcytaKC0KtwP0f1AtvhmX9Ca4Z8CdQL3iW9QTVCviyqX30mQab93vmSNSE
RYxXm+PRog7E9HcZ/vd829y9vk5qQmq2VeTl5uz9depN3DEyPecqs2uDeoGb
eVwvijKmtl54dSL1DpOXDfX8jCJ/eCTVCWj9OTqYb6EmaD2wN1Psu9ipOgCN
rx4Hv1thawG0Pd+gs7Xg5lADVMvf39fQ8z/pa/eK/yh4vq/hE6uW/xvxOnN5
TTDM4XRweYzHLYdb7mYvZL6B1neNlJdx6xi8zFoe3MxaPraTgZsh9gYba/pD
A2d7HA1d7+ULziaehn985UDxnbbYvgZ7x+Bn1vPQ8W8K3iKunnywuWPB2j2V
K5iPNHvZPYkiv2SD4e030raJ8LE3R+tFhi2my3vBw7lzNfgntxl/GB6Knbd5
eTD7HgPfueC7pZ5uBw/bm1/sI7/m8HDR26d4V8Hef/Y0O7jY3uhiHh4b9Hqv
53U2N4B9QNXdpxDv4r0geCrqp6iX4t2iivknVmezxraZgif6mho7R09b/7lX
MzvOFkAfg3+Ze3N9Ztxwhi7eZ6DdQ8FOnNXGfLdJdTH7KMhTW12s+WpoY/aj
VR/rzM7Txjbj9cOB1pzXfQOt3kpZX4XneKyfY/41+Bn5hnlK+Cq5WrqMn53r
q6TmfL30VnjW1+mcrwyHe3r6FvJaiuZ64OjfZvCzfT/nefJWPL3MXnhs5se3
NpSXvUxtan8KforH0+yrqF6eU/m6S3+c7w7u0tfcL2JvnPeJrDfu5cBS3glz
uOed6B2OuwKfg8uVx/ku/28Cf/8xcLjqaOTDoKWtJ/6ew+2pXK564qqvrReu
vG79D7zDg7fT+G0Rz/dQz2PtgbQ3bnV0LJOLXRmbvcjZk7GcfiFxus2XfStw
uvU8biQ+h+dxT+DwhwZa549FGQzPE/f88DkGW+/5M097GQzP97BvsX0R/O4i
PmYuLvK6c27PFfFvzPfOye4W3dC1fkbRzqzN7DInF+V2i24jpe7cWp4GR1te
nsRw89yBm1VPw7vAm8/g2t0C18KzPqyvdVfT08vQytDI1o+I8ap60pq9UF+a
sxeqk3k/E/z6mMOxnXjR9q2m2DtNcw00dw95t2GlgVZPGLoXfgP7DLEb74cM
tN808jwG5cjTB4rnhsyNPD+8diA+Q7xpoN0TvjNwZZEnzLt/no6NzQitF5zr
L+TcXcjhw1RG195DOjzBeylfl7muaCchpi09nxY6E3yFvj/2FmNZ7xUaElz0
8Wj/LaecXXtPJ8Z0Yc7dtrI327wdLJsjQ4YMnqrnp9p9c+Rz7b4AZ8gwU8Oe
ufVZO+GwjwKP/StwWCV4ALXgA6gfO0IwUjBWMLlgCt1TF0wlmFYws2BWwWyC
2QVzCOYUzCWYT7CIYDHBUoIVBF8VfE2wimBNwbqC9QWbCras9O7OnHdjDvk3
u+ut3IvsMPjXZoM9zxfvSKnnyxk3zgir/xC7xaPeA/u9ZwUeVv69eKCZ3cjd
6Wa/IZYbVt/BvtehvGwzdMrN6kM8NtDwIn4/0K5n/yp4RfDGQNMrflvwvuBD
wSeCfwk+F/xbMGFNfmOCqqBfMJGgJhgUjBCMFkwqmFbwFcGMgtkFcwiWEywv
WFuwTq2hn612tp6H3emAJ611YuFQK1RPL0GaegXBSoKVS/ggdpZo9XVZbb2z
YBfBrlpbBLsL9hDsKdhLsI9gX8F+w9v36MruiXh7dEW+yLnqjQjOF3xdcIHg
Iq1Rgm8ILhVcLrhiRHzPrmifukin32Lq2L2CH2k9E/xY8BPBA4IHBQ8JHhY8
Ivip4GeCnwt+Ifi14LeCxwRPOBo/J9+CjDW8GM+HsTWT84e2Zr5Cnjk0/5uC
vwveFrwn+Ejwyajubgxa3yb2ZnEt4dWMDnV4LPUGk4f+YErBVIJpBTNqRiZ4
7/MJFuhyb7oo931IqNNHRuo0e/KYh3LNvjTUbW9nmt+HuCvUZ/g4/L6i3Zl5
sq+xN/O7vmIf523B+32NmjyRU5cHx3Nt5n1uvPWIucB0ph7DN8L7jtjvXpJq
MPZ4UIfVM8KuTmo3h2sw5yrRG9mZwOFOPea+KDZ/vSDU5YtCTbbvZHFttnPY
7w/E33703s562KnHqMWPh3r87Be0JrOnhZqM3m2OSD2ej+pxr2qxd3sF9Tin
v+tVPd7Pqbmd3LjrRd21b/+WvWXi+WSc2R/KOpzaE7UZIm/fKaeHtbPrv3RR
i1P79PY+ibc/ldsX25rcST2eN9TjIg+Pc6e2F455ebYfhp+Hd4vxZrG3m8p1
1cuU2n2qZ/qae/S2/0Xv6/W9ZXrerwxBXe3EO8Tuls5asIMA/xCZpa0GWufl
yCihV035hthnRb/KMxWep/AsBT4h10TrFfL9MfiD3KNqPYRP+MhAez+K3a6n
Te37c6h/XPf+HureR0Nc93iP1ntX3ta6BQtqXVn/MmeXdih6zxzfk2ufncXb
GXzRzZYy9c/6pUV348vmW3tV56z/yvXLey86VrdS8/wyNcz6tR8kPNuUV9ur
flHr0iKCRcc2+kF9V9C+IZiz86Z16hiqT3bnjevTRaFGaQ9obykU+bSpPpD3
H54MfSDysVyv/trX2huidr0XapfWrc9D7er7AtSvT0yOgL1Z7gPxVhFubuL9
Y+399Ba6vSmD+mXfOLZ9HerXEaZ22R0I9lu1fmHnAXMu7emudGpYbGfuNqd2
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
merhqwNx/09rInuAWh+1NsID7Mb/83o61EHUP85LLjDY3POCB8j93Iolal9R
T1fkCf7njmqk3nm+YJmerhd+IWqe9Qu77etyb/t1OitKeYrd9nlc4+x7OKle
L1XX4Dl20+/F3sixnmSslqX8SO37luygjtl8nX3nwLvrgZ6PezyePaXetsEN
LtQtu8uFugXvke9uaf16h+pX6lZrv2Bi40dOIpis0rjjGqtX81Iv123tQa5e
8wjI1nMWIdanebUImQS8g1CUp0OPxrMp1CM7k7K1SO+1Ys8Yt7dxr5Vvbts5
1KMDjTmU5hN0BvVcqEdah/4capHWIM4naD+mHiJ6MPtOAufb7A2M+ahWcM/U
yTu7sQxBL/oi1IlOa4O3D8V9D7y9TvqaMtzPvc0dTg24L3A/836Ky3lf1+bO
Yjxe5vYT+BxcnuJu3tWN5cw83s7d07Ucjp6DOTi2a8R7tbxTa/eMlGv1PZmf
9DX3aB8x/YKd+eg75H/pS+fBbM/wSeDcT/ua83/Mg5R3JwrcG8sBjHZ6CMz+
dTY0e6RvKJsBWCTwr/Iu3ksA3+qdB/XD9hgo9r1OGmi/bQSdr3wKzwu5Y5s5
Bp9C38PvYo0PXrWc+quBpt/11ICv818YaNX5mNkg/8XeV2zOb+c33eh9zoLx
LQdvt2J+w+HQ+0s6Wj+2G9Xx+wiZPtZ/ZzaGq8u8fZ7S7rGZ/1URD8py9M0R
36lIm5fV5byHmrrTV3TXFjwNjk7p7Q8jWaxY7te7dQs+Zi4u0tJL/H8w02du
hxeE+z7wgzBLYW0dm6eA06cJnK46e4bA65j7z17x5/3/N+uPz/rLzvm1dqgW
R1b4yYGGR6Q1A3N+zPi1bvDMRGsH377D3TtbM8bnzB/1old373ox7x8fs/4y
c5BxNe/3ak6q3oyrWb/XM9gZv/V/xuWcP9YvYH6BOoU5/3/qk2A5wUrOvrC9
4WrfMj6jr/XNStyUi/USj/TFM8MvUg+R8m3e7cv3beyMnnNkPKv/SsLL6TRT
Ftt1xt1VvbmDW6vYg7Q7zrh/YO8e5PQUFw+09hW2p4j5M/ZdNLytw/7MYwOt
70Zo9gvzc54baE1Qr6Zon8Tmv7qpA6gBM4T5gO0b7HzAu0Pu5b5y97fxLmbs
Zk43fQTXAttH5Nw0zb2LE8t5YX/c2wkpunuD220pbu8ky4U99F+Oar/ZZnsL
O6t+IdJXeHwey229N7r1hmjRG5mcI2b+9jwfb/5s+XtZ4u9e32fjtzNzbrTp
vqF6SbxzaGfQWhOwT8J32uwdG947RG1QX9/zlrguxLwl1Ic+UyNsfsv6+txv
eL5+L26uoW/w7mvzvYvUzTVv3wS1ITZPTnn4Oe8Y3z/QzFdZL589J60X2j88
FWqF9hAvDPizZe0dtGfQNzY/HGj39VnjzzDYvJcWu21ts1CW4zu9kZbi+JjW
Z47vxNcvuoGWut8JnR/zjcreOuskv5TykDq9X5aTSfLmtrlefzd3y4p2SGK+
f8rzX6aDuz7M19YPwo4ftDl8IH6fjTU6vH5oc87Ost+jnKuej+fn14OPr3kg
zFOnJe6dJXj36tsjG8tae0PBxhla27srhNvMyrO4x5y6L2L5FFx63kDz7nLs
LfgbBuI+DN+rhM6G7wLPnnmTtXbszQHMQj8eaGhr1tTDQ/40Rz/jntFMgVMt
n3r7dZwt/VqmZi7y4K1mZr28g2DHBJ+2eO7D43eSit7c8TjU27WzGhlz0msC
b6bez4l57A+PbPXUU/qX7zA9PSr+5k3uzlxM6/LdpgkiHnrs/ffYjpzVtZ36
Ecpx8CBiPAc/ws41rf+NPWa+n8jeBPKQ7E1gpxlas2K0JrgPvgS4jz3vaSvN
/QH2IlR7Yoa5ZKWRf1yW9OhqlcYsc61KY54JP2Jbwc6Vxixzb8G+guMEJ3To
UUCjYuaZ8idsjoTv18ObwI0L5cvYXSV+M43fZlEvgn0I5sWXAjdqfv/1wI2q
Kd8baHoPOsfE/hly/Mgq1mh+OZrml5MJpiP+nFMwt2AhwRKCFQWrCtYTbGb8
CLwrzH4E8ifsQyCvD42q88uvkhexSphlrlvCl+g0r2+9CcuzsblmimNzfAjO
JIJbvyn41ojGXPNqwbc78CRSdyruG9muTx90/IhYth68/FQJbwK6VTnazjs9
T8LOOt8NPP2PUY2ZJ/j680x/AvyNN4f5rc8Yb9vZ5zSBv6cPHD5z4PE5gl5d
ITOjovwNL4E9ZOT+wNnIr9s3vWL8/E6GPvWyJsMrzcx6jKunIw8ZGfZZDF97
3jFyJ8rT6wWu1h2vbQJnb5fg7ZxMCu7pYuYI3wBzx+MdXsa8MSffV5RFgY+M
+eIDgbNTeRTlb9ybsPPEGI/DP54g+MYDxNujAl8jczIr8bZy9ryCRQTLCFYS
rGk4e9rA2+Bse2cC3gLrYN618nxk5m7Lzbm3JVL61/WLDTfH5oFl8iUpTi7K
nLAGvm1k/F0Pj3/Bu8q5jweu9TIlqXtzZe9HeJz7j8C1HweuTWVMUnflcnN/
dgdpGuLbmYhrlw/aeXzyLWdAeJ82xxMYETg3NbMD5zLf2nsQNvu3qGBxwXJd
auYvC/fadw2Vf6GbwcG436AcjBsOyFuDi+HRYpb3WuBg9miVhznbwZ6tcvLE
QU9bHT1th1q6DC9bLb1sj7nY8nDh7K4LLk7dYhgqTuZcdm4Oo0gbDwVfs3/L
XP1OgUbuNW/HfFtkL6aL6GTl7JUFq37JfI/3+9rna/A9cMcN3M47NJMGPR3j
eNbWdjeUuV7ncvNXmjcVwPNLBL29TKU9r6G8v3rgfXA+POUtKo3s9w6CnQL/
7xNqwEGCowUnCk4VXFz58nsoWgesx8zc7/E+suDgfs72seec8lCmEEwtmEYw
g2AmwcxBo+sdhHmCPl8waPSlgk5fg7zqrQRbd+ixLBapDcsFD3sl8rG1Tqwu
WFuwjmA9wfrjwHvpKmcu2F9wgOBAwUGCg4fAp/Fqkr2XgBp0reA7gut64NuU
3Rf9uekdHgv9g9akJwVPD4Fn493/ecv4Nu9TTdJe4l+hLv17CP0bvv9jPZyv
UE+h9Wn2UJ/mGdPwcVZM1Kkv6hwy1W94Hg9qz/Smx5gr9BXzVVp3imL587Wp
vmwQasxGlebsUmvNlqHfQL3RvmM3wV7Ue+wnOEBwsODwEjXoyzD/tFlD1CU7
B7UzULu7ZL0i5A0xC7U3Cey9Hq5Vw4N3xDVrkoK6NUutsdOku0zzCxYINQvz
1VWpbmk/s5Fg4y7nrUs59WpV7WWoVuXUqXE5h43VpKGYzZ4f6Y+ujPRIXn3q
xRzXq0tez/Room/yalSvZ77W5+Le6X3TP30ceqjPnHrV6xlxzP/ifsrWLfRV
c1Lt+urYRqZR96V0P0rzirojpXlFvnFt7wvghpzWHL6Jg90n5A5zb1jznhPX
mZkrzcw5/Ctba7S/0fmvzn7tLity6JgnoKfRucJmod7ofGE7qjdca7jPidUa
3XPaaqC1f7G7TKdRf4KdVnhXXA/uHGjOCXAPQHnf3qGGJ8V+FHoSngu8N9B+
oy12j4b5n7l/pNOrTB54H3ME5f/pA/8z988V+F97FuyzLpXg/hlCj7Kww+va
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
wRKCJQVLCZYWLCtYXrCiYCWtt4KVBasIVhesLViX6vAaPfBo2J+xfVdsxoo7
lHwHDf613T3AjoHusekOs3osvMPM+2zd7hd069OgN2KvBv0Rbp6hJ4JfjQwP
5pX8lrytf/amD3oh9mpiO8jwqO2sknOdc4cat1SoY1rDkOe0WU6+4cM1Y0Wa
Ja4y2J7R77Zn8TyeXuU0c3k9J1ef8n2Up7FnbPkZO1w2l4ldrk7ymN3M6TrN
X8Z6hyJO5LwleGrNHnpCqXzk8MBT3ptL7AcxVylPoe/gnVzPHwZ/4Q6Dve/I
vlCMxzi7rn2G+kPoM5TPjgmc9r/Wb/Tav0LGRHey8B4IvCvsY/FM8Q8DrTd8
mZvfC70I/HPMDL0MCXaubB/ieVScJYFPhdsRyJIsFPoR7kOQp7RzxdUDp6//
JehJ2DNbOPhlXj9ivbK1O+xDOq1LZfsUbwY6FL1K2XpXlOmM1blu+5dcn85m
YFL36niXwfYzuX1ML7y7ol2zoh5nXPU3vfAHc3bXUj3QuOx/ejGbHld9j2oG
2+sgN4qcjvUmdwmaYY9Ka//jzZN0lnQq6YRzBOdl6ISYRoA2+JHgxwmN8HjQ
Cc8arfB80AuqFV4RvCb4W9ANbwTt8LHgn11oh//Vvs72dAuTNoA/yXOs1Wqt
d0bWrTXmWhvUWr3LzQVbBH2wfdAGu0f0wbFGI5wadMJ5gvODTviG4FLB1YIb
gk54qAdawetJbT+6GmkFeJbQCBsHncAaYXvBTj3SCt32sKoVDh/ePm87YYi1
QVEvDH1QpAtuEdzq6INcbVC2hy4zr/tdSV3Qbc9t+23sO3IuVuv/BKPL1f/h
CQ0wWYYO6GV//xVT55GjRa2fK9T7nFq/eKLer5BR89VDWEewnmDD8Zgx8fwE
7x1nzpnZfJnukdhdd883UB2wa6Vx33GPoAN0Z0RvPOreiN557HR35IuYJ7Hv
69ism73hlXqfE707731ondW+fLpae2+OOSH6cq27S9Za+/EVQt1dvdbc9+AM
idbZTnMk9nY6djjWCPkR9MXjI0MSq20HO71vrzMkds++zG2UTnIk3n5G2Z17
1KenRvY2SxLbwY/N3LxZ21DlS4ruSHLviHrCtSSWOVHeX5t438uewBPmLLFy
95jA3di10J14+2Ym92ye54v7i3b3L8Xbytl2doWMCWZXvANo+Rz5QK+n037u
skqjn7tCcGXg/G9Vmr3dtYLrK/Ee785Ke5+nPZ72d49WGj3eryvjvs9LZVLU
771/oLlH772lgcwJ50xsBpFrhVcjuB+brubvBNpasUjo0bReLGPqhbcbon3b
WtSv2ZyJ9XJ3rjX93H0yeraTqG87M9K7fVvwvR70bsieLBbqGOdMeA+R65jN
mmxgfN4tQw8X69+8/DjqGPdkqfpVNm/CPdrJVNdOK+jVznH6r6IMZK/7MM6Y
8I1k+7ZdN7Wuk14slTXhPfxYhjKVMxlfPVgqa+Lt6rDXmvJZbc5kXPZe48Nr
1dyo5kVjb5za2o39HnvbErkT+4YJ13Kd36onqzNcb3cSvRj3YcijaF0/wKnt
mOXiHr/OdE+pNPq0M0JtPyvU96+H2n5xqO/fMDUec130cqjZ49MXRe+GvKf1
RXk3yd43474N71h5ewA6a7WZT9Rm+KQ6T9Vsp+Y6Fwq1GNlO7AAsE2rxSqYW
r1lrzlPVM90w1F/1SrcMdVjr7m6h9h5S871Kfj+F/Urbw6Xq3sY99CU7vUET
6+V4htmp9xjr47we7hpT+24QfJ9qYI6vmOrj4C12UtN+L/hDlz5irH/jOoY5
YpGfiDpW75H/x32b17PhtkysFqEOoQZp7Vj/f8Sv0zqxGdUKWyds5kfrBfeA
yPv8X9bnf89bxE7adDXfV1Q/kb1ErkNfxkxPkX/Jfd+4zvT0wttEXRxf2Z5e
e6HjKufTiY/qvXUwLnM+Rb6q9VRtTf4yZXzK1vpxmesp6/HiLoT6vOrx4hbE
zJX2XtHue6d2CrVnTO0UIr/jaYDcG3DcOx5SifvB2jPafhF+8NeDPrg46APt
GeEJqx/87aARMAdUrfD9oBduqjTzPvcEjfCTcawTeuX3cq9p/V5kcVCzR9Xi
byPgxinvCiKfi15y6VDHtZ/8aqjj3k75JqF270A95B6mfh8sOGoc1m/2apGv
WWHQ3w0s8m1t71p2T9C7P1T0Jp3n23q9atk8DXu0udlZ25t2s/cHTxY1M1Uv
H+2wX+2VD8s3jWL+q1cf0bfG6mOtBzWyrPda5LnG8i5cB7kGLtyjOqg98wYZ
tRBvOPCsE7WPd+s9vxTvi3q35NarNO+dcN+LmrdVpX1XD1kV9L3Irtq55xFO
jTsp1LnTCmode6R2Bqr17upQ864NNe96U/e8fOuXZe6Jm6mPDbS+L+TdyOP+
FrstuBOOdySwy+Lt1Bfdw+Oder6Jijppa6T6rivXmrNP9V3t7NP2vduFmrmn
YC+nZo7vmSe/haF11L7Fx96v3a/3audQzjw9vxd9rZdH9fraTmee3fSsqK03
jujd3DNWY1N506GsrWV70G726G2NHao5Z9mes5t9eltzu511as3dTLDlF/CO
GfvV9nbZspX4O+FlfGuu43b/BN51LLf0Zc+hsk+MeSZujmsdxc3x2E0z9YZx
vwbeMNdXra3oO61PzLki+7443zLDvfFeZ1Dtu032Tsxag+Mvf9rtDdpu75eV
vQnTy/tlX9TsKWpTjjc6LjKntq5YHzMna6pzyo2GMOsC/kfeBTfSbObFm1dy
P8f3wTXzol6m52PaemAzrLYuIPuybaXdt0xlXWK+pZd1ifVzNvPCPR2yLzH/
8v+XfUXcDea3Z7WO8U025HNwN/jPA342h++k874iaph352DyWuv9GftOBt9b
w510vrO2YugH0QdqDbO7izoH3TDUNK1nW5q+cIda00st6gnH5e6it7fovYGY
m4cdH/uMZW4uc14ot4ccF7uN3F/ancZu+8miW9Co5V6+tmxN75W324t9R3vr
INWDfhn3HeH/pvpQz/sdysytapGNqRdVncB7LHNW2jOv/GYj132+U2T7QL41
oHXe5pUOFRxZib9ZpfX83FDTbWZJa/qllfYdFc+j1bquGSbNL91WacwkUdN/
Umn1adWjfVLwdKKm62zyL5X22eQE1caN/depDua8tY5ezt4bncH0bXzXx2ZR
7W4IaiHXQdRA3uFHJtXWQeSCtBbCJ92X6mKRR6pzxnNqjVkj18iLa42543cF
1wtuq7XPHX8t+I3gxVrzHcYVHP8zVuNsBmjLUOO2CXVuO6p1uwzGs62oUV4/
yFkd1KLYHseZVJfOGR7f1YjtyX8vo67cTTWF+z1bFzrZe+daoHXgRcGfBX8R
vDKy2be9P6o4Y5rD4ykvcUzgcfD3FIG/0aeVyZTmeH+Wb5Vrlwl8q1z7VeLZ
FJ/i7vRSxKW8MxDLgKJfgm8GHtVbb/YNXO6ZsBuAGy5nVZrZT/RHnP+El2bz
nt4+3y8qzd7nt4LHKo0e6KnAm+BK8KTtefpDr6N9zrBEr5PLpdpPjAg8il7C
u3ti3ydXDsUNFOVPvtOc6iM2I77cLvAl8yQ4kvnxxMCNZwkuCFx4meAKwY8E
PxE8Qhz4C8GvBE/Vmr3CC4JXan6vwDy5EvlrazgcuQHx41bEicqHu5H2t7zI
uj2W72e97s15iuY7Vmvn5CQ4H3HHiHQ2IsWNuVkI9r+YE60+Bi++O6q7/D3m
K56mBR9OQnp2qsCJrGf57SbPw8rN3S9sdChrUPCi1Z+rOvpTvbBNxjbeTMH7
KMsbboxl5OAn4Q0lzBhS8wW+73topZkXUP2peXloT83MW0+JNSi4ExpUPSVv
T9rqUOhPzc6rBuX8PPtLD1ZaPSbVol4+rptsnM7sObOWunOvt6LsHtTCgTu9
HSi+HcU3ozSzxjpz28Cd0Jm7RnjzpFpTU1o9+fVaq6a8vNaqK7vNtMXePfVu
2vPcHZoTenN746kUvWHqcWlMb/Lc/MwCbs15H6WM5oxx7CMdzBQ60Z2Wb98d
5d8oztnVBcfmeAcp32CaMa1v4s2c4NX5Cri104wX+HXToEctx6Knt+9PQX+C
X73bgXwziDPHVn/aWxN2H/XCSqv+9HZSv1tpevO3BN78oeCuSuvukXIlZr4x
T/65wJ9/rDT7+Fcr7dr0LcEHgo8q+TqV+bRWS/fz8LVnIU4FnyLjBC3q7ZUi
44QbD/CztZfX+ax62pjPqh7VGa3ulh4qOEJwpOCYWrN/t3078yt0qnKratVv
Cq4L3NoLzWr3eXiPlft4zgAjy8TcuoPRreDXGK9aP9nr32O8ek5JbrW7p15/
z95x6hZDGb719l6ecvj1ucCxfyrJr7hJ10lvH+PY0QmP1tO04Fr2Vjvp81N8
u9yYuK9qda3q2S0EWwu2LeED8HuA7AfAC0CmxtsB4XtA6gnY96bsTVf2BU4P
vOz5Abzvwdr22sDNnrfK+x6ev2p9g6HY+yjjGYysNT0DvstT5BfAdwVPx+6o
x/b+re71/FXL18rVJ9f8HQ5o3m71rvUQOKdjZ4rrD/o3dVjnduIflM2L5ngJ
Odma2D2AMnsXud5CkQcb42iexXXiNzBXxzi6F7sSKa/By2DGtDD810518JYF
XGxnXHa2xbrY7uUVzbZSWUbsI3CGRbWxamLNrMBX4H183F0D51qf9raKv3eg
8yz1Z5+oNLwE9Wifcbg3lksZipkW/ATO99uZFjxZ9WOhgdVbUF8B+jc2z8JN
auXa7WutO+7Kt/Y+tXJtjh4G39rMf5kZlr3Bae9v2nwGZlesdTudWeVyai/m
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
0TxSeXOXSM/E755wz+Rl19Rb5b0X3ofGvUl+v8TLorCHaj1Tew8Cc0vLp9wv
pXoly6lf1hlmrC9STsdt9ZRHirwLMi68w2hzvN4eNm4Ec7YOnM6+KOd4lbfh
gYKzeY6pu43c72CGqfuOmGOi38EcU/sdnmPyDFP7HjvH1N7nyzLL5F7Iy8xs
UdDz9HqWaXueWK9T1gMdqtlmygeN7VeM6/lmqsdJ3Rf18jtD1dt4N5ly9/nR
5+TWVtvrDEWfk7ofnboTUKYmp/qebnuenUO/k1O7OTvK+y+cH+X6nXpTGndO
UzUc+2HeO9JPUP3mPgh1W/uhIq8zliNV7/PzSqNHUg+0EvqiEaE3GhP6o0lD
PZ8u1PRU/V5HsB7V8M0Emwu2Emwt2Fawq2BPwaGCI0PtPprqdiyTym+g8C1q
fhMaddq7n8K3onYPNZtrtc0l8W1qL4Nks0d66x8+pdZt9ii1dv+g1vAq76i1
+pWo3boHi54LuSPuux4PdfvZWp4/CW/yfcE/ak2Psk/qZKXe7lWiD0ONnlow
o2AuwUKChQVLUy22+dTUHRi764d6u0uosXtSnUWNPVhwuOAYp47m7BV5nmGZ
nu4yU0+vSdTPolzrzcYf9Gqm7QXLeIKolc+V8ABt78g1Mrc2fmpqYjWzBva6
x4z1l+gtZww1cFaqg3MK5qX6V6beDWUmlj2+/978DvVO+9CNBJuFeqc1Tuua
ztb4frZ9AwseG9eX31aaPlvqjvaLleaugue7vUu1BTdp7G1t+G2pmRr3i7j7
ip5xSao364Q+keuM9oqbCLagOoO+cQ/qFw9P9Ipnhn7x/GqjFsCHs/Mq9uGs
/wbf7YpQB7B/oJ4b/LabBDfXGp4b7mw/EPgf+VO7e4D+jesB+jj4cOzBaS/3
cq01i+r5cagN8OVQG7QuTCwYKZgq9GozJfq1RahXW6ZEv+bNoWLenu3FDgn9
F3ov7rv4Rli33h7XAa+n8uqB9lLeXKiI93PmQuD+WH+EG4g5/h/3Np9TT1M1
fU0vvL+ieczMhqO5T5mHepUFAl9zr1J0N6eMDxibt6xDXLwh9R6bUv+xZehB
vJmLeod7CPYaD33INdSLYN/e3smxvqKtIZ7PyB6j3YHN8Re5dvwv+ovjom/h
fsXLXcbmQzZTwXty8Bm1X/k/rzHuNXbS/wzl7kS3fdL49BxTvdMXZbeiF72V
rc2vhfo8rn3I3B4s9h7dF82D7LQnG1ceJDTA7kOoAXJuK+Mt0BwtgPulfIdH
99yxl5G6Qc/vfkALvFxp7makdtzVm9S7prFsps1tFPWTudpg/aAPNvwf1gin
1HxPU3XCRbXWPtZqBPiZ0AnqaaKfjfmaqZ16zmI+HvSCzZdwX6t6gfta7mk5
k6la4eOgEf4tmKDe7ntOTJphZNAM4yKrmasZuDfGrNL2xdAOqhv2Ggfawdvb
YO1QNpM5FHqhzL5Gyn8d3xnNIg2h+uGvgleNhnhD8NaXWEvE/ALOCrFfML40
RY6eiPkL1ltA1oi93lxdoVpiX8EB/59pCsw/4Suolngn6Il/BE3xedARnh89
str0pOEreNphrqrvQ1svoZf+85dNJ8Dv9rwE9rxvqTV873uCRvCypqoHrM/9
dK3VO7B3FnTmqT4Bzzu1/qtPAG9bNcCEZuY5gnyCofS5u637mJXuZmal8MFR
3z0vvBd13e5clJmblvHMh6q2l63rRR77UNZwr35r3f7Yqd0pz3581u2h8Pi/
CHW713MBnd3uTfX7cadfRr5HfXN45pizam9cDfVtolDbRlebuR3rlw91dkfr
AOacyKkq39/t9IMP1trnm9jHU8/4d7XWeSb8YnjE6PvgE79Ta826fFhr+sS6
b6DcXw39X01Qr7fv6U0mmK4ez7x43i3yK3gX0/ZfnGOJ8WiOt5rKnxTNE5nj
fp7oWzhH0k0GBPNAjyPsvZYZyCO0mt5mNPRbjb1/wd+n1dTs13n5iT3Htt6E
9O5U2zsmuAfpvVNub8PaPSbv+7b3St423/rnlaYXVgvfeSxPMV3QrzMFDat7
THMGLTuvYD7igqUFywtWEKwoWEWwRuAF64cpD2wTuABe2G7Vhh+mmvbYoGuP
D3ywHWlK3QFGlgIZiotrzdyc3uz6TtCIPwwa0e7yKmfE9nk5H8E88rTDJS/V
mpmI14lLbGbu41rrztIEgUNisyZ4Rzpzmk0we9CMrBU3ChrPZuHwNlpqHnSA
4ECj+Q6H5htefO/W2531eOdywRURHXet4DsFWs7bjc3xWh4s0GWPEnf9xvgs
ylkvGj2V44ewroKmqgiH9Y9qzWazDiqTd/B2nWLexTyB5xYY03qnu+iulNUr
nlZJeQybBi6EDsEtBuxoMp+9VGnO8/k9HO299eah3jnEXYV+4ivOgcX2LqcN
3IW7Csxfcwvmr7beWdD7CksFDluOdM2qQdusafQNcmMbO1y2r2A/wf6CA6r5
vbpmfW+oNW8P4OaAx01P1Npn4s85OufF0ONC6/yt1joL5+yWah3MxJmroHfg
cw8nnxtZ30kNZ80qmEMwL/W9C3bR924x2Mx08S0B6CVwG3gNeukQ41VzP8sZ
rqI+NMVj1xCXxXTVbcPT+/sPJngK2urxRB+Z4qcPIhyV8m1tDziiC45iTeZ5
rEX9mn13J5enWLt5c9bcvko13X6Bz8poO+/tEavv2KMEN9q3t2N6D1ovdvNb
Nd+/g2/p7a5zHsp6l5yfnbXayNDOHrTf3KT95g8cujjpvxWrxd7mltXO5p5l
dODVQQfeYLQg8kfwDJE7imlBnikiJ8vZI+ZX20u+XWvvJcGx4FbME5ljU/w6
R/AU2U8EtzKnxrh0o8H4HoWnHfd2+tEDnJngUQ7Hdqoli/i404xQkZ70eBk6
smhml+JnT0++Gbg6NlcDNzMv/1dPEjd3oy1jO/Qxj21O0pfzOrxtZ2Td6E9v
l96bcWGXgXkdfTl43Zt3gdv36XHPHnvLBdwND445++1K8+1wZFj4ppjl7pHV
Vn8O2pdnTqx5rdYdV/OnMnyNPTfMeG4LWlj5+oFa69u7NiNq/b4/kP7lnMcr
xNHvkM7lm1voyUfUm1mOycJMZ7ohmOlwHw9f8D9vThIX2922nHlNDvfmzGE6
2Vnohmetx5izpwBufSPwam6fnjP/yOHX3D0FvlECbi2rh8twamr+wP08vE3s
hpXRyKqLsTeAt3Rvp56fbyw+TXqWM/2pnbD3ybsEJ/KswvoCvHcMX5PvMTE3
Yj/M+gLKk3qvSb1Nvdmk/ib7AysQf6rPqT4BPAJv/rEV8aj6A/uX1L26R6Z3
nU4N3Il3cTE7B4fyrWPN1N1h9C7mJZy1/wVx6BO19rcJ2FeA3rX7wm/UWucn
PDdhjlXN++9a6wxl4sC1I0nvTm78hOmDpzCn8RS6ydDZ9wd2Nro3Noux/gLz
r83CxbTuOUHnxuY17Dl4nmmRzr2xBPeW8UnL5NN47pPi5U78CeZn5eZe7pF5
vkWMq1P5MNyt6PX+mJ1HWc4uynmp3t1fcIjgsKB9Y++p8j3dOyOal99NRdYq
dS8qNbd6K/C9l+NmH5gz3OD94Q73M+cr36uXoT7GXA6/K7d/NfD61wK3r+Hw
+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
N6eut/rxnAnke76aC+S7Z94cmHPlqwbO5Pmv+vM6/z1QcJTR3rjjsOegv3tn
edDz3k8gfwbc5unkmI8e4zdoZPBZbqY75YezLgZ3DaX3zXtz0Lb87mrqFg7f
hATvQMPCywbfqH7Fvhxn5vjGYyoTAz5hLmGfGvwBHXpM4I5e5mVslrpobske
iHevnO/tetoTvDUfaU/mKXurZlXiLL5XnnqHhbMzuwXu0tvlBxRoUPgf8D5y
NGivPRCbneG3YLy8n717wzfR2euABmW/g3eSWYPyvJO5dXi9eT8SfkfM51BO
nafevqOjXLpUvdXnUP5cS7C2oz2VU3eqt2Zp2Oc40OhPy7U2N7PzYOv9HLvz
HNvRgQY9uaT+9G5O5uatb454FkVv2DBX/2ZEOl9tMzFlPIxe+OWciymjOYuy
1jEP3ctYF+WrMc/M8TDK3EXzbkpwnSjKUsO7iOlN9i5OEJzUg7km3ozETBM3
yvBWpN2nmaHavp+p/G81K/Zp4EFgnwY3KIt2NdV3gN+t3oPOK/WmhM4scduX
fQbkJE+oNj1v+N2W53PmlWVnlbifA/3Lmtd7Z4f3KWO7lOwd2Dyk9avZq4aX
AA9h1nqrX42sCuvhpSKaeEXBKoJ160M358SMs+iOJfj7iMHmHXe+ZZmad3pz
zjLvMnc61+z0LuVQzzV5P7JK99q7nXF63BzzmWO+AOdNuplx2ts+3jsbKQ8A
2j2Hj48LfDw+Z5xeNp7nmsgmQtPzfqT3Zga/A6w8jpvCvBfp+cjqPaiXbP0H
9pLVg4jdpLS+RCq3eH6HujyWQ7RzScwk7RuNL9Tic0jcpEQ+Be9p2Bkkcznn
2sHj8DbUA+b5YixnuHS9NWu4Gulwe1c4NS+0s8LYLSF72/0ow8enFMwHi96A
LLPDc1uJOWA3vm1s7ofsuMe7RZyLG8GdzvfsTlBZHzZ2w72TWZ6d4XXqvW45
pv0msHolbye4jW87zk08Bu7iLB28h3WrzczFpoGvtgvac4egP6E97ZtpBwbu
slqU+cu7lc5alP3Ve2utOQhwDnxV+wa48ozd8+N3YHHDvL/enD2xh4qeX/Ui
en7MnLj3xzsSC5Tkn1WIf1Q/5vqpuxjusW/LWq5R79TqO+aR3Ld3rGf644Se
y+nBizxT+7ZOJ3vMHpewdvOyALm3K+Yc7b/1EPNOU++dpe5RsGfqzfE97/Q/
vqngVMGZ49hDtW/Ucu/sze7hmcbeqOUsMHuo3v4h/NM1q/4eCHJj2zg8hhn+
7tXmOzn7BR47KHCZzY9ZLWZ76zOrrTuIl1SbO4jYGxmqPUS+i8Q3kbwcMW4e
4YYj8+VHpidHP8630VSnDQ86DbuHypvYP5wpcCZ8UvueZKrPxtxplaDZbK+t
Pbad1XOvzX12zs4Ie6eY49sZvvVQ7c4h996d7h3GODvXS1XNl7MfkuuvFr0T
7vXoubuGb4/sbL/QvqXWzY5hyldN7ReWmeXHevfYvkhZf9XbLyyrK+3NCrtr
iB0SrTEnjucakzunsz5trN54szrsusdmddg54TclbD+vczm7U4KZ3BGROvJF
2Wcvmsl5bxbb94q9/h++L78zZN8W8u4D81671eI2a2y1OOtw1eDYb9e6Mr53
3HlWx/vtsXkd6/xu9tuLfIah2GfvdJ7HWeRe7bV7eYyiDEYvdtrLzPFie+12
nhfzLDrZaS8zz0vttXt9TMzLSO21q3+MOoCMGOZsuMm+ZLWZn+DchPVcdyU+
hs96cLXpV3h8fFK1NSthvYorqo187jerjYyu1fd3B27+seCXgkcFvxL8WvC4
4AnB08TdfxW8InhV8Kbg74J3BJV+0TyCiQQDgkHBGMEkgskEUwimEkwnmF+w
YH8zh4bMxOuBe6HtkYXA2/CcJ1MPZHriWrzhplyrszL1PXBbjvmWuXbFevtu
9/qCzYlvtzN8C12/m8O7qu/3qzfzEIcIDqv7uYgTBCcJThOcLjhTcFbg5XMC
N18suELwTcG3BNcST98iuEtwj+A+wY8E9wseFvxK8GvBU4KnBX8XvCd4XzA4
rMHjBw82M23IVbAPfDJxtvL1WYILBRcLLhdcRf5NbqYixss/FNxO/HwfcfSD
gocEDwt+KviZ4LeCx4a3c3OZHsD6OsrNfxH8VfCq4DXB34iv3xL8XfCe4H3B
PwQfCj4aUdwjKF9PaPqCIq4eKRitOTrBWMEkxN9TC6YVTC+Ya1QzW4fdRPAw
ZynmG92aoVg0cC/mc0sR/y4XOHhF9YcEKwm+JlhVsJpgdcEagrUEawvWEawv
2DD4SbhpyvuJvPvBmYntxrTP6ZRfdxPsTjy7l2Bvwb6C/QUHCA4UHCw4VHCY
4HDBEYKjBMcEbj5tbMNbho62XMz3oJDBhacMP2aHatOHgf8CLxmaGfm1GEdz
lo0184WCb5BmvkbwXcPTytH3Cn4UePongocEDwe+HhdcDU5WPka+wWYa4LHg
/gb8adzd4Fwav7UJv8W7+6ReC8/E1otwtMfPlpv3Dfxsc2vK04cGrlaOPjbw
86mGn5WXvy64MHDzpQ4/Xyf4bo942ssfx3yc0wNHn+3wtM1MeFnkGE/HOBre
TS5X25vTub671c/g6DLc/HHg4xy/pgwvpziZNXHKh/HybeBm6GJw8zI94Oc1
Hf/Fei+pd5k9LbxrD/n6lODbxDT1fMThsVt+uK1k82jYwca9zz2qcc9cOZvz
C+p1qL/xdcHF1eadpe8LfiC4RXB74OWfCX5RjetbezeP34a3NzxjfArfWm8Z
IePr6V3PX4C3oDvN7C0wj4JDrZ/AXsIxgStZ054SeFP5UueC8Be+XW/oTs70
MqfZDIL1DM4mvdnJ7rGdE96XoR+74SloyG73KZR/RgUNOJnRevY9ytgusOUY
T/ctQ7zCGs7embCckeKL7Y2mszxxKn3rb4fvnd9C45wA8k96y0HvOKC35nsN
nHXizKrVd3ynweMI5YaUL8qccVy1db52WjV9rwH88T3SeDdXmzpvfOm7e50M
Q2yvAbd87O2GD0Lvjpkc5xgwi7M3QdHH2zd6vX0w5TbOLag2RNaVMwsbCzYR
bErctrVgm3rDPy2rF1UnIhvLWlHzsdzTn1hv7enPqOf19L3UjJzDsLlc+LSH
Uc9/HPEtuDamI4s82WtK8PBtjqa8uwNdyXkPvRWRe8++U935SgntabMind6Y
4FrQiRbNzZ6xTo3VDswIWaN6tQQ6tVMPoSibxvrV063IAHv+gqdbO9Ws6i+c
YTwGb1/Cu/1p53E2q8a1h3MeR4Sac2qizsBXwG0G5NVQc241NSfl/Y5rH0Ez
GshmqG8AT5f1Le+wqa5VTQs9q/7AhoKN6nle7q71tJ/LfgHXAa8GeL7uOYH3
oYUt/3fD94caPuedCngCuX5AUXYjxd25fJ2z81bkyeb2+8qnRRmMMj5rrKdn
jxW3ETDfSvHkUPTy3MfzbeYiLuxF/65a/hzB+SU1PbIP0PR80581fYxPvbec
0OPjPadDq/6dG+vPgk/PrbZn464WfEdwR9X0+YEzoct7raX55gIyCB53srbm
3TJPX+usDPqaZ2W4f4Y7+5iNrWF4ddPArcyluwQuTe0IHxL48hjizFOIL20u
QX0D6OIibct+KbQtZlm8Y3Z2hpbNvYFc5v5xGa1q98zKeA7QpjH9mdp3KMoT
DA88OWnwIybP0JexGw/wKuYe7b+jlOJPaEz4FTG9mHoLBfN/ezsmxZfQjOBJ
1X+nE+/xjQP2DLybjvauATjH7rp+u9rwC9QnuC3wz53VxkzovmpjLnR/tdU3
sNz0jOBZwe8DT/0hcNXfBG8ETQc9N6K/4Tuq36j6i7WXcoP23DyHQU9dZk6+
T73VV4S2Qn/NO6iYyXCfrR7jGUFbnSs4T3B+vTGfYa2lM5rLBJfXm5pLOQU9
t2qvW+sN/XVvvam9Hqo3tddvBc/UG5zCfbLOxc8VnCe4dNDXTXZ+ckei3/2R
4H7iC2inXwh+Obz1vaKyPWsbN5COgob6YER3mgl8MKVgmqCb5hud3gv1tNAK
RgutLFglaCLWQjk9ntU1qmn2CbpmP9I2BwVtc1jQNOjrzgrf9dsJHYMcJ+5C
QcfgRjjvYuKNMm8XM+ZRwp/kO1CePxnTN5Z3wDXwIjUjpPkgzJ5vDTyjHHN3
4BjlF3iTDxDPPEJcU5ZjYrtT/Hbay0YrvZXQS7xHxVqJdwJibxPxnAU5Tp61
KA+qJ4nbsXZ+bW/IskepOko9StVQ7FNuUG/qKfUrt6g3fEq7c7VrvfnuJe/q
W5482nBkGX5kbrymQ36EPov5jocMtt4BQObo1MCn5xCX5niNZXWZx8Fl+Dd2
V7DXN9CZt4v4uozG6yQ7GvMZPa4vupvuaUFvZoXdBPYcrQ60XmOZupHaeSvS
jJh78b0BvjmIWsR7b1Yzlq1BZ3+B6s9uVIO47mjN8W4AYI82db/rAqpBqnX5
tgt2B7x++4tUP+ybQ7ZuxGqGl3vinVytHaua2qH3uaC/PZ/T6nHuza0ex5wr
loni7Krt2S8I9aJT3j/O9OVnZvbmnb5LlOL/Trm9rJ8JHd5Jb14278+5gaHk
5livDn62PXovOTfWqzP3Ku+iP0fuk3OemPlz5r7IJ7T3TGwuCFoaXMZ62vbt
qqsfDBz302r7LEZ19e+Ctv6T4HnBn6uNuYzOZHQW85lggv6mvh6VmMFo3gh+
IPp7zQnpPAX3o3SeglnKBoFftqg394+8vSPOvtvcu/bvOhc5ud7o3TETZ22K
+bjqUZ6RQJNiVgI9yrOSH9cb85KfC34peFzwRL19XnJwyBzx+2mcN0LWHX09
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
WQ+il5o1tZtmfQpPu87eQ91qc0KevxHbR4BeXXd0q1ZVnbpp0Krd6tSdHY26
V0SjevNn+Bxao04I2rSMLtV6dg1pU31vCvsI6uGqd4u7P6pZMWvSvM/t1Xa/
NnaDwnq0r5KGRQYTNQq3NCfsT+vX4eSJxLKY9iYF9gpmCZp2tv5WrwQ1SWuR
+iRf7W94JV8LtWj9UI827EFN0tqDt55Qd7je4K6mval5dr0116PzJ/gdKb2c
ukWBHCZuUjzh1JQXBC+G2vJqpJagjnwe6gjrZvY82O+Y1NSUaQXTC2YYwtpy
MtUUzMowl7/CqSFXR+qI6vUbTD1BHUH9QN3gWmH1e69rxHORGVrRToCtA32C
SqIWoFfAW6RluX62wPcpr2KBDN7HO9J2F2054vgi39r2FuxLlPEk1NuGr80Z
0d2pBym6IeTl9tl7KMPv2q9c2wNut7zucTr73OglcK/Cm6fBg/ByRdOG3gFZ
AJvp1F5hOcEKgZeVkzcbIl5lrQ5+vSuDU5VP+b4PexDQ5+pFvBZ4VL1jzPxV
l7OHrNocfFoNfDpx4NGRpNEnJR6dM4Pr2NO9jjgth8csh1kfApxVxEexef7n
I5ocNFRcs0CX/IGZl90JUo24eQ/44PAx7T6kar2TxjR122PVph+IPr4vaCf0
67h3yDqJ91Wmp29tjqCJ5nF00VD16HjDw/bBD5M2eSJ8T/r9PB/0CM9j8C29
WW+dx+Cb+iL3u5d0oD9Yd+C7jN3QYn3RjbawvmGZ3nHKxPfZac/n3eTmb7Kb
vs3e17Zz5m57L63N3zHf8NumD/Lq5dj+5o6Zfrcz0Lc7Z3+rT48a+dXQx6wi
WE2whmAtwTpUPzcKNXRbraOCIwRH9bf6Vfp94obEQ/XW2SnPTZ8N/cNz1Df8
ud6aC3mbvs0P6dv8NPQQ+D657vF3aveKJxFMJfgKfaNzhu8U3+gS4Vu7NON7
w3d2Pel8/tY8D56/s6e4BtL3hW/L6vCPw7f0qfmequHbQY2bsYRnovXN+z7W
db6PTahuqebdkr6VbQXbhW+CvwebuYBfjm/iJKNZTxecIThzTON3f0OBNkUW
njOt1huHL66e+EvVZq79A/K3P6+23q/kTCq+reH9rX6CrZHT9rd72TavxfuX
eDuH93QuqDczC3gXB1kF5NNR++x+vn5rXj6BvzXvO+McKXbq7a3HKyP1xupA
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
VUV8FPMV/iL4K2m5dwTvDve9308zZmoDgprRavCCJxFManTblKTbphzVzN4V
abH5BQuq5hIsQroMnrDqshUFKwV9tnLQaKm9D5ttZ+4r4j3WXuwP7y7YK+gv
9Yr3E+wvOJC0WNG+iN3nPD6TH6GvrH98oeCSoLPUS75C8E3SWleTF3Cr4Pax
DX6NzbvsrUGbgZi6v3XO5e2HLRE4dpnAs0W5X8y9tgpaaRviWnjCOwe+3Utw
gOCQ/tZ+nediuRx7leDawLPMscqv9wp+RDz7sOAXgl8KHhX8qr+xA8OaS7XW
C8StPPPy7kgxf/INQNZP9h4g+JP1FPModNUcCS5dzPDp8sSnqw5r7aW1h0b/
vCPxq/LqXsMa2YZ9A68eJjhccEzg11MMv14a4VW7P8/celvg1zuIX39kuPWh
0Et78zRwbC6fvkg8yv3x28Sn9naKnZlVHQ7N5U/tfacv6GWtJvT4czHqbZcO
/e2yhkeVQ+19Le5VrU7ccnTTK1Wu3D7ClbuannUv6ls9zrT3t9CDcv/J/Mjc
yL2nN1+7KPSil5h+1ONJ6M/3qq07tOBG7ik5e6zzsdhsDHfy+ObqKoEL1w5c
uG5/s1fcIvCgciBnjqE3d+9vas6h9CytjuR9P/s2KN+Zsm+1fVhvnfHb2T5r
R+Y/excE8yn2CzGrsn7h3MR51jPkDJflul74huhb7RtxvH/B2YAfEOeB6zyf
MLaL0XKr2tGPPJvqxAv0elzex0hxXq7HN+WoJuelbpcy11mOs/4da8NYRgC3
A2PzoG1L+nCs/byMgL0l6Gm9Tuc8twRth/75vQKNh10Kb8eR7wAwr3laT+f9
0HvINq3a355t2szw2naB29BP70wcpxoPcxnVepqDOqi/0VOr7kMeCr21p/fO
Ctx3TuC/8/sb2u+i/vwem3O0Ob12iiN1vs/3opGPYo0Izw1em+VHqw0nCRw5
GfHidMNafTarC6EJFzK8uETQhEsP8/vsVQNHbhT4ET03a8JdAldCGx5MmjDV
c186WJyhutnowdx+O6UJ226UlOixbc6VtaHXb/MdkyKuLNNjW60Y8w3nDzOP
XJ3IOayi3hs38tYzvBrbeUMGa4eIbmS9mNNne7211Y3eLD2mF7mfjmnFXnFt
bJcWfMueJffTyFKBZ9FPw6tUroVO3DfwZiw/en7gxdu64DTeBbNZJfS+lWHN
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
3sftjdwcmbb5Hcupg24=
      "]}, CompressedData["
1:eJzsvQmW7LiSJVYwwD2fvnR0tIXekpbQG9C+tEoFARuuDQDpEZG/srrEzBdO
goDBZhhG/o//+f/83/+z/cd//Mf/9f+O/2jXRc0uvu+tuGj3VObOJSB992J7
fVQgZj4WvoGMtJHPvC35ENn7bM8I+RzO3wclMonK28/Eecif0+lD8X8Pn4dF
SpKfsCTmIb6lnLgH8xtEPdW4g3DPj7s6voH8P+H6BO3fMoKfFKjUhaq3h3sr
SFVqRGSroY8s6labSiWuScq6+QChH1rVz+zzW7X2OrlG4UHLfyKioOmZTznk
KmtzPN25VNPMfpfXlGSvA6XDTVC3SSnFJ6D1fKeCvWnU+rerb/sg9/H3QEhE
+UHy3lhrAHQQ2AHMs0ju165navQRnF6kB4jBmD9n1I+y/ZCv91rUq8TPkfg7
2tVfKvSw3B2rPmBOcI/r3xkHKlX6Sfu/RW7rEXJ+j3C07JxQJmlChTU5PubU
74Q3H4YB37GuD73wJ6mHDPZ8CDseV4Bve0h1LHwQkWyVCHPslavCtAqWHtv5
pw7hPv+doT7PdJvxZC9VvlOmU7N0B//vuz6w0E/e/3uJ+MXrYRzwD7uy9e/b
kruQ8FnY89RVP0gqcUa9pHiTn4oovyi27wDcXgc7qZzpjS1s+HljjE8RfuQe
vwtq24D+1H38VslD27YHFlTrN/G5L75pC6qW6VGDdMOBHFjcXt+m+Jdac4F1
zPoM0oPWPufaO56n169wMCvKMZx9VOcp085d1h6tqDVYVchxUvAJEPJXim8Q
ThA5frWxse5+rhLdv9H65daRTpilQHyL7C53EWDXfAGw1aiI3IfCOXovoWui
5YeSPcM+OtbIbIRFJOSA8D4xqthF2iD0gK9FpfeyuGnb76v4Se4PwJVxVd28
RMn+sIX7t1/P8H1O1S4npG+U8LvV1tbzrPRzpdlEGmh+FPOjltj8gvlyNeKQ
kh9Knjlrggx7fSzU89COnEs+gHR/oW87uMhPfcWT1mNT2cFFpcf7SlOb8ojd
3/IhO+ado6Cywof8+G9yPaT6c1/1wwr/U66Nkj/J9o+9CjvYNyNlO/b9Gn+z
7ObN2Ysd3p2jwv0CjsoT7cPNYyBa+M+Y/0k79Att1eN2ocx42+xskNpHmvva
nwv4SYm6VFmI3M8e0LPqtrnkNYXnB4WevnkQ7Tyv4LtlNs3zg7glPeISrA3/
bmHc4HjA5nbRVGGe34yTHvS/ngrqSb6s8ZGFG9Fl3ufHo2P8wfUd/3j2X8+R
owLQh2DOLmxHHLUNESVwipnu3Ecs8KzsfZ4PBHNqkR8C2yOSSTuAV5Y8YHgq
/4uKvqnkQKJpCbk0zPOoju9h9lnuzx3ZTYnKOL/TKDzP+b145pjj25Z0X+iX
VfP3Nf3GpT5qrJ9w6l5sT0udr70Wnp4rLf6E3L/l+kkt/x4MfwGF3UzEY5v8
MQYfFnhi3/dO8TvyKSLy9vnkwca1nwz9I0uIBepctan/ipltPUB8kYKHnD0H
LjUvIHU7V7hLiWVurxLE45bzm57hcbFDRny1HS3LOv69IPQ2zzkCeNJe1XXu
FWobVfkX5w7PAyB3tG/QdMk3wxnp9c3MRpF/dz3VtDO9H0LbEPvEl9wo0neu
TwOjylAQ9axGNZQEB5Rtp3dP2kOXY8uuygg/5cTPSx6vR/rwaxdVP3WzQ+X7
jNiNkYaHX2DZdxjzxDd4SYTlUjud+GblTmNvVPbj+n7hunGtP8Sjw193Fxcs
PXg8392AOXinr7xU3JeJ6SE8fZL1bHNqQlRlLh9pc5dvT9FGuVoG7KL79EJh
IkcqV/ALxSrsqchLZaoTR3lbL0b/eC9p/bICUwHY11y1eN+ro20YuLtij6Nm
ry3qfwxo0/rsdH+TlJ8PTVE9rbdPKIm5Y+p82Kjuw3xUvS5dyLo9rUtLhpbf
BiQI85ZeIzzuVaTk90bCwHAq7uC2YzH/1D9rxG7N6oabNwW2D594tlN1+9oO
WXcirRm3Y2ei+zOzPOevncxnsv3gOlXx4yofAPibyPrp9bDxu2upzm+e8vsZ
j865nvP5vr3dvnrKjuc5qmw/Y9OjbE+Oo/nQafwAm29cGy/6D7W2f/z1e6r1
zSZ6HwA9efq86vP1nbYXNLJQzmhw3/K/D3DaYb6P9TZp+Uihc5kYzxa1FHFB
xarUb01N+APjv81nsHvO/uQ6OO37FiY8F1M/D1qpUqaHCZMj9Co9bvX7AND9
y2dX5vIDvfxJvQ8N82mWTakfRjzFmMh31kommFQ/UcH34+PG8KqLXD0eBhV5
Kui0G6KgJxjEAqeE583O3xaJ3AD+oN7HWR9k7Cmjuw9bUQP0mHI8XCwk7PcE
3rV+4tt68zd4pF9USUeUAxVIdzVWMUKB/qkFJc+UTzK7FoF2uYrr3LjmmvdW
T7XEPAJxAP6Mzw9z3ZV7aOiHLdR/mwM4VARhzD05BzjfrP45tO/VdfbOdNLA
76DwIBQos2ztpsp6suNY/kFj9Mn1xL7PhZ6+OgVGn8jsk+sghb/PND9pUu8t
5Ck0A7aJgwLc/ePtdTzZwt/6lvneUsr3dY54ACDVL44eY68f3/Jou2sbM/yO
NZ9CIcKpO7IIrcRhE/OEbv2Dk2F3aD5rUYsgLqncbUKu7QOXfEToqZf8r3V9
TMk/g/SiCSmz/DOw3V81fn+bUD4A/GmMFI556vlV+XRv0X3/0roN9TqQeBVv
Im5UpuJt7r4FYosMRePzO5rpO5hUJP8U/u8Vvff4z+FV9r9vu55U/mmBj2OI
M7xdKPy00sdZH6Q/a64PJT56vAUfXQrEOj3fhaePsmik9NF+jOigSvsvE06+
rUjwq2AenGJ3SC6d9w2kEzSQlndwVOa6sZHj61p/ovZHpUvWUsXjFbL7Ha6U
AB9NkjbOOj+W176eaNJ33iiXvrfQROZ/amT1lOdbThQCv4f2pAW7b0YeiOTw
fk/Rw5Ziv349Kus/8fpBM57ak3PxXudx+e/3sEGmJwx9cjzcI+s8FEjxcdnY
nVqEHlIN62rhdTsw8KlTu49aXKObsY3SpN1jTsjLUt0DiJcKxNNV+c6aOmpJ
DIXCBXgbhu5rgJsi04FPucgm7ajSRZ3bnqSbaOw+Pz3NIkGUT3rYnD3d5lKg
/eDpQcD4j79Sw/qf0448CgLOxW7yPYjXHpOewX1S9IPkJyV2wcKj8OmQd49E
HFo+IB+3X/2GdgUYN+NT34r4wru9Rt62c4+bzCLweYBgcd22IjuoT9qG7xWj
3BhRfp9e7Jh4r/HnJZylRB7UQHEK+LxKsqj5+6VuTFTnj3aRUerLZ5dAVnFU
xppLO2TKtGeK80Ge79WRdeTQ8m1rLxVkb8FbSBL+OC7Xe6Ndjd1lqTZNZpWv
0IvfnKCHt7MFIBvfKu6sAGhaupWE2EVp5LMj2EgLUNq3r9yDH5jzIE5XwrKF
Km5Sd9t8/5e/fp3GI/82EQmo8eM6nuWfOZNT3z6jbnszCdodNXPbBuwezo3G
/tUBHrkkig+W4cyPgNlDe7gVx4MM4IOeFrqt5HuN27/12iCUubHNf0PSSVk/
wej72X31tHnpA6WK/q32/4791YRQ2XZDbLGpvGhdt0gsa02eR98+cja3tRwf
7q6d1OJjdkO7pxLS6emfc/37Teh5/n23/wnWTzF5kK+0Kz93Z1ZEKeemnqLi
Gw/6+cunDfpH1/OSZc6NYez49hMkqkzJKX1ewbZF+/uvH2jRT2v6qIoPm9Lv
Xf+VoqS/m52bTGHkQI3saSO4Mge/V4L/CGIlKLOqvc+6C3xCpl3wUCKAdp2B
+5R7D7AJwbb5H1x/gyozyGJm20mUUpajtG8GyN3jo1nlePUkkzLGxEMu5bYX
ac9P1Crm4+gmR3F9V5B/uy97ZDnPgfwszy8W/Rnj7ko/IvgUTvxSJLjJfeyI
/DCUKRWmBviwhl8M2z+/jl7tQTB7KvEgnry5fhZCtLJbTqG1Kx8+jhceZ94U
If+GUnoE8yQT5PmbHGmwN/9YGeN/tavukdfx3BbEZ0z4NH+rNBBVfnvydVXg
SV2bRNhil5Hw0dTKz6aoc17FZvpN0RKVYB/ZU/ugDjbO7GBswq3dRe71E196
bkO2xn++SibKnSVRTsogdg79wI5cNlBViG0j1LROd1ftFmacBi5r2WG/w6qu
uD5ct3DAkETVvX9oiQ0n0j/J2rbXDZscLYVC3QBy5eqaqcixwbfwfYfrlPvw
7q4G72Zjib3Lqq+uvlQXaq7ziDrZs+VlwNViy3S2i6Tt8SjXbFa1bLc3PshS
+mb99W+pfAhgyucbBXqmX3fvCwMPj9wsFuW35vGPujJyT1L+/+t/yete0B+q
wkfZz5l/pIR/lwYfQroH5v8IqzLTD+YS2/NW9UEmwt0nfZLdOTbTUc0uvr1s
O7TFOrZNG8S1CbSRy492rT/Y1y7o+ZviHTxas0EuUt2cHLoH8N3rs6CpKvUY
wins/G/ecNy4gJR6YtdHrfIp89Ow5Kc4o15VvYscWkGKSwxqGXWMHj59Fj/u
3lZ35VdEKL/dWNjtN0g+NqPPzP+D0Hl5cvLpeLNl+ObFp/mPCpTi8FobaPdA
qcwH3fF8FZZ2ZxRZK0pz/YfuXYbribv6yP/d6/SjaOXx9dwWP/jw43eR+YWC
d4VujL7dKd2ND/sM5285vMf+vXJiH/uwn3g6ua12NxzOpNMg0rIRZiLI9Bha
xj9cMhpVN22V3OEWlyeUld1L+sFBRzsw3zCUHzrWonjFrGM9TyORj4o9yRCF
9Nit/cxv31z/1qbusQ/591zfVIVfBEG7XFTrdZ29DGLucTrl9jNbflugx0/H
IWrHXG4x807sEULPMvzby1D1A+zJN6UrL4RSZrPGaUgK5kOtGXX6s0yhCGSL
l2/nW3Pdrdz8Fxqk8tdabk9z//uvG9f0n4+gXGcj/i1Iv1fkbwTzt1T4OW7f
iq6/D+5h6Tq+LMLLb6DwwyKHfV5tg/imvvp7v79wVTi5trtooj+NblKGD0s4
VKpWPutCsQLBLvsI9obKZ2g9oOuDAg815Rlmv1g6Zjjg+Wk4f1NtZsLeYsox
hkPbducfbprF34zn7hnjWf6p+T+V0Y/csYuqyd9BbGeREPmYG4CPUk7lY4je
TqOsI70AhMiOzTHc+3ohmVeOmX0wZDsTO802xmsfguZVao+zOvLHjtyIyfbN
IWt1953rlyOIfZGj0lehw11dn/mq+OLgnZIjunE16TVtn9LLM+SaHQG/Yu88
xVef5fHrg62oG3M8kBUPSYtUhOfnYFv5JMFDOg+7sJHjFryHSzHu5P+hhXwS
ZpxmQR+9efQ+d6vlxuuE4+BO6W++nn7XjH9coHydZY2YFYZerbbe0fQEjw+z
PSpR6GGJ7QnIGR9yCpdM57se+LzAORf7bpPz3aty/NlLfqtWy9HT3xaXK52e
Pnv0w1xua2jaJ1pdxYKueORtQcMp6dTU3ynlXcLt+w8qmJtfhtzNX11kLe1k
h7zrGjFBlsYVi+V2WByjUH28/vKYKVnVcPsRtBoT+Lu7+8m1gfIZ8I9R2atf
lRB7p5vH7DKofuuSitb0FsHsNHe+v37+sFF+ADz+Hu5SXOGrqCu7bjeRqXdi
nuUB+3T8YXreZQ55Iav0VUn/ro0g85f0r7wnDy1xJCnOhsOxdd49UQth7+bJ
v7l5bO7N5uH+7Z0ZJos5Gdz946e5j05y6zNRU5wUQrFSz+lE4cFN79/cZ7/z
F7sVbpuikcDuH9FsI5TiXckJeLsh/KhY3vtFCIdYqvgY9R40lYTVzz7x/BYc
AaU3W0k5SCfx3xnp/fUp/CKxIGmLxR16O9jx91ZISacimYfnz2CXaV60FHL8
4O2ZgR9JPw323ID6BHiSV3qOIriuooOjKlV2fm6Hge7dpU9+0iZ9amK3Dad7
eRB1OFcj3j5Qy8d4pMwf2sTHPNpWnO9+DbaD9kDfbyt+1HJ8M/vepZ6LwdvY
yd95frKC+He92i4aOs/FnFfxfxi97WVVLpDLL1NDlcuRy1grX/JhhRWQy0z+
bXh8Dnlzlc6juq3o0dvdN4Yk0wmXQzP6q9kLlSDTaypym1SdJIjfxbh5/omR
LVmRgLvXn/LVrEhQlM+nY6IRgmU3Tabc+WXoHlC8ys/aJ2JqUXifYTl6KOlU
2gPq2/DccaAnZLyZ3CrK4diGUoM2VrhXtmfW+Hk79XslRExOLbL7C2qraeRS
irA+n+rlIHoLqXKYLRG+2Wl/MLmIT8IvvIgJm0jK4ZEAnN/W9ZfXXbYI9dY2
H0Lv+LOdzihmCajOUc+G7Or3w3l3kyDOxZyyPs8ZrpMneLzJ8P59tLSjMI/P
jzOHtqBqDGNqtlQDQpiUU4qnnPlw3TvXGys7P3+W+/Byz9Anr59Bvsn45Pow
P2XMt7C2jU32h4/Je5QBMpV+O6KRn24rvcdhz5zYnWJ3aRhH2+9hOlJwzYOs
BzowvXCfli++PNtXUd9B0z/Vzm9dJ0/dW45Oesssrx57lNk+3zZj9jZR3vjM
rw1Y8LvxRZxhSCvBtPsSmQBOqNpdoyUxB9QZ6olwzsa2VYqAa8pcCLrge3YB
fZf1sI3MQXHhS5RoJudmxepORdKwS3jhXlYc3fBtq5u3uJ2E4fHqJba5SID4
AKNNWn79xBE+zvHMy5VK90k1NegshDtQz1orNeM8MxmzlW+OgqsSTzaVdO3E
wqOEDhp6A+buOdSzaTTu63ngBKrUZ17z8YVevGoAP3C7D27vzLLAqYJS1P+B
FD8u0LA9jtfWMHaAP3l7m6tQRP+mTP3MRT3J9m1F/LkGA4ge5BSdJhxycdYu
zXjrDHrNy9Bs50wbu4IeAMHPpr1+yLztKX23rfLj1w9dWZXnidPLaXfwT63Z
qd5vZ6b0N7yKmIlXSZIleFnCyLqQ9boM4B1P0CPujMaNBdcdD8qlHjw/2EWx
of42+XHesEQXHbnf4FKjVph7nT3m/gi4x4jC+9AJiM1U0iiXBcfjCVNc10ir
k39uVkSr65ihYxJmNn3qhMkChBxa/EuuMN7piUeb3203tuWrWx7ou+duPEWa
No8f5t5eD8zgv9t1oP0BWx5xrswUzSvmfyyToBp1nTvNeQa/zq8T19tqj/V8
gESVddvKlCXQeT2v+CigwiHVyAVEzUMe1u+WTL9tjI7tJG3fFAlPM9ck5+tI
zKZ4QRe7VFA8Y1T3q2scs/y6A1xVH2/vF/I7sdMqQYAItyi9uabGST1ogQ22
kgfgmkp+B3Cbg2FPfeXpkqQ3z4ojqzzx5PgD65TIZ/FJ8e3J9WmZvQn7J/nd
9UUw/PgM4iHrA+WNb/d1hwF0VSqv3YFrvU52esUZafMqSqFHMPoiYGzv1HpQ
2GYSnIRKHTQO3/ja3RX7nBRTizJe5NVbb9bep50lugF6zBZE+QSmFumUyt+r
QrKyfnr5OHd3SUGNUcmsEI5DEIg+x+D383l9+xDnIAsR717eeIYq4R9yBf2m
6l35eEfxnYf7NH+VJSlPzKXuJZJXqt1dhdV1ypJIfEDjT+A/BrsL62omflj9
AX5Z6gPL+KYRlWSp4j9g1yeV+MYsvPlE64vsWwv07c9Kov3ThqLSEsr7w82u
8EFbtm9Snm0DuIXxS373Y6J+Xs1nL3+jxPeo+aiVuK/jLoOEBM48sJAOku0R
I4gCH66W8D3IqAJZ+32Uo9ZsI3jWrUsoZhfiblMvKA8dI1IUlpB4XllOGygN
yk6e+u6wJA8q401xlMduk6S2NPi3xVA5v1AkuqNeheLZmek0SBmVfUFDKmNV
LIypRP6By/VXCayCHMqnWTgKqTtLpuLd3fUgt9F5R3F6vZ85eTK3geqzy+wz
fgY16wcq9i9PmZQIheRkV7mMm1TZ7aVSLBzBG3veX09GPZ9DiznLMs9U+Kke
/iDzgxKfGdq2MFWJ36xqw769wL5JQ2UJvu6Sqg2pu2QqbmHmTQ0OChUDvA6j
TVaXM2R8DBK8HpVU5/AH8+nQcSpnye5dZLUIgGLGfYNjo8fsqmW1qhtIfgar
QDulB2ltJJ90aK9BpUs+YFI7nU3BrTO6deS76+RezoxM7LnpHP/IOZ0hPfSR
dHys1CCa2cZ35/syZ1QabzKm8wFeXDJguWOOkCvke5x1t768GDetttjeE35K
jZffz7FZD5ZV72SGn+W21IMfeaDcxyx35Z8Yz94tBH9M+c3H9f7AQLj6u2np
6JmPuO3uAX71rnAlHziJssDm+sT73TpzledWVX9c2S9kLopUzVjZ4p6bYZ+Y
/FOaWo43d/UUj/VVKnvIkd0qpwzNsXXmkRDveuFmi0htRWcHeHPt/PaJuSfv
9FvXLTjLUG6TeozOBxXh49aV3DD0XHhb/pe5mwEn1knCg4GhHejQJrhvE3zk
x4sXP2LIdziL+cL5Ay0OkHwXl79PzK0ezdmsgyB8Cge51CXy01NZlc7/Ufab
txUCp+3EH/L+sdJ+93IT275R+RhWcS5G+b7wPvnwGfdUuauTSv+G+zzw/s4l
PQB2LFk8bpUrV6SP5gmHf8ThkVTKQzzIbHfdMf8pnO9f9y3do8qfe4Eq+UEr
ViV+J6bcXUmMN2fKfBd6SnvG6mOuelv6nh0lNoYOioViDVV8crrqbAlIjEz2
9wXbvu1EPrYzXdxrSYfvlp4r3AZ6N/4gWw3lTC1wJUN2HOdMXVPCuYU3+O2S
VwIrDzOqVxl31w0NH1wnFh7J2anqBzXe2MB1c+NeemvJMf3A3T1qlm6ZTsXr
b3LrY+Z+enm8ErbXzbDbXblKDlvKIwh5IKklnxtaoLhuNuoBmZ6a5M21yLfv
njg/8DvieYbpTU0UuVr+fqNJeJTR+bVrnN+5uNG2rUJo5gK+oGTS9JYDpjv8
th7Ht+KuDRtFJb6e6kCqO32ILbLcHH3XuZlx5lnP4B1V6NM2hKqfBLtuQGrx
hl9eK4P2HeZfH18HrxYRLd3bp+Z98FslnBt+fFTZPscZijO9h9MKG/jZvfgb
il1Bfb1Mu25ictr9FxBKHDbvq4RQuN9X5Bu/bM/R0veVP/IJZcntq5SnxvZR
HQe+7lnKxlzjmk+S3iFxp52PtbcnBdq0iCXlm8pi3rMzT4x80JOO5nSu4HEt
oYgfNP5ZB9+AHmWzk+0jD/adQlWme4V+oPKafsp7p0nHip2x6I+m3vmD7ftb
tm2w/l7r9bjuRz5+kxyt8NG3HY+qcdeqnFr7Q30JbEh4COpHrXd8EXF60B5v
leBRi50Q+6BMlf3bivmRA9m4H1K5ViI9LmCaqR6skXb9f6f2J3Ut9XPrmXbX
Z/Z65/oPOe9jgnhXUnVo7vdq7W6rmmJascL9kfeqIr1vKOs3XM8G0uHdM9W6
4+rH16k2gJs4+UgQ+2gdbilpQlz4U41u/ITm+ipI+9BBPnl/zvrQZpqPODbg
j9zfJZ3b6NAsFR8p2iJ7X/UzbB69K/F41FzZyzTJtStH/u0jy3Dv44CXYaoi
NNw/49qnZnLjyL/fip0E8hxwBvhM8Z6Bz7J/5gv1LoUcv+ilzlqbfWhVsNCw
79cK47keh9jBrXuoRwziy0eubJe8p+GGH6JiT5j1M0k/2qJ/V2OkJgdncvvJ
0EPhPrceNf+6dopvPeJrVBqmNlqgBLNTfHlEeecIikODEjyE4bHDYfSb+t3C
OdIUeaYwTNhXDkflHY0pR6XBvUVELAdz/GbgMsjRK1iBQo32FolYxbVVjWjI
XZxJ2tTgvEWgyE+AOodiQuk1WCfBgDwlll24iaZcP91w3wuWMMvmbVB/tOVV
3wt0CsuSyxu1zsG30+4qPdqoiVchZdFORSnkC8loX1t3nv2IPMG0nR4/UM0o
BkQK3a4wULLyXHo29lxVfF2wWkkPglA9ptLuKBYvWFRQBCkJaoVcrDc5mG2f
aVttUVEJozKcmJG8rS37aw4t9TDXH1SWGGOkqHw9UUuO+7xAVj4zO5Q9B9XW
VAc6W8wijITUdGZl0DQkugX3DsIkXzajt3+E+gKJhBpJHR52dRW26B63nsUq
NjQ2xDxeQ70zI22pT9oadLXE+xiMlTze5tqgI7hUI6Kl0RdcLXYMpA8O7B1G
jVK2ZKoSffUn1u3FkZ2aM4wI2TglWmTvRshE++0UFTrRER3Rv+XoTtinajYu
1B8Ym3Aq2J6sC12JaEfacOC10Dz0IWcsEK+DY0py37ETh3u8Mh4V+qztZ108
vPMcrxlxDzz7S3ux0XzlVx5zJ9N9QOiuL+l3MuTaqciXkK0SH3C+yJIOwXDZ
qCas+8xFk7BHFF9QMVqCvfRb11kx0Ov4I++bnEROaJuEHahnmXflPSKPZNui
HjmOENw5kOd2ztVSaO6mcvAUG5Af+pBUNbjmwrPfT1TsJe193QalCp2yB3mq
eVvdxhb1pgJBsOgABOzEGszWk55lFWkoZR5h1kUddRutUDSco6fwLpY9Sboi
gII5UfOMcgeIVABr4ZTVu2qynyXJVfNtp3+6f4P/FPpf3W98pHuOe/ULDBKM
k5MFJ2C9g7jpX8Y3DJDzSR4gyakC5IC5otkMC8KtjhzoJETiW1Ajyi+36O+1
fpcDgTrENdZOn3OvrqRKDtmZUIrwKI6z8iOjK7s9A6o9XKWbeWOaK6JPlZXY
kuQELp6q4pjsjtt3NTp55Sp3Jk2ZwFA1OqqDqDIuimmtWrFYmuStitr7UrIe
w5p4j+WmBLjI4qVDNeRA6YcSwV+VSr3yaHta9L+Otl3iu6Hw+LpSoRp3U9sk
kuy1vHbs7dhraHIDO5ktoIXifWP9yHWXJv0hR2I7lVK2+168zNXD27ugrjIB
HaVMKDxwmtqnjBwEHdCUox4acgdf9GTgzzCp+J6zbhmcX4AVU85QbOPguzzE
VC4434RHG2TmJRHGcI+uQHLdHsXcTqQKS7fTWtJPDXcEILmEdqefJY32tVW+
CWdBJyqPYwQxV6w+Qo4tdoQUOETAzjpTrYtM+QOD49+dO4vJiaV1LcfAEks6
eCznJOXaYR8nviLO8LO3CUuuNKcXadUFHyzCdiNMRlXAKuwrD3ss1CLBddYK
4hPqnmR7AKcylYy203DPieDwyFK3Vrh1ykWlN3n0Gcy+h5xuVQGke/0D5+eX
FrgiO47eHv+QlT175fLFLgWdtWugHJ83Dw5qUfXGMo6vP1Hk0FyYLlGRegRl
0xP1GFB6rNVwh+jZgm4M5YTKLeueVHwP4AC5nL5IT0eCqPrZwC8tbwPxEdfv
rs+YuvfeeF8I/KYaVLePxVzA3/rrR9bi3x59TvEu3LjHG2O6tbVs8EXCHkv3
pl4wdro2A1eGFGG+yJDvyHVT2w1qTtIHWwEMa6gblGu/X8pmAyk/bhq8T67a
lZwQqrF6hgHwddOmbFcoVJWmDPcRwA5O8fzMVVLDOCYB2DT3J7NojtHrb8dY
Ce9HKFnieHK456s2hOgSngF86GJSQsXWvcd8WOUu622J/ijXMUMh+52anF1Q
leog9YaR3xN21D3Sx5ZxOCbpTNozY9sMAt0X2xV9Cgnf9irx22B3wvnIpW8G
/5vyPeqXKMuuTUme3ue8noaVcRngmcgNKLqHoRVR1I5s2m5pwlGTSIlY//xg
1GaRc0rp5BgXVkYEzQ3IxRZMiMg0UriL2JRe8Ga9cSltE4prdUd4Lir0wlVJ
EPnURFV2HRv1JmvRaqGUjmcjRPV6UjAc04BfALRV5wd9kg0qDlmHgxe99pRl
OSCNgMKsb0QpLmOxur1JkOnUqPwm5Qfyo0QUWIYwerK/SKk9ZyDR0UQwjYzF
ZsjU/Jg0xBBUv0CQ6zdXiOtz/cQtjKu3yEFEtajyYPkJWrHxTz1R98Zm8hk0
x+svzrwaC5u6lrRdFgQ+t4vC4FBvUCqc2LB1/+it0lINTQ+JyQhVjOAY7HFT
ULNehqho9GyCTl2j52xVPalSZxP5vjAZ/6YOZIJ/K5A5e6ZUJTakwsZQLvsZ
wc44mNwYISH1VgkwiIA6qknKhbYFlYLjQ+6STUeTp9oKden6x00dtaNpGz5l
ROM79+znu5eLIPh+q/HdsCacsqXX1OS3JUz7tatcXaakmn3XmSxHRV0hVUHD
fiK7j0GURyLqN2KForR2wemgl6TMLrKu02yIPZ37RQSByAVLdBM9O/ilXZAE
ellyIKRafVoY+Mr6QfIXO4Zplca86dC2eeWLlEZ8UV2BggioiSTkrmBlLJdr
o5GKIdny41ctOEo361CryuJDataj0pLJDlAJVlMDN1WmpAB1QZGxyzkMFUai
skWKfw7Gt5VzXNix1RTEAW2UCNOJ49nYnSGgJwMOipNfA9rZxUDrNgyKn9SD
WLykSfYwhGZueDMotD1yZJbpiwuEtcZZ+oCJ9XW7WDK2j65bSXFP5oB7cRfO
isIiwz2jk9HvrqSNATqlJAK3rrjVVnr5h+pFoaAUXkPDBHrtzX+jh5zodp37
Zk4rSktQWMI110hXArXImLaRh5O9po7YKK+slOv2GifWJ+QVaBKpCeQKAubO
RpZ36qH7xjV2eCb/Vj0I+L4uWAcPMkGhjWnV0JvDcMoQpLk9NguGWhAtUDR8
AjqBlNk39OgNKgtBgYQkeJb/C7VoBS5AzSqVFD/A9+keAdPwhHyk0tfhCJjF
h2UeCSCO8kCN5OnzoHHhAUiPYjAAtxG+0lwQiHmjArp89RpGKgRzkTMiHkC/
X0qxM0DAEJtgoEYTMKcm2HZ9BzguLrOyHZMV71bPBVGrnM8y2Jol86oW3RC/
ITDh2HRFkNdQl7yzLMaNDQb1GifTSbLhY7XI7Bpasz6dc3DmTB85hU00kGC4
sr5/ub0UrUJGTEBzqDnJmNpoJxoMwQCp9wW7BrY4GkMbphmaAxXGurT42By2
QGnkkstJUEiFDYS8ozxYi0THUqUL3qjekSIF+GcWxP2r859hoZbZI2bUvNal
yteLHtsAVkyyD96TRr+uMbamNIomXxiRrmsyvZwPi46vzqDgyN+wufhxEH7V
k2OWn+5SQocqBgJ1crLSo9EV67NK3aPDUwUnGCeiB7pVGg6Q4xiccegbOava
2CN5ZQWgtfH61n3D8xqE1umocAUygb1wfdWrqRKOku4Nyzlbzz8GkLCV+Lao
O5PXyn0libUeylZM+cdw9ybifYi8G0bDfFw/NvcEtRPY+TIssS6bCxtWzxZ7
25UZ6Xdc1BTPqaxtmEKQni4qRFejaPVXH90dBXSiFOZg+FdAzuKiQHTiB8Gd
+BmfWfJ2zxRqMJZOmsdA09UIxwV5dqAgxlCU3rTQ6pupUWqTNEduSoUHnlxU
7rSRF3KQdSk5pTN/NPsgRTbU7dSIguW7247F/V2pcwF1B1rGnB2JfJ8UWW98
YJqVixtzcpnJN/gzuYcQV/pyoFsEGxsNv6E1JIsCt7DhAfLhukIALDoN3Lge
oeef+hqcnShKAUAIvs64XNdv3qB0CYBGKqKql/45DX17U/CycwBq2YqD8BFR
u/qddTA7Gh7MdmV5Y1e9zYRQ5krzk4guPFLDTmZEaO4BYu0CCf6ec+eSDfTA
l9n5G2rGQfENmqfYeyJE6QvifkfyHuSr9OnZgKc66wRPp7+K16lfThn+rGEX
XYe6jbhCz1KraLYWS5e9Iwo6tX0jRGAqlBqpv+B4Bw/OhJx9kqVSLBcKpeMg
1q33PVAr+XGUlUTxS5RO6jw40HNvlJrjb4iEoP5WhRvoHzxYrIiOWe1VHYYZ
HvA3I5K8GY1o2BE83FFYVqVsWQB6emHypQ7KSCtvmAmyxAVzrWBVgLYgy16H
LqlCUr6QuQ+fSf0k5zC4UhK+NBmZqetWvKLA1I7SXfiCrkF8fQFQHuCwUJOi
CArih8mFaZ8RQDB7Md7sNq78rmOglCatogFj8MI5TNkMrAW3NrqsukwVsDH2
4CKEw4NwQLJrNsDoyoNil/Shkcgq5rHG8B6DlRetQfPgHpCtErnYopIyDgq6
yzWmQpaXMHPvQlYVj7IGDwEKtV6yvQoHtEkCguvPq4VCGiwQ5Ie3YfCj0cvl
nYzLVCu+pNTPBDeYrQJ3ZGJGH1cgvQvqiIxXP2Wz0vKlVs8tQifmfmBa2EQG
ZbXOS7ksfMg8IFMV+00MiqVUdiOUMyZFSxJ16SpID46FyIOyYPzGgsYGVzkD
kqUjRC7ucFqpA4GzAhzIcZrsKzC5BqQp3YDhGgSwAOef0bw8FE8V9RKWY4FM
SoASO5J40SbBmWcRl+5DKURYJEYYi+XDoViTadXnulfLSyPvjY7uoVjlqvhg
T7BVT3jsivqZQGUc6VxUFqPZLypD2BOoGcYKwDGWpvRXEZjseLNehGyvhct7
ssvY1FCURmtgkPgKeek4hrnUIaEZJVUTyQxqmN/nxTqA7W7IqxCJYAhmX6l6
GTJOt2AIbWQNStrQ9U1FKwTpqjRydCBIelPWQYUmVRdTD2fA4pe+/O1lGV0g
rLLX2+GqTVh16A7niTbvKnAG1YX7A9o6SX8pNXIzcQ0jcdXA5ZU8lk4WIwbm
ClhviCo2g7saafYyVqevIYSuajXQtMgewuxaxWAqbVzLZvcdYVdyLjdag1+V
AokCSEc/Vb5oeHVK5Car4uTerR01W5xXl5TeIIAvGcmRVCkOy7MoXI7Z6bLl
1JQBU2j7KzvuzWjHPai2L+yqaGiiIYP3htB4orUb/ES+tH6q2ZRyOf02FSD4
NWx2Sk/OSTeLLW2Q2msNtj2kSyv5wuh1wuwebReoaRpGFa28AD8nYL5Tqirn
BpVQVUPUSvfXhd5Ih+dJgXuSV0JYy8xwBpdLikEGofkAf3rtwnY4d+jFcRED
ORALVUpKk7lAnYtRyUtbauWqsWQAd8FZDQ47Tqendl15+kBXBE0HN1mdNcOm
BhUFqNTruwn1cMROkK+UoePwhSySXe/z8TFZ+3Vii96FynrLIgewcOWgDGsu
xAnP16wDANFmCgPV9ycvnGpQv7Vpm3M10q17mJd436EFSp31SWPvA75cgvwQ
yWfXrGsQMrHEW5o73xvQQhAJCvfT9J+6Dqi7pWJV3R5hMUDrmWA15uuizeCd
7MJDd2iliybDbvoyVtc2VTUyb43iHXFoANf9u4ok8sXYv3spenJQo51kNLQY
6SAu7fIzqddE2Alss2ZxdEfsHnIs2LtfYRSKiiqY6VoQC2O/7PIk2FFMfPFC
A6VB015+yCatmaaN0vZJcSO27kUc0qCKQJA7cilYAsee2mAYTttruhwppUTM
KrsvuUyYpMFFFuAuCVH7OCuFNUjx9fy+BjCdUAOhxG2KNemoZikvN8I+L/gf
fuW7LCOxqiNpxgPjEYgfxlzA7En1dqBZePU1PtZ9KFl1O1sG9R5RN8WvLN8/
eaD9G0WU4M55menB0B1n3yXVMEVdMHOuzDQI80MlgqXPdd3rF8ZqLhjEMZqH
ae8JnnQI++SPrhqHbZI7d/CUyaTaQzmfKef646dk1AdNHlLAjDwdEnQSkoOV
RfsUFChH2YU01Z/Mlz1Oc4rLB6EToFbRPtmpILutUtKZKc3YBfDK0a1P5Yx6
EIT3WN7VrnRfonybwkeieyox2yxbVIf6K6LqRlFBcECAeBZH38el0olE7jdY
CvAS71/WQJFlwKpf6IKKy6x7PcqUTmSTMUdeXz8vEySGadoU6gYkpZiWTqHI
wOcs6kZsHJMHaehEdlfhdyaWo9feRPKiqJgqO3CkrKKLPy8zuYyAPMWl9LFE
iM66OyPMREToFLpjqWk08VCqWZ/LRsTBrkLGLCo6NnV1eT50RcR5jVqedliX
7e5wfkhLBQShRN8XGHPidsUN6pvGDCsBucTloQ2QMihkGzPXIHXvVSbzgbS6
6TiL05prG8TqCAcWOi6E4OGAPul28aKrn6uy5jetG4CssA1Ml5WC05NXVlVn
ofM88uDhBzDPAYWpydQ8CV6NIJPzqJIr7LUZALfLahDO3yZ82YhozASl9ctp
MRaL9iuKiY4IM7AcLfwhl4WAYVoE62tB6mAiw3mYoOaTCaQzvsEAfRHFBZoX
qvK36lEZC9gTC7xETdQIPC9VBbETvTI5dBaFi79dG3vsZ2hmsuXQ0EQRBEye
QZFOq9HTKgI9lDGWoJaBW3oB3rJjAwfnPFVOvYx/GI7aDUnwSTAUpjbgiEgR
CIlfbvHC7umiyyTnGCG4t+adFjfzsZWLtyvaE5GDGqfmmginHSXLXMqUsDcM
GvZ4xSXrPFusY9hJRBx1m9W79hdZUdh2y6xe+ETHkq3GMpBbt03uHSpaOXGG
er7u15xZd1hXNq+1x+V4znR8YUJLj2MMzsB1YMGbSsb+hQ/JagEhVEDtTirl
ZoMcElw/2h/I3gD68C6gCpgSrp4osIJHpBd0xhu5szAHpSB9QFuD7JYfb/Pr
ejVtSQskrbwy29YEFaJyrrpQX1NKaimLB0YGCIilPex1dY8MRW9XlLU5kw1M
n7oUyiEWB3xc6WT01opkq1cKnKLiqnIjX0rKcgbYo55RV20YLs39BtQDo11P
qez0X39eq47pgo/gBAa7iA23Zz7p9o0XtXDqEBo5p3TpV1Q2qKbAoyfZGcdi
Zs071iKc2JUBrcoqUNTGRrIwGQdp+spxCKdSxUK5idxylHTrsW2kilkXcgQs
gTptBVV3ikBCgZqq2GLQSeYJR9xupN447OM/9EZbVLsfR5RCgWNki6Or7bss
tY4UAOoL6AvoKMxYGHb1TcEHaHbilbbGHB3isiV8HqxM1g2ZFQHequ0t1K+s
Yw7vrrNIQWdQbMrna2yLTPd27qDi+lxs3OZcNUfvwkf/XwZlrHpzU6cdQH7L
vb3eY1nrIQzVTlu/IxVmqQOrNG0w1mrDpkMdswfjPxoOEcFYsYLWMLOaMQiQ
kitZCWOZ+tthRjIQpKs0CQqRSwJY62aEjGPi/k689jzAU3XjGq0iqMeyqwKd
eB7MbmLlVqPQv5UwgUmhbZg6oc6QAavEEJx2EA6joX6MpTFKQbrWYIjhyh6V
ELVzNtnMt8BIT33Nx1A0Fme2ifSv/99yK9G5CJwbL+iCWyOOwZixdsqFZ9Cg
T5eXXmyeqoTwevmYIZY7h82ZCSAjUl7eXKgWKUrIyIEqT0Q6gXZc0XPv0MMX
LMh6El420YJNZaH6qLkL9LuNN1fVeaGPFCefNT+UnBGPwJ7Lri4j7j5G8CXF
+UUeLnc4vlB8w4YfY1Dxk4SCSa9LX4c3StPG3NsBkFHQArJPkMRaFBgE9mPI
s1FPM1xTD6QhOXgJtDzxSuUk/ReD3qZIXWzf4OH0hlk4GZ2B6ZXq6pYekbLl
wpNdwkbixDuowyr7g54DtSEGSUkqdybKeL7p5SsgAO8WACR3R+ReboaBBv0Z
suZCBOBAjqi7gSJROkdhoG61LDKDpTGD/Fkek/lfzuKgCH3VImDzPqJAYnY2
XaZWnOeY0P831XrGd+lo65aKJs2ZbPahmkg2Ml3yYsxQpktcYVtbZOm+gbOg
Xt0A3LNJD4jMXoERNnAmd9hY6yFvK0BsE2Brf2kGGFuw+EWl9l7IdQgNLnRe
IHdz2jsr8AZlRzRAJ2YFQ8Y8PJpuzdzJ+C1Q6NG9M0GpH4uidovezYZZRRdZ
cjXaHkb1JNoWpqZmoCP2vjhrK/czYi6JUTUN4fgrOYpFDLaf6EXkx17KjAEZ
I9raQzux7dVu2w3V+qNmoQz1xq6RxBiNWiChQtfTZrAHdup6L2kun9FniYam
Mu4ScUHhLivBBJRBWXfRe7rnDZ3YOlzXW3yZ624Zpe8+AoCkmrmmzWNMEhSa
8gD1qvuDFLOwsAPWXdEFDYzaHH5CI+MYRKcINgejwyhIZF6wr4XHYSm4MaO/
XdBBOrweN7m6lg8jZ628ciRL4kLiBP7WMlxyuxcq4StWvUK8YqErpQJ7a6cm
xswxmDXA+B2LZEn5YWXuVXAAPmSi80dlaEe/9LC5s3HTF31142pADcEx/aU7
5kgKUSyuL1F8iO57tfm2iaFy5grHhValb/t6/NcKrtxXTsj0JjtZQLNpJfbi
S5+GNmkvMZMLfO+uYIEVeLHr7s3N9GrGVNSGmF9kgNuEQjWuB3Y50fcwD2Ox
zayb5bTs6007zs1deKQHMpD4lJz5bQwseUgL2AvaLBSpRZvCGg0U2JPFitWe
WZPJ6cifAP76f5DBNsmT4olh/AWRW+qZ521xhbiFN9KnroSFOKRPNd8M3cYu
hgdePpCmHoXRiZSMNarEiDskknGQskfw4QxjBKiGikCWpTUmgVZcTpjQ4kuv
uYnCkh2IgS0W34Rz54gaBLTqQlzb72w2dpceolthu3BU75txZTt3QGG4Bkwb
ImrdpW9gV/sty3ZGg7drZTNoKCvT2+hb3Oyk65PIodjCEysBycaut2oHS5x3
21zneKhFJADpFggcvN5LcXmjs0CWg6casCaKCqhiTLH2L9dmLkPGE9WOxGMo
+8znFmOmUr0ZZGsUD3hpOlWwTpVhvHlMvBNQBzomEcZq4aP2R3Y647UwXFC/
/JEOD9i5GiJFjdRcWANgXXMGw1ly1JvuRzHF0Ba2eWWYfGiHS0WaK78wfMlj
J+AKObPVEIWJW50aMzO9Y/SHjzDmwuIOHC/9QURuQ0UhowvqXwz5r+FI8PjD
jkAlQbJYN9AGL0h8UMJG5i+YTTasjbW6IqNKjGmo9CKApQuybE59mNQ3Z3CO
67wBZxTqMMUipJHISdmBYNcFKboP5+VP4TGItUvZXNjfnG51rr/lPae4hFrt
QFnWHLrnIQcs5aoXnvC7IeznRf+AwpAmnAIeambNXsa6Nt0ZlgPXymdtd3M0
rUFV+MuVq4eKGgWIQoyurVrTWWG28+AAG6teeUiDVaR8M4cFasCL+y6pyncG
yKzIjlgEM0Q3slYgm3icbUK30xqOwIMVyHAhJ+Xlw2cL7tyTBWCl+iL7FaCw
gkEOaRudNkRgSVzeNN9e7IuSSQquC5I5YeNg1JdYKwtWdQsQWK2ayEpH2gEB
vAORlYwSv2Hea3hnBGNwsEkIWF9OxxgiKkZRPGjt3wsz3H9EGn+IEesyGbGy
TEZemalxCYybUZOF8p7z0royBqhooSpmoo3R2tQekzufdITR88T78kamw2NY
cGYsg/pLNTEBI7uhdWpC14UmT6uKu+GMCt1rWbQse1aHZseJTdJ6rRzNFCgs
XxOeRJoCVLVM2RAiOtGaIWNgwQEBPFpSmUKbnICshJCcgACwMSKtRjDBEnPa
gljNoGCslmjVCBdxEDmBe73GAZf9OwyRA1JDRZCnLcwxicKwckxypuq44eeg
md6PNpeUVUl9G4uCWpzpcugArg4kM5QjDvEs8511S/U0vOF+HFy9l2k1EJXl
Af81b3iIV2Q959p6AulqCqKIYSeZ1xoM2oZ4W+YkQ6GQyGC4RR48i+LEEvGK
SOV30pDa7JFO8sq6NexkzTI4p7dhSKwQZCxwMFS5eP5mflsRwhsNkVUDLYOO
8xEs0MdQeudNeAWhHKDRuOnScQnDgoK8jfNyIKghhuqmI/mZ5Toa61E0TWy8
L3bhkM6djvg4Dy9tmWLPSPKoBGYV1KIfh4bEk0+oDIvSheccVYnglGChrhnZ
wQuQDDvMQdduuz2CyTrAIVFalQ5AxZ6RWYgAVqEGAfpFgIGAY9tIx5BGupCv
ri9IWKdrBRZUByMyStHiot7brFNqOc+wQfkYXFdQWdakvT2uhbtpS9ltLH39
3zOUgs8WlXh8M8+uStb+lbWCbagPMhqwJ2JBVQTr1YNcDbKs1ZZ/AApJSQBM
zOqvNci4pCJr3lQVLUpuVa0F+iXq2KMakiaC07Of0Myxx+w81L5mrM9GXhZw
2UooSt219ibK4zXM00oO2sC2gvx9Utf1V5qrAeOUwa9thAS209l4rA6/EO/E
lVwF+BJxY6C6rnJ9QotQWC/kg7ouR11WdUW7C38gjLQm05nfTp+1iiGtv50/
qporji+0bIab6QPUVBgaXzIDsLcsU3mJF0gRUuRkC+eV2GES5ZoazqBH4oDX
WtX+63jvYVqLFC8V1mrI+NdVaN4SrazVqH0iIbTFu502l5E73BHiTHogHDQa
2pxZMRxDwckyx5kKodVYKNNedlJrVqEG20P9aSmr+ZYNE+JCgf8UqidDt3lS
1ORITp2WfGn01EFxLBGHrTYoHXx+PWQL8dDERZUjWWuC1t7JT12qvNOabfcB
RLUJjPpgjsL0q29m7ustOfp6ms4ISosqdcUnJE4B9MrprAPj4Wat4Wpk/gwZ
j1qT0BOOJGcW4XsHQXCnzrUTRszkq1jXS9+tPsOaCWs6meNks8fFIbPuhmiX
7gywtRoJHWRu7RK8fwLdkI4pwg7h+kvbbVCBJn4OogxizNf+JNACZhVojwBI
eDqL7t22yzB2hkWiOe6bwPBjdUZwUpI8r0ClxaIIOoGKxBWYFHNI6ETs213C
HRvy67JqOpSPXECdp6bLQRewpq7OibX5W/LvpbjEIebWhOxO7nsrSBgK3vEN
ov5QUUP/znU7kZP/U7BDgYNuKhkCfEhNQfeduibLRaUFsJJhHWZmkZZldSOu
gpz/Nf3FiteROCd3cEUmw/NMYjZSHgT+LMhVo0XSH1h7L0kzlvxoLeO1AY/j
cFfC/FKLeA5YoYcOR2uwuyaGljgJ1YSxG5cFv9zYN4SYP9lBZyWS3jDAIMDS
3sAgI4tk6UlknogMqnS0Y7rqMrOP9yjZIVyqSkinX4so+Acbs/a3rJUrbQ2q
DU4DLTQ4G8eTKz4belqgq3F4R4U21+ycNVvm5avX/VQT7HapX2NlZ3fgd7Fa
C9LUY2BkpZSEU9+IPJPDAKSh59ml1arnAF84JaRTSY4lLmxwIEHwBGIFV4S3
iYdChXk9axx1Aw/MvzhDSIRFQ1HvKyEL1Ogu32sIbVMANq3TUGomDBt3ALgA
FNXU1mbPeTHPWRs22lyFjiWSiLfXWmNFSj2FZQOOLdTw+KugRRpxQfpYK2xJ
wV2XnNBIZJyKI4UAF0m//h88G0xuwSs1CFPOLApMCh0V5RAwqAErwmoS8aZS
bzimM1kaNTxMyOob3G4LQBQEKiY6pYpZZc3Uhp2aJIfjAI/IKjEfBDOoeVQD
4plrB5Y/X28IIsMwougfclyhMGUxBVv5WkYjWCEM80aRYunVzbLrkJJOis1+
rkDp9AyaaAyS0Y03ttIMgfydikysQsGRR09M/RW/u1ZceXbXXSCUleP1Aqo2
l6KFPmhpo3pNGXHYe52AkgsJt4t/ppWhmdkb/SQcox+/FoDIorcF2LIWtqj3
7Y8AaEq92N3EermonhSV4qd2AUj4yjhbGi9R4sMy/d4CGb+VRB0iIZIJEIpk
gDEVoSIAU6dUIDqcAioQHup3W1BiWNgA9tHRcpZFC/kUh+9LocAS7GZJFJLq
mtRpO4VY3AgEeXMNrXxAHyhmSyH7YJIXjkpLjtuQAMBmAUdwBVq0D4CCHgNv
YRzeLHf6pMXV3vWw9c7KJjwEzUAXBeEsieVSl80JNyxfsHXcaZqVfFRNAgjt
f2xhhdUPmHVFKgIRuCWzHNppqaBXi79Qk+3u8kQwMu6ibwFlJ082Y2EBbF6n
FY9YRMZ3SHyulrP18MwRxcqjtXk4mgwRxSaLa3+FY2m0/mlYsq4giKKqQDAq
nPN80xG6WqEiBgus4V9Rn5mBb/1Y+6SaMfBDssgchvcygLKalf/MPd29+dgO
vJlphTX+zTBSo5rR4fL2quo6aJ04qkUZmT6jdkAjF2jq6/Ht0HNjVq0DNhFp
2KyNzCrXnTVeP8O+HtDY/FZ7YRpiVHtuUIOiKoD1NHggvknkq/3h1kX/ZKF6
F9R80wRS9OaJhg4HjJo7mdl7fwv7O9448CBt92S70Ti1SxCvfAl2aKyX1wiN
Eecpt4VajFe9IxQ0HW04/kXDOfhuNbMazIUaMlprx4RQoZiOCUr3+q4LyTlN
JkqoggqsbWZnbaxaGjWg2JI+meS5WDGkYmwmUa6Arn2Wgukf5nGusas2BjCX
kK2RzS1HpOEGIAQ0jBO6TEjxmFQDGqKMpnXdq3agv1d0v41uOyHD00oeovoC
ssEVGNoLGkig1IhTFreyQBcWLN6LtnisPPv1AZeVmsWb3s3O1Z9WGi6jH3Ci
mE1loTJhpLoKo5tciiVZKe4Af/P+YyqAfA8uy6NNIQ1205Fqu9PdXKyoIKYo
42UaSRaG8SgHCc7ItKhx7vKxO3iBJfy34a2vcHhkVFh7EXrWkPTO2Hxs2acR
1/B2h3h5aUulAK4LAjWTq1NAHBQwgRuWhv061KKZYutnRwnm4Wu9uLmskVbT
sVPqlAwlkK6QqEPb48/ytf2zisOYvmwePmgk9QYbTDw+e0yVTYqpIdoipsSf
bxA8PesxXvVeE5Qg+pRBqDFjBimMWG+8Mm2FJKhCoKnZqFSytDpMXTYWy0o3
uRHcpAOhCsG7eZLO2pGa4LCbVjYpoJfwk5r97xaES8hHpr6OCtPL+ft+yXw/
Bx2KArJfGyTyfwSibHwmGrrPxQCQmQGshLZ88npmfDMgwT42UU5Y/pr1xENA
2LZnWgek4XfM/4TPig9+0okZ7pcRgyluUPGsQlSKrQIDPmMuEpiXWz1sKeFb
EqF6/xwPBLw8lCwxCSZHIUoTcslblxHUlBL0nQ0oIB9mNViYtr0o8A0ocGM2
rs7uWNZ47hsTtPuTW3e6zmKRc/JRi+fLfEqUEm49AUPXMaldhxihk4VxOcIR
owR7nWKia1ES6/9otRezZz79xFF2XvoQpOHswfvY8mJFZl6qOMDrkQQDHgXv
ieDxZUXrGseQyVPJpZ49eqYIxEKVdAKSaRAc5wjoczY4Iqw7VVZj9X5K632T
V33iuXWLYkzJm7sRB0iIP4iJv3pnsR2GH+t3yKEFsHmwF/VhzWS1U1unTnlZ
zhFKCRzN0s09rRs/EUgcieb9CWNtu21LKQMPvP4AftefNYPzNnk5LpBvv0xO
HjwalNQHoR/w6BqT9uuXVrun2XhH6ypoE2nhqBHzADLkiQjxZi9befJKLQxG
VJ45YYzOj0ILwqbU6RuyTp7k6wQCiLRxa7qzbrkUaUlGKIqoinHxpKieq7FG
JPkUFnRQ6F2AvIonYstvUwNtZ/TL03piiFSIKoA81GETB9ydBOYoaxpfbAJl
K+K0Tn3awMlO/o7ZWvNHBhqCGAqfVRmGmpwflpSltrDou0iXg6nWLo8weNaZ
2681uAUAwVUl+gGaM7tBq6PBFX7p1EtXQ9u8GUMk+GvIBZgF58HiTX4rYHUn
Us9bWZOlwSolh4LGC9QZDxw7moxBOMrtC5flJWCwzUucFXMi6exEdZSurtfT
zJhYcRNvW/DSZl3FIXa9s2WznuCgeCXZhc/RejANnT0hl2tm+qoxGpAqSJdy
8g9+4MtK1phLMq3F6CurzTygULJF4G3NIlFVImuAzLe/HE2pEgNJQLESNMTl
SAgK8QwCIYMBpLDO6TlY03qD9yctDuQYzqDIdpTCqmh0X5XGHwCHmm6X/Yrd
Z/oulvY+18NZLsj2ytBfrArDGgQqZXSqhkdQ1EKHNpbDrV5GjisMUmEN+fKi
tAu8C5cxGKFaOLlwEjE8SuCn0HTYgeg4+vT1Ijqy2q+bv6wQ/KZRBoMrcRJn
5YWeXk2tx2/GTKoDjBJ3zTz2g9nJ4N/0nlHU+710w45maw3OZ0P1dg+GqNNG
z2S+xhCjtB6gZp4ZyNjJErGTVPQccNRE73covAAuHrEXxE/Yd3Z8M5d85MZj
PwgZUCHfl7LhDoup5HHT4A3auGIAAqyI8mCdkBabIsbijXwqIjw1wW0Ioe6Q
Reu4yH0tNvW5sKAxzayWsMaFWgsRAVXkLks5kPge/U2OQEffhYQtGO84MjAg
twwFiACYywDIPsJrjpnbliHuh1HQaVXMmpqypIa6HOqggzTXKUDkUkl0tGYk
Q+NvNKfQDIi2BMPubD+KyhHx9odMTpPejHnXLoSiHnEn1iIYaVyoQxeChJyA
BCToPsreHUl68yZyM6cmeRGz9M4lJHCbPwYUA5UReFDVOp4WQyfj59cPc+3S
MT2kVokUBl61ycwVfyTLLaczfuFAhNfRtsZTgaPCecfAN68YUl/tXe9qhUQZ
+vJ0KnFcdJEkY/alb/2WJfKvvcxo9YoGn8UNemZZyGEss65GM0XECIWHuMr8
EAoSy8PdiGiYpTBSU9XWacd5uScCFdRX4/wGtzIddYOhM0nu4paBDR6ZVRjG
1xjtJSo9WDuQ9oeXvC387KguMw6AvoyFT0uVtf1TUXnbgEwsLfjONaHFgA1a
fWtYX8qr27BAY6VaN6sZlsuvDIXUGq91cwPCfSGoDkaMZ5lVGBmW71QoSuD5
J0v/fFX4tvlU5Zf3CVcDytMKk1Uvux8wiJEvk64qTuZdU/xRCZhZatdqTMIx
qCMirDznVZE4FYPnyEla65bmRDzvdYYQrcjOO0Rsr+vP1f8cul4MViui325i
7yQar4eucpOoXSHTYVKc1N07TNwIGONBkhlbL84FJ7tMQruOavI84JxLdodH
6RdCVGLjNZja4eEvvZSuqRwq682SrDmPxmWKYsdeFN4WIPBZ/H/+EFA9XJUC
Q9tQFRI7MBIKwjfRJU7RNbyqsCS8Z8TgzAiHLBK0W7uujDB1Wmf2vl8ynY9i
BKoYF+DRNNnRhxK/ELemeM3I6zBWZ27qwo/5Ar9vS1oF66y80T7hnzd8FXyx
VonutkID1lDAgyl6lDIyJxzMaONAy+DH8PyIPFO4164Ma3Gd3/T1kpXUv7Bg
A29IDt0lxwOAObF7v1F05v49tqafzF42YlJJUVt9YknkAjAVo3gDZBCQJ824
NBLKX41Ex3DZXK4yGxWeT9JRtyP+xYQy/x9+Sv+qlrelxVAnaiBwR4JIPAD7
Dw8jAMZq+9DattkPaJomN/3am0yQQK+mGAEz1ZVgwOJXBhjeQwer5RHqtHGg
dQy9OJHOs5dsS+6cPvJ/RPFwzTDsvpGWBmxbJSdHHyGLlJeiA2Y/feisGAPs
sqkYUtYkotmH6h2K3ElWsR3IU8HemE7/cqaCcjbdAt3UYQUzurW0F1ySfAfC
utlzpc/bcbPi3JJMhwSxwoX2a9E8kHb076DkKkJopjwvfN6m4dHbGML65A8L
U4aTTaSZN1mNgXa3lBftBUMk0zjRNTXpP6117eP1MrJkgnBoTtBTTwHxEMVK
ur5giVXAm2ZaAPSw3mKQ4szLY6zaOb3DX00sWidbzLKuhJdvMgLm0nOwl2/C
sTAsJsYRsGcEicjjL1vOUE8KAq4V40LAQukFg7UrofkWdpFmlqFeSItor9jT
zLgOmHWAdtZwsxHutvrYsJZgxYK4J8dgkAjXhr4EZdOqZtM90dbF+xifXlJD
149OX/bUo0Z0IPed9S/eRCEubshoa9q9pPmMRUYQziHS5AxuPbragfaKgIQT
6mvL7VXxBqRsKYNwEEwjpzgQgY7T4Bobp9ilgoVfN3liO8UvO3zIlS8jwvm6
iDIQM9H9CzvMjKN9mkprnQchK/4cvoqpdm5UkbzejSTy6DFM+yRxxtpY5B3A
4mXXMVNbKRLtcL56M1iUh9mDGj7wHUi2AEYb/aavEF2nIhLvWAs2UUtKgkDN
GSQ18QIUTbl8QrdDVVcQ22foV6x9E1ai5Z31xtShyS5jPetZmwV0NCttNDmw
2eqQ9YRN8FzKZDVxfv/hgcU4bUycM0O6wkob9RzqVcjQBq/Bo7yyFjq4Gp4q
83BxPNprLasKnF7ofUZqBjxmqg9+ce60GY8Zdd24t1I7DGxps+af4SRppaVy
Ca5uRVzXhsh+FvkmgjoJXm0MTY4NyAh/GrLL1WikOFQoPjtPGVwJKUNxum5u
3/3LrbjruhHPvNgaapfeWheMDAdqMK6FRIiDQKPyNN6rAwneZKcUMMft/HyQ
B3+VNzhFXWoBXkrcohqnEAiW6eAE60NTiddRffDRhCYtvAxAwgJ90kl3v3Cd
j1MYMOQhhVbvSdJMPRx9WmI4mpv6ZUlD3xJvZY2Xcgho+vKLNqAks7b4rTY2
aqc2vROg3twIf3cTqu2kYlyrF28kwYmXcAWdUDDF8r8NObkiqt7osJWfiHS8
NUJnT2TeyFAabssAYjvwcyIP6FU6qvQd2TaYSOr9Jpn/ElMMdM/mC7/+Y4RT
TTWcGeMJD14PCNcsmTqy7PwZ1qlFej4Xbt2Hgh6Aydjxhw0NNi1CH1dV0uyq
6Zae1ihutlhPpHAjTkbfPOpXB9tpTplIHZPtX/2hl36KU3214ws56oBKYDmm
BcfmuWU36Atg2EI3Tk0AEmniiAC6BENSIziDlOsy+wsYgbYomdaUBrkTo9Z5
WfYXB/8AbIEDimFK2vjbbcEy+ftoOJbsGfcW7Yx0v16islqN64PiaGhWXlN4
U7Fuq9G0ICjxILLDpv5PXSYLUiHefYSqDNWvn06ZGv+LuQVQqVGkyjgB44IG
BXEhPL8MO7SzO3sp/1IIYIj+/JdpJ02GeRj7pidaO0ezwlckrTBOUA7ZkEYM
U0bLZ9A/Vwb0/qc1mJe4/gz4WJhtFMNvIlKqyat4xMrcjmq8R7jxJHCDwQKN
nh3zXGE1ZGsDuo4JA0a9w8bFRAX8UtxGQy7/BPFHpN1N0nk9mVE87wbMFXVZ
acAyHc5hFLwNWO+56wsSmiczeOh5TW6kyjG4ZLYetyM8lvF25DF8bscbeIF/
NkPnBx3mgxWDmp2UTzuNGAT7MF8Rz7kbyz4KFHgJAwh+YLloma0IJBHcoPku
GKuzTe/BA3WDvxMj2Xk/BH6zqKFeLRbBOhUIqeQGsFHA1MDAE01O1UjdXSYL
SiYvCo7AkOPOQf8zhnTh+lxuaLqqzPLBnTVrC3f4St/qC0DAumB0cWNHI09X
6pLuMlpNmIfCmIjXh6WL7+kuhEr8cPuw1pScKGWkWAERdy2owcJt9SemAihU
uHEjkKUFysVM7H72MTIBOQDyTvSvnhRv3mQdJKObKe8Uq1gFUNmdVQaGLwpN
CTdqnpR4/rwzG6KMW4C9fOkbxtrhwz9ZmM0+zWBGaWgvuYTdi9r+py3f+Xf+
m6O4ZUtSX/DSTBdX1fg80ubNlUZvG5CBpo97mlIemsBRzGqwYwoOTRR6jed0
Y3xU5y68FFk57nlCRXWM854wiB9aeC3ZOV4PVVBTHyc+ncypLyao1mNIYKAV
uugRGY8o+TNzMeu9W78FQPGSA2tIxYphkx6jkmkXXSfFHelGBqqjf5Ndyohh
QCDWwM+uCn90umY085KmL0vkvAbCWMFEd2UkxH/zplOH3EoZ7MrhyxYQRANg
DGEq2YgxjpAVZfmRCouVXYcUlOM8qi4H2XuMkMnNYGFriY0geB3WHX5Y3anL
gufB8n+ax2xyyXpRJIyTkXFe34ir1Zv1B1zbjH9w/qHFI++boom1WnGQuucD
y6HjnmUzNobgPushRta0ESX+ZRl1c+BS96x2jW6gwyrFIgZ8f22NDcGQZi3J
F4dzLewVy1afo6dcglU5NRU7GrouTfyfp6Z3a1KD21lcW6OC2CoWbNnT7Jpq
xwdTdU0GFwL7jkhn62G2SsG7prjJOXhmvm2erb9cg9vITmsefC593diiRzfn
QD64IFWSV2gzlFPrXVhNIwwj9ky4Pr3LKiKHoAoN8DPCjDOiFxF19gTQ0BXG
93Ku/KVZYTEp1L7cirnzztoz9xoB/6bTnoO0Xew1upOIrgkc1Nu/BuaKZadw
YiZaZ5iGzFvoewzZhSddtW4F5a3h1ib0qfPTPU00gf+sdWzEASAhtp4I8ne7
AVlTba4aNFOH09Rq1upWIXDR0ZVF60fGRJtIrc1eifdIa6JwRWPmJUwLIKCU
y+YdjLDYEMMFa9zVR7nDFdVaRMBdlh8ATB7OT7JvzY5N1UBRKg4MjgnWVvCD
mostHVlMA6uAJmmN+3Tr/ci3IjrwkpPUJsPEAuAs/m749844FGM2f5uhQ9LN
7InW7gb2i2uTyewast+cx4Q1eTTeNS9SWYZPzfEp8VNVookCi0FdV1clALXF
/43LTcIC+co0s5dBTuPVydWuNc1tTyt9OCRBcUo+G8rqcgxx6/giZ5HhM3Ru
0vx3WXXVGW392oAgBsZtvFMHgcle2aU2a0NtEtU5DVbgteBL+6Y2j5JSOPwY
63Q91HJgDrQ9zcTF08Bd7ZDHv/rSL6fEEgkIfx0HDr4xPbjwQwUFHzmF5dmp
ctUvcDWwKFl7pkOO5l9luhE92MjlVUEc4xcbAEdGTa1wps5ioRhrqA4ESw7r
CRAQ3Oxzdt1FCLTEvxTdd2C7+g2BAqcHKT86swsZFNEuaFflWXdzCssfuwvK
BqtnlqJa62g6b9JfIlX3utLhFAWH414nPUpHoRUPqAsQrIHcXiC3ObBqCgty
k0E9yOwVGNTMCY61ePYFbH1S0GMCKx0mmCCnRF5ocZaakGeYuHBG/Ite2d4u
+HPIZZYvMytADmudbk3itCYfXCDlVmHoc6SvMWbFYtLNReruQF4kh68scX1B
k374Cra0QYLGa3hLanycHCxJU3nYhzP1GPWK/8wns56MPZzgZw5bNhI3my9c
AITlHeKEC8CrIym84ObVTNACXwTjEPSYoW8ynaFlyE3b5FWV7b4m0lOOZqPq
Nl5w5x7GoSr1Rc6BgYc/TaH6zK6pXozsqriAua0U7IK98lWqIf7TV9d1Ni8N
T8dfW1/ZGGXIPXgCT5DZX6CGEj3IFBCCtJwQ5DRSA3o13icinlADOnCWs6Pd
+euQTIqcHHAtBxt0Ix4fc1mL6lxMQU9abKh+RnUyOppr1KlDLE4OsHmbObbg
Fi+IeBo7FMVM6iJxg8pXR6QP6wunqug72cyCfUCgTzZzppqxWjo5Po7EPBhp
mPnN3pyE983Vinxv6pYAPV+ASANYZbpyYsh2HN6IapQ2YeoqL+M4nTTy6K0X
3NZf/eysWoqhG1TGi8Nhb9/DszEcQXDR8nrZJ2fGMhBrdogX8MkSb1ECXndn
c9Uk6gZma44zkcY4/evy3QNX7UyEuOqJzdu2qM1cXbBA12N0oZMwxuivUHXl
xHFIx0tgtdNZRmJwm8GjjG3xo8u+ovV32BASOgMvJPfO33uRSrm+jjsAHutl
WqJb7s1zGC3cK7o+yi4mORsl+4KFRhtdtts1IhtKa/C6ybpSODXe5XE0NGhc
kQk5Bemv3hpApaxmhLDCo4f/y+/cH4XhHcmHFcjACeX2j1QvA3Oazkk0km2W
jj+Atvc69l6fr6XHb1VLy0srsBYdBoXj7WR4KnhvjhOBr+IBm1PTP8YAWWo8
1jgbKZe0PLqDJjuqtR7hQb6ScTIZLI0/4FS7rkmdNX/h8iKhefkvb5ZyjA1a
JvHxo0cBOOyili2JzM8J2TLf64rTiZPubpOcJjMh2FRLO3hJijLcE4QJ9UZ3
4bF3ZEGggoYHRrPOLArdNTCWpicH4wXLxtyLjuUAHXTWgdeqXslMBROSBqAi
WzQzSWL1aXT3p4HXXe+M1BQHD38njWqqR/zolSsh3XzwgLJoEFzLC+h/AIBm
r43OxQZ/gqNxCKwJthTP8G/ZRDxaHRa/kk9uII6ga9RVF/JGJG9Wakmu/FpY
SW9DeC6IR0ELGFrH3/bkR2yqD9dv28elu4rAOj6C0Kq/ybkvKCSTnk7sqfcR
qS5UR5MFFmT6weyeSToZljjoA5ikDkqBLMUEP83YDVvb0GwjnFMEVM25vunL
e43MRamRcrqKUqxWjq4iGZQW/FcOGwKwjoMyXJWWEXY4i9inonbq1nmz07IY
Jgzdo5VJ3wbJELsikb/RaX9X/ba415yHtyepSRa8BUfGU2egi9zidMCTJR+0
zZl3D2pjM1Z6Cj1ybP2ZMYxlVAVaBwPhoTGLUU3ECZwK+FCzWL8M1iy3TtwH
HVKE5CANVllVWO1GmXQ8AWP14z1gEoxXl7ZAjDlvE3uqqixaK+ag828X30JQ
mZQfL+O/kI2wlzyk/BoL0SM4EMtQKT44BVcSovKqTUQezFdRZjZcY1CdgGZs
Q0bQEs7wYlJBeRfdLKGQ1KQoTk85WjolWUFbb6jrZ4QL+ro43K7znThFet39
Femw/iTXMyI7qbwNybLuBxoAgtdoGMkmrJFpbMcSab9Jz39apdyD8crVQOlG
X0b8gfSFRNdFB+06J6xxO08WKMKyFgM3izaIJmEpAnjdqQbigdBynCWQT1IG
dbKJPKnGUabf8xHMoueSk5gqVuRQ2kVfYQozPMl/08GNNagOTm0KFydvQf2s
zWGiImTj+jkVkWOOvbFCXzlXybLXxQGKx1q6y/sBQIief/xhvy4WPvipNTiT
iut7t2QSgsaq+s98fFtFxJs26Rqi99sPHL3kRIyeUa/hsF9V4l4TUXH5XOMA
isngmSaP5n30xS6doNDChLil1pHwtddHEqqgW6D4DllhZkpzpQ5YL6heARsp
tBu+kTVcPsEtNID5GDGnwj9OYem4ydDPB6E9rd7vmlVqy7WQnRegQfPAjaJH
Pom7gRRhEZFjEg9i/EkMgp47gCIexwOJzmEN+ZClw1d8vYgK/Knjd+VzMAEV
DuNQdn5raT/0WDlHnE8B8TkFRwfAt10W+OK5Nl26fvrdZoLCFgKrOcfYDXm2
ZMEaKDOHTgQ6ibvGoGGaX6ajhB/GtOQKVKFNG/ecz48FuIWnHJVwha2L+ysD
9zNgabzVvEwNZmsVNWS+KNr0I0QUQ/4pRX2hmuWoDTgHKU88OaXDYjgXNxFR
lB0TQOIkV02vV+FPvPyN4uVI4PR6GXfzHXU1GZNzdy89lcZfZCDAsHzapE6r
cSIwU5cCbytIMqZgwxsyDWW24KQgFIKv2sggFOyZGaCs6Nj1YERiDZwji+Zf
ybiig3zGo6HRC9nHLEB2sm0F0VBMuiwSTZdUtyF1PqUIvaaw41qf9ePdGZA0
FB2lRvV7BDraiqNHRQDKA683pFPISKsldE6GFDjLavjAwg0prCI8lXMhvbZu
0JpQ0dAUNH4qiZiFZ2bkPWSg8DhvOkLJLJnIv5MgsB47/Wr6hjVcIvPna2x4
NBu7oCZrwckmQZQ+Z8TN2RWYJjCflGxJNLvrzbXUTn7rWmPbPCWkJyly6y/5
ZFQP+EbN5nk5S+Pd7rq0RPxG41EHXTMr2tLcMEspt5TkiHbebq1Td8z0tE63
LXs7r0RHJXpAZaSSt7jSxWaUslWiyxI1pSqgoCDTQlglm1CUiq/ip1RiWKEn
GK7kNdJlH0KjvjbTZ7ZadTp1WtuI4NMQ1+i8gMlv6nYCLHPY+hikCqaedxYf
QhtrrQaUPGmnlXY+ngc1q+I1cu2gQ4UQJlthyMXDFsFc32F5O9Gs02qcNjUh
dkkqzMOCzOxYRyXLpAdSbzp7ZLwPBPqm060jwELqIZQGFDg7Bt0koRpFFqcq
C+G5yyHOE0SXLxLwQF/CTjbJzKnhKCQVhnv2dAAWubR2wjOcZVu6Gnj9j53E
paG8/FUT1i94BO3nqBgsO2XZrFauIa+TtXnqCDqBgPyw8+6Z0g6gqL1gDGmO
mOHYZesGH6rrVaLhpn9iDomsLB125yi3EZasAtalf9IyAF6y36hhPOc5tjoI
mEpr7Qwpv1hEf1heVps1jF4hVxbQ6HSRE0buaYM5wLAtj7i+jSGyVlSwX63R
WqIpzBv2ekXfXVZQoSlomxs/duspEgF5e99IU4zCuY4hDdPQBlHcWQoPTNKD
xyyc7jA1pKNkkZwLQif1F8S4ESGDm2ikyQQPpHNukTn61vP95kikBADDIp75
6g2rAl6kH7Fa+A/4ZpWvBXkF/OeyZCUqQ2rmfuxhGTvZp7i6fb5vkDSta4LY
uAF1MVO7RGB4ItFqYGTJ0m4xim9/1IzM7XlZONQHygJ6/qB7ohsMo6/BOkFz
4t552XCHeoOJ8aVNMLW1y2FZ2YCZmtHXbj7jOSEdkxNGCdhCNAdPuRMb88JI
V9kod8ZqY+Gw7Le0KqoHAEykGHiuy3bG3FBhTGu8uulaDtRAvMLz5qFEqiAW
1a+wbUkhbk/t0JgOcjZ71ZL4xWdVJ55/F/VUlvP3WxwBpaai0jd3b68BC/4k
zNozMBym9lFopQ5MV+lZF/cdQ/wiwU7pHMwOQvrAnM6MgdF/WF91IJlc549h
ywzHS16ZasiEYtCJAk+nEjFDZG99eQp42HDoR4VU1CQjuIMZAed3dvgChl2X
uozgK9aL+dkL05mCPm8DN6QlkiDYibTZN79R7XnShH/eWtxR52lr80MdkzGR
vCvpxXuz4gbyGvNEvCfRfWyLfWPUveGUz/6RfqdRyHuFOmKDdCVJqDNZiE6L
xc8ic8fkevajm5U3c9UuzW++NV01JUE8GNvQHuWInAnMEqx11muhirPMsMhr
nisjPfLXsHVb5kKC4esoTdDFXsp0lYVlo2R/1nk/GlWuwAHDq94IxCzs8A3o
ELtYi3Mo6Y1VqLKXa34tXceE4oGm4kFf3GlX0PMLbLocDchShOzZlo0KkcYD
MkEZtl/a+kf7eRqN2HThLBGsDzexCqW6wC6c+wRD5BF1U1xqwgTg2x/dhtBJ
IzlRVC3rDF+WkAVjQFWQX5i7i6azXl6fnflXX3ICfqjrUhuWJkw+jZcGV8ls
orZVwEs4qgp0nTcmX1hqNnDgowpqDjKHAwAVjyiVSgNX3L1ojPZ4wT5X+TFw
qLrZTm4inWsEMSlppN1KqQVXvYEaQxJwJMhyaezgc2PWwDiYNzqSruMuAgA+
7Zs4IZWZESWEnN1B1tJOaerQHzvpxxZL2YY/TVCPAEzvg5uDZXw9Ta7I5vrq
WCJPVjNVdE1YMEjJZM7svY7cVMuxhsObh6iPTh4pF8JimCjvkzAESwZErsV0
2Tli7eJ6dQbTTtxA/bSlzutJW+pQPUn7kOTrXFd+ba+YLyVpTdheRF3zxeqZ
0/qIp9iZ/E9ClzBnDSuLJNwYjE0NN4kx+NUcT1Br1PAjEul1/HMa+S5K3VP5
+j+gwzTJ65HG63qbjno8p+9uNvMmBC6rF9rciuY/DVzjXC+ry+w4vGnKOORf
8BCwjtnJ8lp0PWB8GPxnddbn2YpzDkLsK3tGdzdvuXvEZj1P4FKMKF7iV2yD
vc0Yi/OTxbxn9L1jBnx2eIN8XakhuNteAONoo4bjrOjtbfZNltgaEUgHSMSw
Ul2a5L9VlvLa+MwRp2fqWGMt0gd6Ewyy2vlXQx9ZSwMHG/fNmxq+uVL+ovNQ
b6d7faUbJcvrWFg4leMs2zbVCyLBWHnUTQ9i4l6FaoOKzXoyblEY0jOrCqfc
NdXD9eQXPfDLNztDjQ3cV7+o6T6LCIMYgqOpNRupQGfmXLz8O5iok3rn+mWQ
DfwqgwjbaIopSfNsFEYzYq6lBKsRNDVoTT5cwNZtJwEyCqhmHRp/1X1q7lcC
UVEyQ4H/59cE3dQ0DBQwxzp8aOzVXOlwDGC9J/k8eGM+dGnyETujQXmiPNat
cqYfcrCe0xiHfrhNzxhlNPYV/kL8BTlpkE1xjADgAPjUbm/56tZNyVh74QLm
6YCwJecmi/9Ypd8agEsW9rV82pJrk9ajzYXMlXvDugDz0b5r6KqO6ufud6ag
ZkqtgRWuA4/JQkIZ/UYtESxVMwjxuF68Fny39OyVkkrs0IR9PnsNJ0zMLoNs
v27ckkRi7TRWXkcCr4O1N+LzjzxuxmOyxgzwYvWf5yRjbCa/6DPB2hKmlFIU
fsuXNxVHllf0Biuo9DRr7mGlrzZdf/2AidxQWc/CIqimBENFetXKBXQTbcAL
tWyjynbAyQC1P1V9/QVKyEEEvIIbJg2BesrqkUVdONIhCchLovYGCbEuqR8T
/N/+yKT5Ao60tWYwMY4arKUB0uYf8Gfo2naqFel274kJdG2BnZot3pZH6d02
V8YbHRocTTl/lnBkBZwUno1S1yKcH0ZaI9IrFLB35sVQuTxqitxY7lGaHf6o
kLGMJJZb17qz4RdJlhFkx/GxNqaGsWXf3jjlNUdViKhQSOeTACGzrUtSQ85B
0BekRFj4ZrxZVMvuUhbcXD4KUa2TXWyHUYKNClrQA5puRcPytBjBovxmZMN9
ccAmm62iReUS30tP5VCDjHHDSu6heodb4fakZCT1+juKZ0Bttc0gJVqTCBpB
cFrXXVIqHBQ6uZdOZ6KG6bVTSFWM2C/b6qKWV+NHHQwre3QzsYfA2idH1sKk
38qVFE+dSlQ7PNGygYDCkgxpcdCjmhRSZ6zkVmTGB/breOb0yjjnBjUc8+xM
t2i9Ovwsy27gcIDCeCUpsFA6Mp5o50Qb9nWj9nv2UPMS5yxqxfNRlhANTzFJ
K+SUv71wBZwqvW8uQKrDACJWRlbDFounOwof5qvUTTAkfBMJcXDZ3QpC4q5r
5/MmrvzXrJmdefUlq1dvW8do1eDgDbAFW7CM9rrcylZkU00jUzh0rm80OWTn
suzXK/gp6f4Y4eCyrsMLHPkovbXea+CkF2g/8YaoseMPuX5V4khkRDbUTLsj
fL1e1C9GSvjgyWWilUrljFJGSu6eGM1oP+/qiwwV+jmL0xXMbNJ1hsifFIZW
qQmdM81GGy2MIf6+yUAFU8ucncno843UV4GfFQ3OFptGpsQRdcsTPcPASPNV
OnKJCKYD58vRZWvOlXEMF4YC08wevSHMHWzLD6/vubt6mzSBWr5HzASaegFY
vbsjHDVtZxWhALwNNkHZJmjt24nbQlhjGs83oEnwCfVNlXR9UGDj/xBRVAnC
nAcDl8jLd9CQgq/rPYe8w0I7Ft9y3Qp7Tfa68c5uX7m1VkWMAODZZqpa8Qai
Nw8Z1YPYBBdUHWn0ZbB9wFPineFBFeucWegciLV0jOG10PL9l+ihh706VsCp
RhKukT61eLkGrUxIxFC4da2Z8xrcdOmJ4dwT6HLsmCiBGb6CuBTy/TZxAJOW
ZqPpzSz2KWkowp9wLml6t5bO1vCMVbREBnZC0DreBvH7evcHFwtI+Rd/13Jd
L+o6PTggHkECIysp7D+RkETzRcoE5S9VkSAQvYJqOPOI6F8cLbKv4e1cJDs5
4vPMhRg2KK6oB3dSDE2bTwXaPBlvjjffLz2rk/QkOxEX6t/1f29vnSRb1taJ
bJcMl5Pjx0QKjsPuT3GZoQZnErRHd0asoNP0Htw1FxxvGzhE7uBWsR5JDcpG
8CrcwcOR42s+iQ1LWC1OyfuASzbDuMyOTTdPkVXFq8uTigPafG9WjMjp0PH6
Njn3INEtCvqNmzhzi34JiQjAsSIiBhIYTc+/Ldi7w9V8fNbOivHs6eGAc9vX
9gqS8KasYlFuz2Vm0h1wdEv8hRIifcelo6hmkTUxrJXJGZwrkhVIslzTH/ab
TMh7iZhh+IoTV4Ug0zrTiIkQfH/ODuBB9WgNOogLJJ83rWqvTSUoDljfTo9B
5+zVmZrFcxifWoTYRwuUikgEug8loutnfYGIkSjIY0xWyK+UA5VX7GEjQY8h
xaUQ3XCfyhJV1g6jmJnGWpas5Etdc3+iaOWEthaxZo1C77MRTRJZaI3QTEW9
IL7yKipucklF5XTdSM9c1iuAF3BEa8j2BncrODnLGUqV0yAQ1U4dzb7Ipbs7
6UQF9bTdzI1Ij+dT56Sx8qB3I9RU3XYmwq5Ulol/64HfDk9g2tR6GBQzLpC4
q0IdrEb3TnxWSAKQwIPlzHx2XSyMBxOACfSO0bqKfx2CLT5zdfiJ21T1FyQz
4ICYuKtGMAgBsiRxH/pKb8uZ4NZ4hMyl4RJomwKyDqUqEs0OkUrVGErJmmaW
uLWNxN3lmXglGc0FS+ItubziQbReGMhSq8PBpFl8qBeyE4bXG1tLc2Uba/kA
Kp96KGIP1cxHwfEYhVpuL/THQBn51x1qA9cEumizgqptlnfIoLtYojjdIcyy
1kvPfl4pvSVhWv3hGQgh8elAF5Indu90m9XxLZEQOEfQR/MRmqJveDGxOiuu
d2lqd/G0qTCBIVfdxbL70hosrQbRlaxCGtBLzJG/dyAFaOrujHAe/xDrIk6A
YU6nOx4TmNmPpjmtW/TbvWe6taGwBazOCa5liMyThT5+vzhXzcHBNR6LiwXX
iuEBK8e0fnNFNQkB4yqbUbEokFO4l6Hr6xGwT6Bm+VcwXLpmSGAJcqVFSovw
rvPQEYnSgvzgG9miFK3J6Rxr/GzeDmlCisuaFGM8+G/kmQOAK75wAQxnWn0u
/gwEuNYFTD4trGbahvp964pz3pVhdsfDrGVuvzZGqGwtCu7UZGI4rA+rHnRR
7D6+rWSrNBwYfdPbCmW1I0G6j4WcZHEtlsZV4pyR3oqGeLFoXnokkjqQ65tB
SgLSjUwDj0UawKEv7PgN9b18vKmAwlo21zM6UcX4T8m8ZpSsa0aU37p4hOdQ
bLAWtd5JS0xudSNw5krclHQwXBtOVljiTiQrGpi/l6zybRKZ/x5I0sAV06ud
pqEaSAQyUjJeeVxwPr0sdaxT9u3z4zZATmFS0rXC6yT5t4jw+kAVL5UahM0k
6QgDY6nDVSSY+9MkcG+DOjYRa+pNVheIRDyUXoP4Q0iWeMF8e1c+DD1l5xex
+u2YTrIwFzceTvKn5kRPaWiZrIYCRqxVLEiGoY8LjKnbVgieuYCpVlVuGTgg
PlKiLdVbyzArHW4gsSUwdRbZWEvOL6HipjslYUiTygi9ex+wjFcbcTAdE4Sg
5PRwbYqcB+76Vfa0UidMRCVfEqCpWGQ4QYnae7HAv/VPiB3kgkyb0BIipIcR
2YQNwRyTc9Pv+madF4/zzxqKce8046gxQq2jvFBgEA9XTCE5V72qcVNxq1Fr
8FWiK8889LHvGM92uehw678gjz3pOYpoDzZtdP2+ZaZ85feaYs0dcMMcPApZ
UT77GnamPGf4VGGcr0Zt+cspy6SuwzxGosioajbID29LjZnXq1QZ7uMQfL2C
n5O6mNQvVfmLTFfea78HeikzbWr8kVOsePRNZ185qk6Z+IidA2uNeFCSl+Fz
/X3z8slST6ycfS6m8d5+eG7dwiXdmSqlmZcVduR+CsSn11hxzYCGMOQkrQYL
NrL2m7p8mo5M2hfZ/OFTd3YFzbMv+PiiYehH3JfywsfDkWdrBULcdx9zkXtF
iqNZwsBlILRYwSNcbS620U/uON3ktRu8J8Qm9+ZlOxpeBMdaXdxQ5ZMdktbt
EMgieDfZTsbTto7eZqCjI9WsBah/RD614Fe5utp8nnw0LxpkZDHpcJAoBXt0
5a90qZS/gPFyzTLArk4iqmTCs8ac20IeSxspX9JoUjQE+a/AkudHu6H/5SF5
+svbFhITfQZQBJx7QFPMcCEHXzTSOzvtXAKaIdSJmQ7123rcD9kGYea/nMsa
BvHj+nfDH0cbVpXvaREDixvls/L5yFLW+RN9EHwdRxlvEJmTNrAzvS35+L6m
hP7lTFb4qcN7S3NnmEGKRE/c7KQfMeyK7dpiTs0+VASWqBVOPqRDKxJt0Y3h
25SO53VqSziZ23XLqttiorQpv0nX3i76poimmzQcLT2ea3G9U499PXgPTfbP
5GvkrOWkYTdHazI0rhWIjrT1sWEDtTquGk8l/gyTRzRIxliPLb651o5gZTSh
9vDYndghku9NcVXZCQ1R0LCPCQadfhFKXsUWcAaNg3wuhzYvQoKnAjRo6Yt+
T5PEf/oYnFHpXiNsPk/NmrxorHUB93j1f6UzeL1be9B5vxtJHjMm+6gdhZ2V
ALqUPIvlLPLJrD9Kvm7uvFzvhZoXN0h5aYMqfkeHIDHAwtGW0WO9jrX481Xt
v0QYzHejDZp+miHCcsl2qB48OUPzLDEuo74Bkja7r66kckvjCiHgc6WST7yS
baElTwPN7jb4o0YQOwimixrXySgoQrQUjcqFOudE8LcgapApxfWPn3RugNym
8YvktzJdKvIjfwT/N3FHjipEZd0PtaxNU8EmV0UdqzUE0QzRc8YYQqg/hrur
36NV4utUqznX5Mq4iZlmR/i4zAT4MgfGdYhUDy1fkx28f0hMHynTZ950MlTB
wuJ11rDhyHYkR8ayuwOqezlMl7pmrG0ku7dfplqTkn8h8UACHwCk4HQqWJZW
Be4W06fmSuydG2JhF8U1O/4TL6vFBfI0l950NQr7xgoNY3nLy5hcA2J1lBxr
mBeJsNxbkzDCeQRKxjvnOME6VZ9zWh+edWP5U40VrPVRjMPIg9p6s2UrppMH
0zUgzmYovs4L2ufOT10hPP+fc0H2QRPZnqJ8MHSJI3OgrkmwXrgRvYEzyPGL
ZmS5+O9w0cecqFwMH7JEq60TjSWacm7DbNgDT8ricB34/ZJ09MPlCmEfzAzh
ebXsq5tTb2QH4am+hKr9M1leHIVIqMcwqDVAR8+hnwB0e85a3Gir1p0+akOT
mCMBX/BdLlzHIICf1kEYXnCD94LNkybdcWl+msM1wNskd2nau2i7BLeweJDI
vvvLCvJ+vXVK1ZG8osWubHPuhsJzecF7oXbik1Y0GjSsgnTwCDbEEuv+q9l5
RnC0+jpP9K2ErH+9KV2rqrxaIPFuoR37oC6f2ZncWVS++PyX7HVsV5Q+Bsw4
GEGwzEGXF1LDmHdSoUuom9jaCCrKsaAf0cnSo/GXslM+zWX5wE2HRo+E2ppp
JN2Sc6NCVoXlW/wa/7sya1qbY5ZyG5V6iOlR4pkSbEvEuCodVnF4yW8Ib7CY
3K5NWsLCuROZMYWVa2BNsrFH1Ve9kdPTut50Aws8pvTGq5lmGHtMWmRErQSb
eidghS1rrhb9CQGA+TBhzZ+/VD3sgOepj7MeGYsYMtBAPDfG7RkhxtocNFsh
PrGTBX+kH73qa5RjQNsqKMlWg/V3+MbeDvlaIuLjM8lGWdXazA5t+cnyNsKo
zm2eDWLvbYB4pmMMMxanAio1c9K2R116z2aTOP4zi0hYPL/lsLDWpuvtfrzu
Y3ttnbBBTU7S6R1P7/Krn2ie2T3FPXj893LSr9YU2mQUzueRP5LHbsb6mtj7
hbOKf1YQyvne16jHWkny14L8RfZfbPCwVzauTGtE8MEgkIuy8M3FyKJKa+pB
Jxp/8frLb72uM60XKbZA9+vn9VrfreRB6HUe1joUyzzFi9bRNl/a9GLtf/HK
VDmwTYTb/FcZzCJRIZxUJkoyEmGNvF9xvOYNLw/8JbJha2x59JyuZmIdFN5F
KdcRv3b+usiN1loD+8ZYp7WIE5LMxZFo/jpBxZ1SKm6/hcsl8NIPEGYYYiNS
hkh1BDCY8rZOTJzh21hfSGTaF7Q/czDvi4/v93t1nFdMx/heJ+P03oc26zNx
HQM2oXdmBdfb5Rvwck5QPIhvabgoHXZMsWsqlLHjdjsuYDArqu0fnv6ZHyLr
48Vzsk5xpxW8dP64i87KsksGyMNNy01zylQRCUlHb+CyfQ3B7sXfOg8hUiNU
d4x6JIFJmP5HsZuDFnY8pCjz5TCH/Fnb1Hv/q639pxpLypTvW9wwafCjqC5D
AC8tWHc4G1lU3WvyW4ZUQMeJCukCsUbyxiEtOtdw8IDDO0WMwzmi6alVbssv
yBmvc9xNRuf4kLv1YIfOGEOW+3cCMXELCSZyM+357z0XvkG3hL8A3dkvft38
9Z7Vrs+jc6v7V4PDpPs8dW/w0Qqdj4u3zQZDmTA//kfyOSB56bjLuqasFVTN
IKNIxjwreIU9xMe7DtTUL8fa8csDHDt8uVD58nafsxr2rXL+wt+rOi9TuxmC
0HIvjXh5YhPZQBQDWqb6XUJmO8Nq+QyPZhzx3Hpfm9nozzrdmLVQ9pNPXeS8
rJlfPgi+f2PdN+KDXy4kxDErD2k1JNMpK/7cHvb5liSc4BERPWhg/mNn3Wyt
urkQKla+IG9M9qYBctN5FFFChdzGzOMxh42esF+VBWireeEt7vNcReXcZAnP
7nCEK1q5pgLnmq7Quiy9msbRe9G6rMvWPE6s9duc5o5YEVDJVJeUNp7OE7Vw
Cul4CWn4SzOivkh+kZwhMJYlveEYtqGRh3AUviPiN6ZdXdoVsvbZJTEjXJsX
pqiulqzPtkFc+ZjLRS5je039khbMkFVWrM9x+JNgHzGrOR3ZXmduDR2NVU6R
nrUSOQUfWAlcIplXCizqrDA8hmYc4q/ZduJzACODlEucWz8W2dZhHoETiTnQ
oq82A7VovrXxt8iT9/IZy+3MMJbGWqAm405qN2365jf7IUKWvF4qJPMcyz1M
J3NZ+rAdtdyR6HNKZLTIENJxii6jqXjWvBgN8Te9tELZz9WMR+LMedzhjwTo
0sLoGpfpPNiVzB7tWqr5VuPsvEFJnCegL1hrUIFeQ/n3Mu9AkqyCEy9okvTX
so+3KySecLYdg789vNwKnNgusw08N/IS8SkvdWe7mBipevDq55nyMtua6bpX
4gVtNRdsK6Yh+IdEyqcqgc7heGav/uKW6H3NHg5pfdlehw0Arkj0q/PbZQlJ
hzdjrIB79W6pSTN9qcsLbIn0rwgDjI3UCwgb4JsYXpQoVTMFoHCISYJds9q/
Zwz3XtY4ZqTJbmn94kmiclrCV/Dzsu8DT3tbu3Ps5FeV7+Wu3yjP+Wca6Fvi
VcAUhbKI4c+phs96Ld9nC/V0bQ1obIBJPsn6XaJDXiVW5bz2llBZheaEslEx
nfx76ISsm9YaQ7fJjj9TPHI+M2wElzHixekx3tIxFwPn8eDJ+bE6Teolxcms
97ZikdYyRtwQvdzYYJIWya1JAAcqakIxEczY0w4mmE+qxyQxItnKoEfyEbnb
8sThi3TZG6f+z4+a7sQy2+O1d6eUiU39cGP04qMTVTA8dMAt9JjNUxaL9ETb
XGuwEcz0LSTCmT0CYU6QjoREEr3O5kE1Bb2INlWsreuUPZzABDkSKPRbj92a
HoF0McViN3iSr34Qf5BZm6LXS/ybel9azMoDvd6+O/eFgs8Wt7KGMdGpOwlL
XdJKYTaXlTAvuk6+G/qWOcDf7XkvGX/pBo+qrQaB9WZNwvJQxAzCVqvwBpSa
NHer5jn4BB9YUAtm+38JIXhShOo4f+apWza/rgGIdWTznBx+ak9eRV66SCIB
9I8yAR+6EEaCmK8TkGuaqNJLlskKEf90OfgZzJVP7FTXsixJ/IyYCB/Au2Z9
OErmJNOxS7BNuqjzS8loqcx/nRDRGzmPn6y1baL1Cx+5WTsTUCVMG5FkC8fM
WfJyjd6keZruQt1EIZWYinQsxKHFU1SiFEw+Ef5Uwz8XRS+cn1apT+E0beHw
K16tsdcdaCDoY0SdVsdafaZYytKBNWIHSYqfOI/VcVyyIgufGv4leJRwpQnL
VWmhMAoNuPViprL47LhQEWsTyWp7ZQH8dLNv1WQGrd22ybIuCs+DbDrrzMD/
v9a+REuSXFXyCMk98/bcM///uZMCzDDkHlnV7010dcbim8RiIIRQrE/cAe+F
TO+0JRFlMSwzYwdyAgOIMMglIaR0suvCkPWCNoq01eWUY+s/HmR7CCqvlYbQ
47JqpDTrG92H/tjxVJMAs63/WkWAC0cwHhsyNCsqhBO2Fs6VqyMkxIk1IVU2
1504v/q+nTeGKXAz1YuR7nA8LqZKYTMg1gvnxX+UoIUKxcfqolceNuk9vOkx
ADHxC6fzqSdnIsgHbvFUzRxSNa0mEeXq2Nq5wN8RH3A/jfwBw2heY+qHnPFP
MNJPXsQyp91FbtZDHmCK2/UkiFASDtLPJH3mI/pJDRwLSQ1xxnzVwkiDdzm4
Houo/pm6hbz1wXiC0nywoJSe3QjsS/7vHDAkhQfSA3Kkmw5w0jf84vBs6LcW
RyxwzKlbbhRLWzFdlKhTOQ0c0LJ6cE2bveUdmVJK5A2Ca3BALe/wpKtAU11N
FlDLhITtHl9CThPsGbirX/HN6Z2YtWGKYGll4s2+fMdAjXAj3V2D6zLiPgH+
MJdoSYaffZPX4GbMtmPT21jc4gZhFji79uWMf4yu3R7MMctYHeRXOpkMegLE
ou3TYHRHrj8kachFEuGj/5gwHFJRysMBYZnl9aIKyrbYQ3vF3ry72MW9DBtu
wIkEsdOlXDKaW+AUyiik1fjKnte8ABzJe+Tgj3f0eErEg4JQsenUyJ2Opiei
rFGeXnh76xqkbJDTXVkuPaTMCQHF237oDwR2gV4i/wyGWRRp8JWZLJjevFNL
FBNKGwgd1Ll9lgDZgCk1+PCf/QUlL8YNt29FKmCzFH57r6/v7tD0pJUKwCYu
r7JtstkCtpPKmnmkh/FN7OGAV2zt+UhaEnzpRhWkHiUppcKCKItPPgT1kNOb
knlr/jmecl10XiopxDD/W7MKxrnYJImft2f95vLkB2QlzepOTKVE8as6UisI
R8QeMsU0o25nrCHLDwmFDKnlKUDzWD4N+RFpJEmNGXr8lwehsbq+0xDKDPow
u1dd60gh+M+guRt7NgJhn8hLxpchMmMen7uiduiK5k5uNRKsnhHxneX7pp+e
zkVEOtYgiX8TxmSRWip4uKDvHLUus0whR7IyR0CX1uROcfZiCgo7CgAgz+r3
+iUP3hEeySlQSXU0XXjj/zxilLZrHY/0EM+MXJ2f81Cs4G4s2Gti5rV2YTDf
n+BGEYtDjmF/fHsJWCI0X+TZsjVuEwAg3thPTEFrlAKKCDOSAOJjuaHBlhc0
fuHOALf9DfZACc8zcVJhk9XFL/z5dg3ZRHsuX+N43FqtpODMWmUr0SuWhRb2
LJ/Nmjtv5caoq/PGb5PjzpWfQEByxlLdLH3IdFkUNb8HQN0GagZZ2QVSBh25
izoHT0lXEbWxg3+9chlRPCAj+VmQFBeNK7IDjWNw2HyTCs/B15VE0Pb+AgYY
JcjziNJGKcDe9OK+Zrt/hYM8MpcEB6trOLxOCf4EBHu2+14PAFgrfYzKsWc3
pqWJR3jUorQrhSuIG3OOY9DkP5SfyGKzBUke2i9hsAxR10D3ISl9t+/jtKQ+
ZndHcYq9rCvKmtWEdricsHRcC2PdAtpoC6ByNHtXxH3GBROIZ/DEA9Hjt/KB
ErDY04b3/JHPJY0PCZOrTjFTCuFMyGp9xzJiytvSXISnnJFcsDrcB33E861S
JOUecDMxGF0As6WSNmLDyx3qv+cHOWMnJo9cJFWXtOxsTnH49dcQ/wC88CfV
9FgjVKdhaEvLf/oej1devM7L8xbsxgEAHWT5O3ysHJir8g7uXRjOPoLBtbBq
DMbJ/DaT8iktAnPipUOtKu1XHIJuxXttv1VBhRBSzkLDbZXe4ptBTxjRiYwa
yNtnSG5EK2SGSPy8f58kLXqqklmT8IMuKnG7AaRGM/p4vKBw1Pil8UbfOUGF
Jz/ZsBbIi7ROGvyy9Z5YBIYdIGwIlbkiQ+BHN/Ejg2dehcYUAQaMO38gDdVw
FNgqkcCfPLsob+D1yIpDd7tAWZLz9iHFQ6nHJD9Ka6TmrpoYJCU9n3loICNn
3ypNZqR0RgDB7VHLpmaTkJNdneGThCBAUxAPj1ntXmxT0XvQ3NRjrV3Ei1Xi
9vk3m/E43ziIXbFEAvggA6ycu8gk0sjSN4ByiqOPZSsF33ln8toubUV9aYmw
uccPmHP1eEM0iN1aWe6zj4S0y/LZSN/odcy9YKqF4vigXN1VGSAimmGf1LJ1
XEZvNyhFmgNtDlQGCoD47mougsMKKU/99kE/NnMakvLkQfUwkjIFBfLHQysq
A/cOPLB0zS3KDYRSGCNXC7posYVifm5FeJpsq+KzGtFoz8RPUraHDOsgUfGc
QT9xmRSSBammrdr2BEkQtyQ1ZNM4r4NsqZjw2YtQ2JZN0gjp2URQIAbg0wM7
snqXvOzx4N2GxWpzPKf6rntmjwYVpI3z2qnsk7Qarqqs/ptWI9NfDMuiCwRW
yQS07g6ouiUXDst5J1jMfK0Uj5GxKtDkz2aAvTGGP0AwXZ926OCfbEL0flK9
mHtZVrdMA3TrJiaVfaiZGEHXbiuGp9jVzGFZjMiXwhGxGviWG7yFBU2qhSW1
HcHTcaZge/lLbC7Pm9RJNRsJVYcP2W3JsNKeKS6vPjwfuVpVoFh7bzQPnOuP
ChvZkBqeJBw59f0gwhVS/jTC7K5DK+KQhnkNR2ifulp0A7nMa0ZowzcabrlK
dOmG5p4JGUEtwLNKG8h8yiytFC5wGZtiGCB+SswVujLpCTQ1XVzFUeLksniL
vtYI2yK6Mhbm98ARFs9BIAFkCoFN3MIuD/mw9CS9yHakGkzx804UbxQa0Opw
iSaS4EYMF3jZYdeh6kiKOfScZjgxboSKMwzrQjvLfsCaH3cZ9FUsqiNlURi/
aZWGSIlQVSen+XW/7bhm5pJ9c1SfuUbRxKjBqdNRnH+wbSEu84XLE0JHVoQd
uXI10jWwBcAcD/qrFXXsfFQO8YPnyFFcVjt6yp+eOlC0NaPP09e3vD19KFLk
o/DEVaARc9IVTIJxDlZMuUg5AvTkSt/4LMswwnBP3yVjzkoShQVHTMApdx2I
kfF0n6OLRIJ5dUry/e4MAd5xtEQiLL3SktIQG3h+ZnUa1JMGVB5uOpiobUUg
r6WWXFzYkGqcjRZfnJkCRs0B8QEyuXqMU1dsOZaVISZmmdIxEg2YiR/XbO7c
KPlj2FQTWgPyGNe/x8TWyqyxaP+kA5I0pIn1pkiKtGAF+aYv+BFEHum5v2pT
QGwiSx/qF6aJhtURAo/JZWATpf6veZZ8Q3bCenKtzmuK2PjGravMp8DJxINr
Hr2LlS4G3pxMm2mXL9fhHBO/siwWV4yII0z8RIZJvYtFZxjkeouMpVEt+wsi
W8YxgEBM5HihCBbhZhMXRrYWoylO/oUmerIFp0FORjWmJQ3I3lEH5QB5boNt
O2X1RO3RnyG3EdLUd2sX4W4JVnqNne/AhBK3VmwavolIZtxUdAQUD0atcPhu
5skMYPiK8WgYVS4eRvgKUG6GKbtcLQb9GsDTiJR561a4lUadejCrURl8oT5n
gIOXV6RcyIrPebcPLg5xpl8YcqplRTvbrP3EhkNmwJ8Fp5xsUv7wK3WlwpnF
ofibC8Nd12esI3vxe3wIGoNaFs9Ux2fmEpKrphRNPZ85csrtWhwvmnZc5Htg
jV2n5VNRHrO1qpT5j+dgBBz3bZdabwuRF0VEWQo/hc4MWmQxAzkn/nABLQR8
cja2KUle7jnzacR6ZNyRyWJykkf/DfAcRos37VTUoeK/ARsxglaXwpMnQDeW
IG0RAJOie39CFmqddNfkzwzcqFnxjighRROt7VDi3riUy7f8aTQ42fITJ6El
Vk2ptilRiiLKjMarnEYaOltSN6qrygoIDqietPdPMMTETt7Y8EirZhJSoZrg
X4VldRAiatua8SQLjQl89HtnDK8SgidskfnZstW1B41UEEs8ikEj6kRgaV5A
m3awjeiQ+ZlpdBFHhB6QjaPjHWYdPUCEpjLnEVnhcOIbEI7MXpIAEoeLxl2m
6c8+qZ7vaKiNVuAFJ2E6WC/6S4mS1/F04yUzO1NLFyE4frzhyhilE+Jp/Fl0
MskuZWeJL1LzZcu0x7xXt9xB3CwxtEcqM5PIPohI2L/8Gclj9otsFPHzogs5
RgNz/k+xkPZZ4FkUssq8dEDsKRGNXl4mZTBfgzHCOHzq7L8SgBdIqsAc2I3W
8zu5PVqI4C+hwn3zJVNQAvidzi1XZmbc+58ClVe2ggwrNX19ZKglCy50yH5h
o2UoI+2HfWaeFXHa5/G04GVAFjhm0nFTM4tOHAIpzLbRZiNO8v972x9Pi4n4
zvYuFIMnY8Az2NP2hM7lLhbqM9guAXrrb4UrL8OTbt9ebUj+WelS2L3n4rwW
ymKTShTzWvoa8YxYRrgiWLvEM1Kp+sUNucJgxWjdxS184MmmfvJNvF0Ruc8U
yVxRp9NvH8WOsiR0j8avQlYYy5AxhEniTebDTuF6E6rHSXp+tYbiVGdVmLxO
ni0TxExjovgJEkIXZGZQcqGkpkrNKPdDvp/SAmzZ06KL5YXibpw1DwmxWPA3
c6HOXPUIkYhgukdpxj1zFOUZS/RggS2JL3MnPwWPrpKUk7LfeAq9KZKPQypj
QOozh4qgAwMoy0LQBjnHOQ8WICyP0KNqUp5WUO2JYReqTa6SV/8lCsKsqdUu
nIUXJvel9MsIFJ+hXJZZLi+9e3YUIFV2qypwB7dSaV4J126pGNrJU+Is4pMA
YL8Jtc5tekpvVXRV/6rkbH9etKW1Rl4F1r/d0S3n6rym3EJIw6ZfWSQsUzM0
4a2kwaJ4yIzJ23aa4mn+IDbLkEJQ7VujtabPizyaKSSlbe2OSqgpfkY5M1L3
1nXTbCmqUmrD0gvZg32/KNd5jIEm51l7/vKiKKWj51rc927C0eETIJipT9Xr
xQTQwNvh5anJtf6DF2C0OAbLgBDXRsrEU+ZWTeYwuip0h6DGiP66sL1vTvVg
IjdmzLKZPn2zP3wNbgA8s8KFr17vYcUmKCrseSHizmZweToWWFaGgiZWfw89
ftPqjldoRN4Hzs2A3R2GRW3QQ2BYCVJ7dKlvnaoPhVQyjxNbznEwZC2ZoTzg
hi1oWtxrZAWA+yoRdsEfEjiAHuWIN5RkuQdzzxwWZ3eOiFyq4c9/XsU8dyby
PLOFnEWTMQU56x2/7QdfrtTJbRXmqn0xmvP9QTYo8pRWPdfQaAWdIWfSaXyK
xN/Khzwnn5brxjH/fvAdJRUn/sdC5qlt/CQbq7IMMIAq0SgZuTGP9xSLiitv
scjFPoJfFcLHUwfkIkvpZIldH5Wir+ODaKQFDTwMYBgWq4PB6TfpCI5dIwNp
WZt7hoAgI1nG2EXhFhYo6s3VRuRCZ7EfRel2Sr+AIvPmUDW1N86mITljhPXl
U+y8rD+ScJBOrY6Xsw0smVC9Bhwtn61lYYQPg2WREThD3wmuqdhCDiNL44ZX
DmQew+VUsOC+L5/F4Dnu1SLdhtU3kHk+8gW5jdJWKggckJ1GtNEPNuYrMrh8
1FxhgjhbzG+qjMp348suDB0zt0UhWfAW3ChvLrJoL1uThUQ4Cz+QdRKpZ9/Q
PBBiZydmooTfPdcjXer3eGaKS0ZWNwgwvZQkhAKL9Y2qfCWVtK1gKJIt/51l
XY9DYvEP0Y9FRylUxiYLHsqFf7CjK7beuUws6KCZcCAhV4gBri7fMUm25idT
SV4R/+pzNrZ6nXqUvJqpOfOzhQwGj5EFHnL/2s/GkYHYS57ZnKfSq1sRMjsd
q7evunpAdqurSl1WRK1Y7T4DoVRakej1yiGk97uyC7/ulj9p6RzPgIikQ5Az
orNtO6JDoNoPlN/S1jqvMEO4U1R/3I5tMASB0l6XwBx4HVU9KqwtR0BYEiGy
/0Z6BSSrdGUUHN5hqhvwic0ww2otnVUg/82wTLkdeXkZ4GuwJpGQ+hVsfyFk
XZQg31ZaopfamBesDWIia361DCsjVcURD8m7k19vQFs3/md3UTYJAsmQ3tYg
VmiXST4JK4qvHUxNJi3ixbI3HZBlai8eQrXtLOgkb7yUJhrovrkYT5x6MsIe
mQvRRP/Uki7hYIg7Ct/qkYCB6EiXZpTVdM+RterHGJW1dAbyE2c5hoEfms1v
WpzOVgqArcv3eZuoFtkE38r/2EeviPLV0LpPw8Rr8vZsnfBJ/+JLUdr/ewvN
y7fOyfiEFcdpENOl30fu7Kk201SVHjxjGklZPXm2QVpNXclvsiy5M6FN+5cW
LS/Ny0fPbyzm/8gwF06fffOFRY+AuEhyJA/FgtJn7PsgKZo8Yq+vA+oMFDk2
pqPchyGLySGM0tYSeDWkMcVFURXbau4SIzIfpKGvSvrJYdcYqE80spsuj+5Y
t8qq+7IrBk2XVUsBY97Wq2SuiA0hMRN6EjiFbj2GdAsUHiQWJlOF6k5h2ChE
kvxtaAS0rOK7NT7PDq2KejA5wOBHzFr3E/V4LdK6odyxfdP3QyMoCytXXmVX
VC5p8FaMN9feXGKbztwTihG8sowrU41HnpjPalMzwguQL1WONH9xP0bh4YDh
LSbU6wEnr3ahicX+BlcL+XhD3pmOrCjDu1q7And2pUJ8ggIvjUACaEOgoaYh
OJkDgagccgYk8Bek8GIPkS48xtPzrjogP/zJebtFlDlNQq6aWLEGA8vlioaK
MieuFPxxgTYYy2KHS69SqjYeLngkT08nv5/rqEe/iykDJDcfuHT8EGs8dzR3
22WvoLPvdPsKO7N2VazPoSWK/6dQZ6L+3BQa8RQnj1MHe7IqMd5envuP51fW
9hAU2mR6AyxQyOpDe1x1Kw91KGsNezCp1PdAr3L+g9/GTdzVFsxYmiBc2ENP
Ho9UQ9dO61DGSwIhfdyJSWrtNEgU0zGezpQbLj5GCDnJH4WRVlm+s89/8oGE
H8benVHBZEIWSD3yE+vunf7pCTEJFSc0l37kmLnrJrBKbRa1Y+WiImQKsQk8
Jbf7xrF3n2i/LouJX6+dlGEXk7/5+DuyIWdZEoTPjIoesaFYKWehUI+EovKL
LNcOO8qJ9zS0u534ZJZCuIpX6RZ+qpU5dZom6Cixh+kNVD+yOQP7bI2BNZVm
LAkA85VzCWBgcQdoaJiyAjM5kWpIENyXoaxv8Rdug49D3NBHRbEfx+xmvdWB
x6eoWca7M4IfPj2qj52ew8Aa+h/VvDJeLR15+g9RyMGbEiNLSSfqDH0xPKCJ
nCmMHqql/QbG9jxYqeR+gJ9hKlXzWxum5F8GqOX33jSugzJ5xeA9tlPIVgUN
fYXYV+zVUi0sA+Y2LJaZemEZ30uSJowPweSF6y1DL6yaN5pJMxgqpIrJbE0z
bJAFOQ8rjn5nIbSiM7ApeuICWseMRcG7v2Rd5pmEJyZROKtHLeQBio1Tlg32
qziWeggTyIvzX5TlX9z5qjGOx30dTi4udBRlJ/VZjKB88VfRwwI4uBi7Sv/k
ZIw9Wecnx5jimkQkMbqdhEXJYr36a2NR28xF9bvhaVK/OMPxkbIPXzUDghPz
2bqcc7itMgYoEyHVc/5D6Q97F/e4aJVWVu7BaIgysvgzNPsAov5C6FdaL7Jn
y8SAMIKKp9GdhRpU2KxR2eoDGlI/GWQYPkI9peVTtCN1rRazGKMnOFcCDZ27
PbTHQuGlXR+USZRRwZycduZw+cbILVQ3Yl1X7k9mA2W0eFsYuSihGSzynVQX
0UIAN8sNO30vV5s1StSm0IK8zWh3eIMbyC7ObI0PGcrPFynFMzoGVhMrhz14
yuko/J57ow6rSZi/FAnLWgerOhcNq0oLi20pL4WYcuqkIPlHscgyTxW9sN5Y
nwHMMW2RihLBDxLAnlFlE4k5qLnuLD1lI4tdDcuB2p5vXhX4e5WPBMKd2HpZ
iwhM0aJTPtyfWcx2rIjB7KonegbPHySUKH+fb+04Y50LpWB4QJOx4pBKXDkZ
C0kTXObmJL2PgUg+YN2nDxFyOGAcYHyyZ+brtVHfG27CDKSYmJNVr6C/cM9O
Bm93vsfhVQ09CZRXla/gr1UksSKfgTSHmy1Is1+XBHIE3zhTFPiledr+jCxv
jzlO/7/SaNNHyBxks1pEEQI+ZJKzH3SeF6K/iBiaahnjmignU7KvF9gbvKjv
dEhgE9C4uAaiiiPVkPaeuAGPyVczKfHQyMXcwheYwE8Rk9/1evNrAUOT1cg6
8swCbrodU1gzbe7PTaDh1GGEwWJ86ZuXh3g1Le8vO9poQsSVRUbSyleFKHtc
GzPCJ+QXaUtgwcTyAITDeonoU6ptMeuVRVCB7YVhs/N2f7BgYjYQd+RpK3fz
BR1WIs628rldxj7tugwaMkZOyoUaT59TbhulGwudRYApKholRa36gfo7eZpf
EFMjzCJ64Z/wLimsWp0e6WLBUzmoYvqM/IBk2bpy9toZcXXQOhKcVm0UMsLp
OSTMCbJVgCOGnaTbPGKfJJmIeHNJRYhMykzksuZPq6CBg6GDOKeQo99lk6ym
ywYwHQDXDSQJ86TX+CzkxgvLlMYf7kx8EBYnGKF4YNfoN7EO4k6O4n+T6T2t
dZvDUJaxu095dnkMQ4GNpUqWrwQpjjoiqq9ynP7JsglrMJFA+QtzqA0IDg3L
ZSVRJxtRQ5x+6kQplAFVRxHEKoKFHKk0Aga+8Q8CVitocXeae5OcZvd8JTSt
p8PH3abLFwQfssCaaOh61sIp775ZqnCL4zzc6SVn8o3C6EEhJyV06dmrEfJ/
LP8423hOuUvH5d4EY6vkQeRGbsAzNF2nVMCKsL9oQESPMQ/5Iv6GmkI5Xmuy
b05y+GvcHblJ/syvcyTOv8t944sBvYYSK3q3sGlH9wnnzNg/ljS8UlSdUbnY
2lMObqQDpgUbDfohKie4FKiNMrAHb/I+7qLOyTEIz+Hq87wp3Iivr8VoU85S
jOQSfEpj2+7c8WTRbEya3QnjEfDGmQe/dVrJGY3PfXpR6O63V47FXPPK6FFf
KPyIPw/hsNwFxtcgfzw+B5o3SLE0FSuRxR9175J23uz08yLbt8lTloy9vCB8
JBvnGdi22ENpTsLNipWDkItiE7ye3M3BKsI6sK/8Inw+qfUu610U9q2xUJ6Q
B4lL4nJL6vacP4p7p3rjgrSLTxPSFdWbvC/LJO+K+R3CXk/3z08x99PvG3FW
KMZDxv23DPCtnBcvAfcaXa4nlpsRsFI1Bdwz8V3KV1bFnCcF36g6hI5WpKxI
ShLKBwqCDaZ/PjBqQXZGkT3FV2JYTWHcGHJM8vFFwjvQW5ZOansO5vHqStU2
lLM4Ss6LfBrUNzjHBnvbzZGxgFX2eKIRDFOQMBp/jSq06cOmOH8ULYKxqFuI
8VyuTJgin8I3GeYZt8kTi63a58IwBZIoqLgXnpGZvCQCfaPWgE/qFWLP6T7s
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

     "]}], "."],
  Editable->False]], "Print",
 CellChangeTimes->{{3.828011957666909*^9, 3.828011966480695*^9}, {
   3.828012023509549*^9, 3.828012029007886*^9}, 3.828012188431526*^9, 
   3.828014117594108*^9, 3.828016382855328*^9, 3.828016483566409*^9, {
   3.8280172471276293`*^9, 3.82801725466628*^9}, 3.828026402623324*^9, 
   3.828026779957141*^9, 3.8287967876794233`*^9, 3.828798266601783*^9, 
   3.828798450695271*^9, 3.8287985275838423`*^9, 3.82880013547606*^9, 
   3.829063858527815*^9, 3.829064221200469*^9, 3.829065237122726*^9, 
   3.829071280703059*^9, {3.829072312419281*^9, 3.8290723215541887`*^9}, 
   3.8290723650044127`*^9, 3.829072547610487*^9, 3.829072770815683*^9, 
   3.8291302990945587`*^9, 3.8291400358560266`*^9, 3.829140083736237*^9, 
   3.829140388565032*^9, 3.829140469199071*^9, 3.829140628618739*^9, 
   3.829161101918124*^9, 3.8292302830996237`*^9, 3.829230359115128*^9, {
   3.8292304865045853`*^9, 3.829230532945326*^9}, 3.829230583283064*^9, 
   3.82923078141436*^9, 3.829231593062356*^9, {3.8292316870685053`*^9, 
   3.829231691594183*^9}, 3.829231844112771*^9, 3.8292319189120693`*^9, 
   3.829232747632535*^9},
 CellLabel->
  "During evaluation of \
In[8]:=",ExpressionUUID->"ada8475f-886d-4b1d-b64d-d91d8e0e4848"]
}, Open  ]],

Cell["\<\
Now we sample from an experiment. We first create a randomly sampled \
\[OpenCurlyDoubleQuote]true\[CloseCurlyDoubleQuote] model. We set the random \
seed so that the work is reproducible. \
\>", "Text",
 CellChangeTimes->{{3.828012078771331*^9, 3.828012085264226*^9}, {
  3.829230984392055*^9, 3.829230994964651*^9}, {3.82923176718137*^9, 
  3.829231778273087*^9}},ExpressionUUID->"7c33564b-5b6f-4442-9d53-\
ed1ec32b8d0e"],

Cell[BoxData[{
 RowBox[{"SeedRandom", "[", "123", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"err", "=", 
   RowBox[{"{", 
    RowBox[{"0.0015", ",", "0.0036", ",", " ", "0.031"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"ptrue", ",", "Xtrue"}], "}"}], "=", 
   RowBox[{"CreateModel", "[", 
    RowBox[{"n", ",", "err"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.828012033887195*^9, 3.8280120720041847`*^9}, {
   3.8280129139336853`*^9, 3.828012914441627*^9}, {3.828013358553833*^9, 
   3.828013387038226*^9}, {3.8280454436077833`*^9, 3.8280455093673477`*^9}, 
   3.828045687449832*^9, {3.828045746729362*^9, 3.828045749291943*^9}, {
   3.828045796439727*^9, 3.828045797083734*^9}, {3.828093907322156*^9, 
   3.828093917474889*^9}, {3.828796794339963*^9, 3.8287968174639807`*^9}, {
   3.828798086805421*^9, 3.828798112300729*^9}, {3.828798304813259*^9, 
   3.8287983051025143`*^9}, {3.82879835334979*^9, 3.8287983620651207`*^9}, {
   3.8292318021260147`*^9, 3.8292318223964252`*^9}, 3.829232263537313*^9},
 CellLabel->"In[15]:=",ExpressionUUID->"2dc6181c-0de6-4d7a-b843-e89251bb67a5"],

Cell[TextData[{
 "Now for various values of ",
 Cell[BoxData[
  FormBox["S", TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "fd16b73b-910b-4eb0-9173-7380732ccf04"],
 " we simulate the noise from finite sampling. Our fit to the model is the \
simplest possible estimator: we do a truncated least squares fit, i.e. we \
first do a least squares fit and then reset any value less than zero to be \
equal to zero. More sophisticated estimators (nonnegative least squares, ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["l", "1"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "4c80916a-302a-4f6f-8e48-d2d60832666c"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["l", "2"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "7f4491fe-24c9-43cb-93ea-d3cb8eaa4843"],
 " regularization (LASSO and Ridge regression) or even elastic nets are \
possible. We leave this to future work. \n\nHere, the array ",
 Cell[BoxData[
  FormBox["t", TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "beb28a57-830c-4d74-9c71-b9a33527eaad"],
 " contains the raw estimates for each value of ",
 Cell[BoxData[
  FormBox["S", TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "3f6e5103-4d51-4daa-ab3d-cd1932020397"],
 ". Then ",
 Cell[BoxData[
  FormBox["\[Lambda]t", TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "e1b813ea-acc4-4f8e-8769-e31476c9a106"],
 " contains the estimates of the Pauli channel eigenvalues for each of the \
circuits, differenced from the true values.  "
}], "Text",
 CellChangeTimes->{{3.8292309970569563`*^9, 3.8292311837730703`*^9}, {
  3.82923123673903*^9, 3.8292312981717777`*^9}, {3.829231470270108*^9, 
  3.829231502589892*^9}},ExpressionUUID->"993e04e9-417d-45b9-bf8b-\
f106d1494725"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"kmax", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"t", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", "kmax"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"b", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", "kmax"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"k", "=", "1"}], ",", 
    RowBox[{"k", "\[LessEqual]", "kmax"}], ",", 
    RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"S", "=", 
      SuperscriptBox["10", 
       RowBox[{"k", "+", "3"}]]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"b", "\[LeftDoubleBracket]", "k", "\[RightDoubleBracket]"}], 
      "=", 
      RowBox[{"SampleModel", "[", 
       RowBox[{"A", ",", "Xtrue", ",", "S"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"time", "=", 
      RowBox[{
       RowBox[{"AbsoluteTiming", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"t", "\[LeftDoubleBracket]", "k", "\[RightDoubleBracket]"}],
           "=", 
          RowBox[{"LeastSquares", "[", 
           RowBox[{"A", ",", 
            RowBox[{
            "b", "\[LeftDoubleBracket]", "k", "\[RightDoubleBracket]"}]}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"t", "\[LeftDoubleBracket]", "k", "\[RightDoubleBracket]"}],
           "=", 
          RowBox[{
           RowBox[{
           "t", "\[LeftDoubleBracket]", "k", "\[RightDoubleBracket]"}], "/.", 
           
           RowBox[{"{", 
            RowBox[{
             RowBox[{"_", "?", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"#", "\[LessEqual]", "0"}], "&"}], ")"}]}], "\[Rule]",
              "0"}], "}"}]}]}], ";"}], "\[IndentingNewLine]", "]"}], 
       "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<Time = \>\"", ",", "time"}], "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"\[Lambda]t", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Exp", "[", 
       RowBox[{"-", 
        RowBox[{"t", "\[LeftDoubleBracket]", "k", "\[RightDoubleBracket]"}]}],
        "]"}], "-", 
      RowBox[{"Exp", "[", 
       RowBox[{"-", "Xtrue"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "kmax"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.829141279924818*^9, 3.829141284365934*^9}, {
   3.82914143126615*^9, 3.829141446992282*^9}, {3.829141685758768*^9, 
   3.8291416859898777`*^9}, {3.829149735687461*^9, 3.829149838332727*^9}, 
   3.829150590607448*^9, {3.829150666927354*^9, 3.8291506922925377`*^9}, {
   3.829150906451844*^9, 3.829150915842819*^9}, {3.829151395461233*^9, 
   3.829151403828528*^9}, 3.829152388727147*^9, {3.829152575623844*^9, 
   3.829152585482148*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"8bec09de-08a9-4eb4-ac85-9a9cba7f3c1f"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time = \"\>", "\[InvisibleSpace]", "18.143658`"}],
  SequenceForm["Time = ", 18.143658],
  Editable->False]], "Print",
 CellChangeTimes->{3.8291611312143297`*^9, 3.829230790924294*^9, 
  3.8292319492488203`*^9, 3.8292322881881857`*^9, 3.829233933119969*^9},
 CellLabel->
  "During evaluation of \
In[18]:=",ExpressionUUID->"f33908c8-fe75-4885-ae43-4f950a390a74"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time = \"\>", "\[InvisibleSpace]", "17.597384`"}],
  SequenceForm["Time = ", 17.597384],
  Editable->False]], "Print",
 CellChangeTimes->{3.8291611312143297`*^9, 3.829230790924294*^9, 
  3.8292319492488203`*^9, 3.8292322881881857`*^9, 3.829233951305537*^9},
 CellLabel->
  "During evaluation of \
In[18]:=",ExpressionUUID->"2fe74e4b-2463-423c-bb00-9988b187da21"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Time = \"\>", "\[InvisibleSpace]", "18.261562`"}],
  SequenceForm["Time = ", 18.261562],
  Editable->False]], "Print",
 CellChangeTimes->{3.8291611312143297`*^9, 3.829230790924294*^9, 
  3.8292319492488203`*^9, 3.8292322881881857`*^9, 3.829233970161162*^9},
 CellLabel->
  "During evaluation of \
In[18]:=",ExpressionUUID->"c307376c-b45d-4861-b4b8-3e2a44828122"]
}, Open  ]]
}, Open  ]],

Cell["\<\
We can visualize how the circuit eigenvalue estimates converge by looking at \
a histogram. \
\>", "Text",
 CellChangeTimes->{{3.8292313073153*^9, 
  3.8292313255819283`*^9}},ExpressionUUID->"d2315bdc-7626-4af9-bfa8-\
fc599e6c5429"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Histogram", "[", 
  RowBox[{
   RowBox[{"100", " ", "\[Lambda]t"}], ",", "233", ",", "\"\<Probability\>\"",
    ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1.2"}], ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"All", ",", "All"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"ChartLayout", "\[Rule]", "\"\<Overlapped\>\""}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"FontFamily", "\[Rule]", "\"\<Lato\>\""}], ",", "14", ",", 
      RowBox[{"GrayLevel", "[", "0", "]"}]}], "}"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
   RowBox[{"Axes", "\[Rule]", "False"}], ",", 
   RowBox[{"Frame", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"True", ",", "False"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"FrameTicks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Automatic", ",", "None"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Automatic", ",", "None"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<Probability\>\"", ",", "None"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\!\(\*SuperscriptBox[\(10\), \(2\)]\) \[Times] \
(\!\(\*SubscriptBox[OverscriptBox[\(\[CapitalLambda]\), \(^\)], \(\[Mu]\)]\)-\
\!\(\*SubscriptBox[\(\[CapitalLambda]\), \(\[Mu]\)]\))\>\"", ",", "None"}], 
       "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "None"}], ",", 
   RowBox[{"ChartLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "\"\<S = \!\(\*SuperscriptBox[\(10\), \(4\)]\)\>\"", ",", 
        "\"\<S = \!\(\*SuperscriptBox[\(10\), \(5\)]\)\>\"", ",", 
        "\"\<S = \!\(\*SuperscriptBox[\(10\), \(6\)]\)\>\""}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{".8", ",", ".8"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"Background", "\[Rule]", "White"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "GoldenRatio"}], ",", 
   RowBox[{"ChartStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"Opacity", "[", "1", "]"}], ",", 
        RowBox[{"RGBColor", "[", "\"\<#CD6355\>\"", "]"}]}], "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"Opacity", "[", ".8", "]"}], ",", 
        RowBox[{"RGBColor", "[", "\"\<#22B6DB\>\"", "]"}]}], "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"Opacity", "[", ".8", "]"}], ",", 
        RowBox[{"RGBColor", "[", "\"\<#ECCD3E\>\"", "]"}]}], "]"}]}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.82914199128106*^9, 3.829141991545527*^9}, {
   3.829142385430746*^9, 3.829142435964816*^9}, {3.829142475677449*^9, 
   3.829142554890707*^9}, {3.8291426699938993`*^9, 3.829142785862761*^9}, {
   3.829142880991646*^9, 3.829142905297431*^9}, {3.829142943590337*^9, 
   3.829142957927734*^9}, {3.829143102636497*^9, 3.829143132235793*^9}, {
   3.829143186996496*^9, 3.829143216970893*^9}, {3.829143431993545*^9, 
   3.829143513815914*^9}, {3.8291436143803673`*^9, 3.829143648612256*^9}, {
   3.8291440468014727`*^9, 3.829144128488223*^9}, {3.829144169527796*^9, 
   3.829144274727355*^9}, {3.829145361925693*^9, 3.829145372600486*^9}, {
   3.8291454287348213`*^9, 3.8291454347526627`*^9}, {3.82914585175421*^9, 
   3.829145852051875*^9}, {3.8291459043329573`*^9, 3.829145920448371*^9}, {
   3.8291462263957033`*^9, 3.829146227101489*^9}, {3.82914636849585*^9, 
   3.829146387933535*^9}, {3.82914662939036*^9, 3.829146643420821*^9}, {
   3.8291473584710493`*^9, 3.829147505265253*^9}, 3.8291476173138866`*^9, {
   3.8291476761758013`*^9, 3.82914769237395*^9}, {3.829147736382361*^9, 
   3.829147771748444*^9}, {3.8291478089907513`*^9, 3.829147818067459*^9}, {
   3.829147936334114*^9, 3.82914793942802*^9}, {3.829147990742524*^9, 
   3.829148081498004*^9}, {3.8291481536107073`*^9, 3.829148170073453*^9}, {
   3.8291482785431633`*^9, 3.8291484367419024`*^9}, {3.8291486076158657`*^9, 
   3.829148620429961*^9}, {3.829148696099029*^9, 3.829148871695397*^9}, {
   3.829148917905622*^9, 3.829149015335765*^9}, {3.829149072672501*^9, 
   3.82914912503864*^9}, 3.8291491916612186`*^9, {3.8291503313202553`*^9, 
   3.829150357494357*^9}, {3.8291525899208527`*^9, 3.8291525901449003`*^9}, {
   3.829153520382003*^9, 3.8291535222041187`*^9}, 3.829153820997469*^9, {
   3.829153896923677*^9, 3.829153911070726*^9}, {3.8291539914115562`*^9, 
   3.829154041783516*^9}, {3.8291540772003736`*^9, 3.8291542509396677`*^9}, {
   3.829154552236639*^9, 3.829154555817408*^9}, {3.829154608884053*^9, 
   3.8291546098928328`*^9}, {3.829154648934219*^9, 3.8291546675495167`*^9}, {
   3.8291547026265*^9, 3.829154703540098*^9}, {3.829154735626371*^9, 
   3.8291547375043716`*^9}, {3.8291610531040707`*^9, 3.829161065165245*^9}, {
   3.829233925432275*^9, 3.8292339284141893`*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"7a2f1b2b-c248-40ad-9c39-43a63a72a9bc"],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{
     {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[
      Opacity[0.]], {{}, 
       {RGBColor[0.803921568627451, 0.38823529411764707`, 0.3333333333333333],
         Opacity[1], EdgeForm[Opacity[0.]], 
        RectangleBox[{-5.8, 0.}, {-5.78, 0.0001972386587771203},
         RoundingRadius->0], 
        RectangleBox[{-3.78, 0.}, {-3.76, 0.0001972386587771203},
         RoundingRadius->0], 
        RectangleBox[{-3.46, 0.}, {-3.44, 0.0001972386587771203},
         RoundingRadius->0], 
        RectangleBox[{-3.38, 0.}, {-3.36, 0.0001972386587771203},
         RoundingRadius->0], 
        RectangleBox[{-3.24, 0.}, {-3.22, 0.0001972386587771203},
         RoundingRadius->0], 
        RectangleBox[{-3.2, 0.}, {-3.18, 0.0001972386587771203},
         RoundingRadius->0], 
        RectangleBox[{-3.08, 0.}, {-3.06, 0.0001972386587771203},
         RoundingRadius->0], 
        RectangleBox[{-3.06, 0.}, {-3.04, 0.0001972386587771203},
         RoundingRadius->0], 
        RectangleBox[{-3.04, 0.}, {-3.02, 0.0001972386587771203},
         RoundingRadius->0], 
        RectangleBox[{-2.8, 0.}, {-2.78, 0.0003944773175542406},
         RoundingRadius->0], 
        RectangleBox[{-2.76, 0.}, {-2.74, 0.0003944773175542406},
         RoundingRadius->0], 
        RectangleBox[{-2.68, 0.}, {-2.66, 0.0001972386587771203},
         RoundingRadius->0], 
        RectangleBox[{-2.56, 0.}, {-2.54, 0.0001972386587771203},
         RoundingRadius->0], 
        RectangleBox[{-2.52, 0.}, {-2.5, 0.0001972386587771203},
         RoundingRadius->0], 
        RectangleBox[{-2.42, 0.}, {-2.4, 0.0003944773175542406},
         RoundingRadius->0], 
        RectangleBox[{-2.4, 0.}, {-2.38, 0.0001972386587771203},
         RoundingRadius->0], 
        RectangleBox[{-2.38, 0.}, {-2.36, 0.0003944773175542406},
         RoundingRadius->0], 
        RectangleBox[{-2.36, 0.}, {-2.34, 0.0001972386587771203},
         RoundingRadius->0], 
        RectangleBox[{-2.34, 0.}, {-2.32, 0.0001972386587771203},
         RoundingRadius->0], 
        RectangleBox[{-2.3, 0.}, {-2.28, 0.0001972386587771203},
         RoundingRadius->0], 
        RectangleBox[{-2.28, 0.}, {-2.26, 0.0001972386587771203},
         RoundingRadius->0], 
        RectangleBox[{-2.26, 0.}, {-2.24, 0.0001972386587771203},
         RoundingRadius->0], 
        RectangleBox[{-2.24, 0.}, {-2.22, 0.0001972386587771203},
         RoundingRadius->0], 
        RectangleBox[{-2.22, 0.}, {-2.2, 0.0003944773175542406},
         RoundingRadius->0], 
        RectangleBox[{-2.2, 0.}, {-2.18, 0.0003944773175542406},
         RoundingRadius->0], 
        RectangleBox[{-2.18, 0.}, {-2.16, 0.0001972386587771203},
         RoundingRadius->0], 
        RectangleBox[{-2.16, 0.}, {-2.14, 0.0003944773175542406},
         RoundingRadius->0], 
        RectangleBox[{-2.14, 0.}, {-2.12, 0.0001972386587771203},
         RoundingRadius->0], 
        RectangleBox[{-2.12, 0.}, {-2.1, 0.0001972386587771203},
         RoundingRadius->0], 
        RectangleBox[{-2.1, 0.}, {-2.08, 0.0001972386587771203},
         RoundingRadius->0], 
        RectangleBox[{-2.08, 0.}, {-2.06, 0.0001972386587771203},
         RoundingRadius->0], 
        RectangleBox[{-2.06, 0.}, {-2.04, 0.0001972386587771203},
         RoundingRadius->0], 
        RectangleBox[{-2.02, 0.}, {-2., 0.000591715976331361},
         RoundingRadius->0], 
        RectangleBox[{-1.96, 0.}, {-1.94, 0.0003944773175542406},
         RoundingRadius->0], 
        RectangleBox[{-1.94, 0.}, {-1.92, 0.001183431952662722},
         RoundingRadius->0], 
        RectangleBox[{-1.92, 0.}, {-1.9, 0.000591715976331361},
         RoundingRadius->0], 
        RectangleBox[{-1.9, 0.}, {-1.88, 0.0003944773175542406},
         RoundingRadius->0], 
        RectangleBox[{-1.88, 0.}, {-1.86, 0.000591715976331361},
         RoundingRadius->0], 
        RectangleBox[{-1.86, 0.}, {-1.84, 0.0007889546351084812},
         RoundingRadius->0], 
        RectangleBox[{-1.84, 0.}, {-1.82, 0.0007889546351084812},
         RoundingRadius->0], 
        RectangleBox[{-1.82, 0.}, {-1.8, 0.0001972386587771203},
         RoundingRadius->0], 
        RectangleBox[{-1.8, 0.}, {-1.78, 0.0007889546351084812},
         RoundingRadius->0], 
        RectangleBox[{-1.78, 0.}, {-1.76, 0.000591715976331361},
         RoundingRadius->0], 
        RectangleBox[{-1.76, 0.}, {-1.74, 0.0003944773175542406},
         RoundingRadius->0], 
        RectangleBox[{-1.74, 0.}, {-1.72, 0.000591715976331361},
         RoundingRadius->0], 
        RectangleBox[{-1.72, 0.}, {-1.7, 0.0001972386587771203},
         RoundingRadius->0], 
        RectangleBox[{-1.7, 0.}, {-1.68, 0.0007889546351084812},
         RoundingRadius->0], 
        RectangleBox[{-1.68, 0.}, {-1.66, 0.0007889546351084812},
         RoundingRadius->0], 
        RectangleBox[{-1.66, 0.}, {-1.64, 0.0003944773175542406},
         RoundingRadius->0], 
        RectangleBox[{-1.62, 0.}, {-1.6, 0.0003944773175542406},
         RoundingRadius->0], 
        RectangleBox[{-1.6, 0.}, {-1.58, 0.0003944773175542406},
         RoundingRadius->0], 
        RectangleBox[{-1.58, 0.}, {-1.56, 0.000591715976331361},
         RoundingRadius->0], 
        RectangleBox[{-1.56, 0.}, {-1.54, 0.0009861932938856016},
         RoundingRadius->0], 
        RectangleBox[{-1.54, 0.}, {-1.52, 0.001183431952662722},
         RoundingRadius->0], 
        RectangleBox[{-1.52, 0.}, {-1.5, 0.000591715976331361},
         RoundingRadius->0], 
        RectangleBox[{-1.5, 0.}, {-1.48, 0.000591715976331361},
         RoundingRadius->0], 
        RectangleBox[{-1.48, 0.}, {-1.46, 0.0007889546351084812},
         RoundingRadius->0], 
        RectangleBox[{-1.46, 0.}, {-1.44, 0.000591715976331361},
         RoundingRadius->0], 
        RectangleBox[{-1.44, 0.}, {-1.42, 0.0009861932938856016},
         RoundingRadius->0], 
        RectangleBox[{-1.42, 0.}, {-1.4, 0.0007889546351084812},
         RoundingRadius->0], 
        RectangleBox[{-1.4, 0.}, {-1.38, 0.0017751479289940828},
         RoundingRadius->0], 
        RectangleBox[{-1.38, 0.}, {-1.36, 0.0007889546351084812},
         RoundingRadius->0], 
        RectangleBox[{-1.36, 0.}, {-1.34, 0.000591715976331361},
         RoundingRadius->0], 
        RectangleBox[{-1.34, 0.}, {-1.32, 0.0007889546351084812},
         RoundingRadius->0], 
        RectangleBox[{-1.32, 0.}, {-1.3, 0.0007889546351084812},
         RoundingRadius->0], 
        RectangleBox[{-1.3, 0.}, {-1.28, 0.0009861932938856016},
         RoundingRadius->0], 
        RectangleBox[{-1.28, 0.}, {-1.26, 0.0017751479289940828},
         RoundingRadius->0], 
        RectangleBox[{-1.26, 0.}, {-1.24, 0.0013806706114398422},
         RoundingRadius->0], 
        RectangleBox[{-1.24, 0.}, {-1.22, 0.0009861932938856016},
         RoundingRadius->0], 
        RectangleBox[{-1.22, 0.}, {-1.2, 0.0007889546351084812},
         RoundingRadius->0], 
        RectangleBox[{-1.2, 0.}, {-1.18, 0.003155818540433925},
         RoundingRadius->0], 
        RectangleBox[{-1.18, 0.}, {-1.16, 0.0013806706114398422},
         RoundingRadius->0], 
        RectangleBox[{-1.16, 0.}, {-1.14, 0.0019723865877712033},
         RoundingRadius->0], 
        RectangleBox[{-1.14, 0.}, {-1.12, 0.0017751479289940828},
         RoundingRadius->0], 
        RectangleBox[{-1.12, 0.}, {-1.1, 0.002366863905325444},
         RoundingRadius->0], 
        RectangleBox[{-1.1, 0.}, {-1.08, 0.002564102564102564},
         RoundingRadius->0], 
        RectangleBox[{-1.08, 0.}, {-1.06, 0.0029585798816568047},
         RoundingRadius->0], 
        RectangleBox[{-1.06, 0.}, {-1.04, 0.0019723865877712033},
         RoundingRadius->0], 
        RectangleBox[{-1.04, 0.}, {-1.02, 0.0021696252465483235},
         RoundingRadius->0], 
        RectangleBox[{-1.02, 0.}, {-1., 0.0027613412228796844},
         RoundingRadius->0], 
        RectangleBox[{-1., 0.}, {-0.98, 0.004536489151873767},
         RoundingRadius->0], 
        RectangleBox[{-0.98, 0.}, {-0.96, 0.0021696252465483235},
         RoundingRadius->0], 
        RectangleBox[{-0.96, 0.}, {-0.94, 0.0029585798816568047},
         RoundingRadius->0], 
        RectangleBox[{-0.94, 0.}, {-0.92, 0.0029585798816568047},
         RoundingRadius->0], 
        RectangleBox[{-0.92, 0.}, {-0.9, 0.0029585798816568047},
         RoundingRadius->0], 
        RectangleBox[{-0.9, 0.}, {-0.88, 0.004339250493096647},
         RoundingRadius->0], 
        RectangleBox[{-0.88, 0.}, {-0.86, 0.0053254437869822485},
         RoundingRadius->0], 
        RectangleBox[{-0.86, 0.}, {-0.84, 0.004930966469428008},
         RoundingRadius->0], 
        RectangleBox[{-0.84, 0.}, {-0.82, 0.005522682445759369},
         RoundingRadius->0], 
        RectangleBox[{-0.82, 0.}, {-0.8, 0.005128205128205128},
         RoundingRadius->0], 
        RectangleBox[{-0.8, 0.}, {-0.78, 0.0039447731755424065},
         RoundingRadius->0], 
        RectangleBox[{-0.78, 0.}, {-0.76, 0.005719921104536489},
         RoundingRadius->0], 
        RectangleBox[{-0.76, 0.}, {-0.74, 0.004142011834319527},
         RoundingRadius->0], 
        RectangleBox[{-0.74, 0.}, {-0.72, 0.005719921104536489},
         RoundingRadius->0], 
        RectangleBox[{-0.72, 0.}, {-0.7, 0.005128205128205128},
         RoundingRadius->0], 
        RectangleBox[{-0.7, 0.}, {-0.68, 0.004930966469428008},
         RoundingRadius->0], 
        RectangleBox[{-0.68, 0.}, {-0.66, 0.008284023668639054},
         RoundingRadius->0], 
        RectangleBox[{-0.66, 0.}, {-0.64, 0.007100591715976331},
         RoundingRadius->0], 
        RectangleBox[{-0.64, 0.}, {-0.62, 0.00631163708086785},
         RoundingRadius->0], 
        RectangleBox[{-0.62, 0.}, {-0.6, 0.005917159763313609},
         RoundingRadius->0], 
        RectangleBox[{-0.6, 0.}, {-0.58, 0.00631163708086785},
         RoundingRadius->0], 
        RectangleBox[{-0.58, 0.}, {-0.56, 0.00631163708086785},
         RoundingRadius->0], 
        RectangleBox[{-0.56, 0.}, {-0.54, 0.005522682445759369},
         RoundingRadius->0], 
        RectangleBox[{-0.54, 0.}, {-0.52, 0.007495069033530572},
         RoundingRadius->0], 
        RectangleBox[{-0.52, 0.}, {-0.5, 0.009861932938856016},
         RoundingRadius->0], 
        RectangleBox[{-0.5, 0.}, {-0.48, 0.007297830374753451},
         RoundingRadius->0], 
        RectangleBox[{-0.48, 0.}, {-0.46, 0.008678500986193294},
         RoundingRadius->0], 
        RectangleBox[{-0.46, 0.}, {-0.44, 0.009467455621301775},
         RoundingRadius->0], 
        RectangleBox[{-0.44, 0.}, {-0.42, 0.009270216962524655},
         RoundingRadius->0], 
        RectangleBox[{-0.42, 0.}, {-0.4, 0.010256410256410256},
         RoundingRadius->0], 
        RectangleBox[{-0.4, 0.}, {-0.38, 0.011242603550295858},
         RoundingRadius->0], 
        RectangleBox[{-0.38, 0.}, {-0.36, 0.010453648915187377},
         RoundingRadius->0], 
        RectangleBox[{-0.36, 0.}, {-0.34, 0.011439842209072978},
         RoundingRadius->0], 
        RectangleBox[{-0.34, 0.}, {-0.32, 0.011439842209072978},
         RoundingRadius->0], 
        RectangleBox[{-0.32, 0.}, {-0.3, 0.012031558185404339},
         RoundingRadius->0], 
        RectangleBox[{-0.3, 0.}, {-0.28, 0.011045364891518738},
         RoundingRadius->0], 
        RectangleBox[{-0.28, 0.}, {-0.26, 0.011439842209072978},
         RoundingRadius->0], 
        RectangleBox[{-0.26, 0.}, {-0.24, 0.011439842209072978},
         RoundingRadius->0], 
        RectangleBox[{-0.24, 0.}, {-0.22, 0.01282051282051282},
         RoundingRadius->0], 
        RectangleBox[{-0.22, 0.}, {-0.2, 0.01321499013806706},
         RoundingRadius->0], 
        RectangleBox[{-0.2, 0.}, {-0.18, 0.015581854043392506},
         RoundingRadius->0], 
        RectangleBox[{-0.18, 0.}, {-0.16, 0.014990138067061143},
         RoundingRadius->0], 
        RectangleBox[{-0.16, 0.}, {-0.14, 0.01242603550295858},
         RoundingRadius->0], 
        RectangleBox[{-0.14, 0.}, {-0.12, 0.014595660749506903},
         RoundingRadius->0], 
        RectangleBox[{-0.12, 0.}, {-0.1, 0.016568047337278107},
         RoundingRadius->0], 
        RectangleBox[{-0.1, 0.}, {-0.08, 0.014990138067061143},
         RoundingRadius->0], 
        RectangleBox[{-0.08, 0.}, {-0.06, 0.015581854043392506},
         RoundingRadius->0], 
        RectangleBox[{-0.06, 0.}, {-0.04, 0.013806706114398421},
         RoundingRadius->0], 
        RectangleBox[{-0.04, 0.}, {-0.02, 0.013806706114398421},
         RoundingRadius->0], 
        RectangleBox[{-0.02, 0.}, {0., 0.016173570019723867},
         RoundingRadius->0], 
        RectangleBox[{0., 0.}, {0.02, 0.015976331360946745},
         RoundingRadius->0], 
        RectangleBox[{0.02, 0.}, {0.04, 0.016173570019723867},
         RoundingRadius->0], 
        RectangleBox[{0.04, 0.}, {0.06, 0.01893491124260355},
         RoundingRadius->0], 
        RectangleBox[{0.06, 0.}, {0.08, 0.01775147928994083},
         RoundingRadius->0], 
        RectangleBox[{0.08, 0.}, {0.1, 0.021104536489151875},
         RoundingRadius->0], 
        RectangleBox[{0.1, 0.}, {0.12, 0.02031558185404339},
         RoundingRadius->0], 
        RectangleBox[{0.12, 0.}, {0.14, 0.0242603550295858},
         RoundingRadius->0], 
        RectangleBox[{0.14, 0.}, {0.16, 0.021104536489151875},
         RoundingRadius->0], 
        RectangleBox[{0.16, 0.}, {0.18, 0.023274161735700197},
         RoundingRadius->0], 
        RectangleBox[{0.18, 0.}, {0.2, 0.023076923076923078},
         RoundingRadius->0], 
        RectangleBox[{0.2, 0.}, {0.22, 0.023076923076923078},
         RoundingRadius->0], 
        RectangleBox[{0.22, 0.}, {0.24, 0.02564102564102564},
         RoundingRadius->0], 
        RectangleBox[{0.24, 0.}, {0.26, 0.021893491124260357},
         RoundingRadius->0], 
        RectangleBox[{0.26, 0.}, {0.28, 0.022090729783037475},
         RoundingRadius->0], 
        RectangleBox[{0.28, 0.}, {0.3, 0.01873767258382643},
         RoundingRadius->0], 
        RectangleBox[{0.3, 0.}, {0.32, 0.015384615384615385},
         RoundingRadius->0], 
        RectangleBox[{0.32, 0.}, {0.34, 0.015187376725838263},
         RoundingRadius->0], 
        RectangleBox[{0.34, 0.}, {0.36, 0.013806706114398421},
         RoundingRadius->0], 
        RectangleBox[{0.36, 0.}, {0.38, 0.014990138067061143},
         RoundingRadius->0], 
        RectangleBox[{0.38, 0.}, {0.4, 0.01242603550295858},
         RoundingRadius->0], 
        RectangleBox[{0.4, 0.}, {0.42, 0.011045364891518738},
         RoundingRadius->0], 
        RectangleBox[{0.42, 0.}, {0.44, 0.011834319526627219},
         RoundingRadius->0], 
        RectangleBox[{0.44, 0.}, {0.46, 0.010256410256410256},
         RoundingRadius->0], 
        RectangleBox[{0.46, 0.}, {0.48, 0.008875739644970414},
         RoundingRadius->0], 
        RectangleBox[{0.48, 0.}, {0.5, 0.005917159763313609},
         RoundingRadius->0], 
        RectangleBox[{0.5, 0.}, {0.52, 0.00611439842209073},
         RoundingRadius->0], 
        RectangleBox[{0.52, 0.}, {0.54, 0.007297830374753451},
         RoundingRadius->0], 
        RectangleBox[{0.54, 0.}, {0.56, 0.00631163708086785},
         RoundingRadius->0], 
        RectangleBox[{0.56, 0.}, {0.58, 0.005719921104536489},
         RoundingRadius->0], 
        RectangleBox[{0.58, 0.}, {0.6, 0.0039447731755424065},
         RoundingRadius->0], 
        RectangleBox[{0.6, 0.}, {0.62, 0.0027613412228796844},
         RoundingRadius->0], 
        RectangleBox[{0.62, 0.}, {0.64, 0.004536489151873767},
         RoundingRadius->0], 
        RectangleBox[{0.64, 0.}, {0.66, 0.0039447731755424065},
         RoundingRadius->0], 
        RectangleBox[{0.66, 0.}, {0.68, 0.004142011834319527},
         RoundingRadius->0], 
        RectangleBox[{0.68, 0.}, {0.7, 0.0027613412228796844},
         RoundingRadius->0], 
        RectangleBox[{0.7, 0.}, {0.72, 0.002564102564102564},
         RoundingRadius->0], 
        RectangleBox[{0.72, 0.}, {0.74, 0.0021696252465483235},
         RoundingRadius->0], 
        RectangleBox[{0.74, 0.}, {0.76, 0.0013806706114398422},
         RoundingRadius->0], 
        RectangleBox[{0.76, 0.}, {0.78, 0.001183431952662722},
         RoundingRadius->0], 
        RectangleBox[{0.78, 0.}, {0.8, 0.0007889546351084812},
         RoundingRadius->0], 
        RectangleBox[{0.8, 0.}, {0.82, 0.000591715976331361},
         RoundingRadius->0], 
        RectangleBox[{0.82, 0.}, {0.84, 0.0007889546351084812},
         RoundingRadius->0], 
        RectangleBox[{0.84, 0.}, {0.86, 0.0003944773175542406},
         RoundingRadius->0], 
        RectangleBox[{0.86, 0.}, {0.88, 0.000591715976331361},
         RoundingRadius->0], 
        RectangleBox[{0.88, 0.}, {0.9, 0.0007889546351084812},
         RoundingRadius->0], 
        RectangleBox[{0.9, 0.}, {0.92, 0.0003944773175542406},
         RoundingRadius->0], 
        RectangleBox[{0.92, 0.}, {0.94, 0.000591715976331361},
         RoundingRadius->0], 
        RectangleBox[{0.94, 0.}, {0.96, 0.0003944773175542406},
         RoundingRadius->0], 
        RectangleBox[{0.96, 0.}, {0.98, 0.000591715976331361},
         RoundingRadius->0], 
        RectangleBox[{0.98, 0.}, {1., 0.0001972386587771203},
         RoundingRadius->0], 
        RectangleBox[{1.04, 0.}, {1.06, 0.0001972386587771203},
         RoundingRadius->0], 
        RectangleBox[{1.06, 0.}, {1.08, 0.0001972386587771203},
         RoundingRadius->0], 
        RectangleBox[{1.1, 0.}, {1.12, 0.0001972386587771203},
         RoundingRadius->0], 
        RectangleBox[{1.12, 0.}, {1.14, 0.0001972386587771203},
         RoundingRadius->0], 
        RectangleBox[{1.14, 0.}, {1.16, 0.0001972386587771203},
         RoundingRadius->0], 
        RectangleBox[{1.16, 0.}, {1.18, 0.0001972386587771203},
         RoundingRadius->0], 
        RectangleBox[{1.24, 0.}, {1.26, 0.0001972386587771203},
         RoundingRadius->0], 
        RectangleBox[{1.26, 0.}, {1.28, 0.0001972386587771203},
         RoundingRadius->0], 
        RectangleBox[{1.28, 0.}, {1.3, 0.0001972386587771203},
         RoundingRadius->0], 
        RectangleBox[{1.4, 0.}, {1.42, 0.0001972386587771203},
         RoundingRadius->0], 
        RectangleBox[{1.42, 0.}, {1.44, 0.0003944773175542406},
         RoundingRadius->0], 
        RectangleBox[{1.6, 0.}, {1.62, 0.0001972386587771203},
         RoundingRadius->0], 
        RectangleBox[{1.82, 0.}, {1.84, 0.0001972386587771203},
         RoundingRadius->0], 
        RectangleBox[{1.9, 0.}, {1.92, 0.0001972386587771203},
         RoundingRadius->0]}, {}, {}}, {{}, 
       {RGBColor[
        0.13333333333333333`, 0.7137254901960784, 0.8588235294117647], 
        Opacity[0.8], EdgeForm[Opacity[0.]], 
        RectangleBox[{-1.12, 0.}, {-1.1, 0.0001972386587771203},
         RoundingRadius->0], 
        RectangleBox[{-0.92, 0.}, {-0.9, 0.0003944773175542406},
         RoundingRadius->0], 
        RectangleBox[{-0.88, 0.}, {-0.86, 0.0001972386587771203},
         RoundingRadius->0], 
        RectangleBox[{-0.86, 0.}, {-0.84, 0.0001972386587771203},
         RoundingRadius->0], 
        RectangleBox[{-0.84, 0.}, {-0.82, 0.0001972386587771203},
         RoundingRadius->0], 
        RectangleBox[{-0.78, 0.}, {-0.76, 0.0003944773175542406},
         RoundingRadius->0], 
        RectangleBox[{-0.76, 0.}, {-0.74, 0.0001972386587771203},
         RoundingRadius->0], 
        RectangleBox[{-0.72, 0.}, {-0.7, 0.0001972386587771203},
         RoundingRadius->0], 
        RectangleBox[{-0.68, 0.}, {-0.66, 0.0003944773175542406},
         RoundingRadius->0], 
        RectangleBox[{-0.66, 0.}, {-0.64, 0.0003944773175542406},
         RoundingRadius->0], 
        RectangleBox[{-0.64, 0.}, {-0.62, 0.0007889546351084812},
         RoundingRadius->0], 
        RectangleBox[{-0.62, 0.}, {-0.6, 0.0007889546351084812},
         RoundingRadius->0], 
        RectangleBox[{-0.58, 0.}, {-0.56, 0.0007889546351084812},
         RoundingRadius->0], 
        RectangleBox[{-0.56, 0.}, {-0.54, 0.0019723865877712033},
         RoundingRadius->0], 
        RectangleBox[{-0.54, 0.}, {-0.52, 0.002366863905325444},
         RoundingRadius->0], 
        RectangleBox[{-0.52, 0.}, {-0.5, 0.0021696252465483235},
         RoundingRadius->0], 
        RectangleBox[{-0.5, 0.}, {-0.48, 0.0029585798816568047},
         RoundingRadius->0], 
        RectangleBox[{-0.48, 0.}, {-0.46, 0.002366863905325444},
         RoundingRadius->0], 
        RectangleBox[{-0.46, 0.}, {-0.44, 0.003155818540433925},
         RoundingRadius->0], 
        RectangleBox[{-0.44, 0.}, {-0.42, 0.0027613412228796844},
         RoundingRadius->0], 
        RectangleBox[{-0.42, 0.}, {-0.4, 0.005719921104536489},
         RoundingRadius->0], 
        RectangleBox[{-0.4, 0.}, {-0.38, 0.004339250493096647},
         RoundingRadius->0], 
        RectangleBox[{-0.38, 0.}, {-0.36, 0.004733727810650888},
         RoundingRadius->0], 
        RectangleBox[{-0.36, 0.}, {-0.34, 0.00650887573964497},
         RoundingRadius->0], 
        RectangleBox[{-0.34, 0.}, {-0.32, 0.004930966469428008},
         RoundingRadius->0], 
        RectangleBox[{-0.32, 0.}, {-0.3, 0.009270216962524655},
         RoundingRadius->0], 
        RectangleBox[{-0.3, 0.}, {-0.28, 0.009664694280078896},
         RoundingRadius->0], 
        RectangleBox[{-0.28, 0.}, {-0.26, 0.009467455621301775},
         RoundingRadius->0], 
        RectangleBox[{-0.26, 0.}, {-0.24, 0.010650887573964497},
         RoundingRadius->0], 
        RectangleBox[{-0.24, 0.}, {-0.22, 0.013412228796844181},
         RoundingRadius->0], 
        RectangleBox[{-0.22, 0.}, {-0.2, 0.017159763313609466},
         RoundingRadius->0], 
        RectangleBox[{-0.2, 0.}, {-0.18, 0.01893491124260355},
         RoundingRadius->0], 
        RectangleBox[{-0.18, 0.}, {-0.16, 0.02504930966469428},
         RoundingRadius->0], 
        RectangleBox[{-0.16, 0.}, {-0.14, 0.026232741617357003},
         RoundingRadius->0], 
        RectangleBox[{-0.14, 0.}, {-0.12, 0.033136094674556214},
         RoundingRadius->0], 
        RectangleBox[{-0.12, 0.}, {-0.1, 0.03471400394477318},
         RoundingRadius->0], 
        RectangleBox[{-0.1, 0.}, {-0.08, 0.04477317554240631},
         RoundingRadius->0], 
        RectangleBox[{-0.08, 0.}, {-0.06, 0.04319526627218935},
         RoundingRadius->0], 
        RectangleBox[{-0.06, 0.}, {-0.04, 0.04792899408284024},
         RoundingRadius->0], 
        RectangleBox[{-0.04, 0.}, {-0.02, 0.05384615384615385},
         RoundingRadius->0], 
        RectangleBox[{-0.02, 0.}, {0., 0.05226824457593689},
         RoundingRadius->0], 
        RectangleBox[{0., 0.}, {0.02, 0.05759368836291913},
         RoundingRadius->0], 
        RectangleBox[{0.02, 0.}, {0.04, 0.04970414201183432},
         RoundingRadius->0], 
        RectangleBox[{0.04, 0.}, {0.06, 0.05562130177514793},
         RoundingRadius->0], 
        RectangleBox[{0.06, 0.}, {0.08, 0.05069033530571992},
         RoundingRadius->0], 
        RectangleBox[{0.08, 0.}, {0.1, 0.04220907297830375},
         RoundingRadius->0], 
        RectangleBox[{0.1, 0.}, {0.12, 0.03550295857988166},
         RoundingRadius->0], 
        RectangleBox[{0.12, 0.}, {0.14, 0.03195266272189349},
         RoundingRadius->0], 
        RectangleBox[{0.14, 0.}, {0.16, 0.029191321499013805},
         RoundingRadius->0], 
        RectangleBox[{0.16, 0.}, {0.18, 0.020907297830374753},
         RoundingRadius->0], 
        RectangleBox[{0.18, 0.}, {0.2, 0.021893491124260357},
         RoundingRadius->0], 
        RectangleBox[{0.2, 0.}, {0.22, 0.01854043392504931},
         RoundingRadius->0], 
        RectangleBox[{0.22, 0.}, {0.24, 0.015187376725838263},
         RoundingRadius->0], 
        RectangleBox[{0.24, 0.}, {0.26, 0.011439842209072978},
         RoundingRadius->0], 
        RectangleBox[{0.26, 0.}, {0.28, 0.01242603550295858},
         RoundingRadius->0], 
        RectangleBox[{0.28, 0.}, {0.3, 0.008678500986193294},
         RoundingRadius->0], 
        RectangleBox[{0.3, 0.}, {0.32, 0.006903353057199211},
         RoundingRadius->0], 
        RectangleBox[{0.32, 0.}, {0.34, 0.006903353057199211},
         RoundingRadius->0], 
        RectangleBox[{0.34, 0.}, {0.36, 0.004339250493096647},
         RoundingRadius->0], 
        RectangleBox[{0.36, 0.}, {0.38, 0.004142011834319527},
         RoundingRadius->0], 
        RectangleBox[{0.38, 0.}, {0.4, 0.002564102564102564},
         RoundingRadius->0], 
        RectangleBox[{0.4, 0.}, {0.42, 0.003747534516765286},
         RoundingRadius->0], 
        RectangleBox[{0.42, 0.}, {0.44, 0.0015779092702169625},
         RoundingRadius->0], 
        RectangleBox[{0.44, 0.}, {0.46, 0.0007889546351084812},
         RoundingRadius->0], 
        RectangleBox[{0.46, 0.}, {0.48, 0.001183431952662722},
         RoundingRadius->0], 
        RectangleBox[{0.48, 0.}, {0.5, 0.0013806706114398422},
         RoundingRadius->0], 
        RectangleBox[{0.5, 0.}, {0.52, 0.0009861932938856016},
         RoundingRadius->0], 
        RectangleBox[{0.52, 0.}, {0.54, 0.0013806706114398422},
         RoundingRadius->0], 
        RectangleBox[{0.54, 0.}, {0.56, 0.0007889546351084812},
         RoundingRadius->0], 
        RectangleBox[{0.56, 0.}, {0.58, 0.001183431952662722},
         RoundingRadius->0], 
        RectangleBox[{0.58, 0.}, {0.6, 0.0003944773175542406},
         RoundingRadius->0], 
        RectangleBox[{0.6, 0.}, {0.62, 0.0001972386587771203},
         RoundingRadius->0], 
        RectangleBox[{0.62, 0.}, {0.64, 0.0003944773175542406},
         RoundingRadius->0], 
        RectangleBox[{0.64, 0.}, {0.66, 0.0001972386587771203},
         RoundingRadius->0], 
        RectangleBox[{0.66, 0.}, {0.68, 0.0001972386587771203},
         RoundingRadius->0], 
        RectangleBox[{0.68, 0.}, {0.7, 0.0001972386587771203},
         RoundingRadius->0], 
        RectangleBox[{0.76, 0.}, {0.78, 0.0001972386587771203},
         RoundingRadius->0]}, {}, {}}, {{}, 
       {RGBColor[0.9254901960784314, 0.803921568627451, 0.24313725490196078`],
         Opacity[0.8], EdgeForm[Opacity[0.]], 
        RectangleBox[{-0.48, 0.}, {-0.46, 0.0001972386587771203},
         RoundingRadius->0], 
        RectangleBox[{-0.34, 0.}, {-0.32, 0.0001972386587771203},
         RoundingRadius->0], 
        RectangleBox[{-0.3, 0.}, {-0.28, 0.0001972386587771203},
         RoundingRadius->0], 
        RectangleBox[{-0.28, 0.}, {-0.26, 0.0001972386587771203},
         RoundingRadius->0], 
        RectangleBox[{-0.26, 0.}, {-0.24, 0.000591715976331361},
         RoundingRadius->0], 
        RectangleBox[{-0.24, 0.}, {-0.22, 0.0007889546351084812},
         RoundingRadius->0], 
        RectangleBox[{-0.22, 0.}, {-0.2, 0.0013806706114398422},
         RoundingRadius->0], 
        RectangleBox[{-0.2, 0.}, {-0.18, 0.0013806706114398422},
         RoundingRadius->0], 
        RectangleBox[{-0.18, 0.}, {-0.16, 0.0039447731755424065},
         RoundingRadius->0], 
        RectangleBox[{-0.16, 0.}, {-0.14, 0.007692307692307693},
         RoundingRadius->0], 
        RectangleBox[{-0.14, 0.}, {-0.12, 0.009072978303747535},
         RoundingRadius->0], 
        RectangleBox[{-0.12, 0.}, {-0.1, 0.017159763313609466},
         RoundingRadius->0], 
        RectangleBox[{-0.1, 0.}, {-0.08, 0.028994082840236687},
         RoundingRadius->0], 
        RectangleBox[{-0.08, 0.}, {-0.06, 0.04970414201183432},
         RoundingRadius->0], 
        RectangleBox[{-0.06, 0.}, {-0.04, 0.08658777120315582},
         RoundingRadius->0], 
        RectangleBox[{-0.04, 0.}, {-0.02, 0.12603550295857988},
         RoundingRadius->0], 
        RectangleBox[{-0.02, 0.}, {0., 0.1650887573964497},
         RoundingRadius->0], 
        RectangleBox[{0., 0.}, {0.02, 0.16587771203155818},
         RoundingRadius->0], 
        RectangleBox[{0.02, 0.}, {0.04, 0.12682445759368835},
         RoundingRadius->0], 
        RectangleBox[{0.04, 0.}, {0.06, 0.08165680473372781},
         RoundingRadius->0], 
        RectangleBox[{0.06, 0.}, {0.08, 0.052662721893491124},
         RoundingRadius->0], 
        RectangleBox[{0.08, 0.}, {0.1, 0.03254437869822485},
         RoundingRadius->0], 
        RectangleBox[{0.1, 0.}, {0.12, 0.017159763313609466},
         RoundingRadius->0], 
        RectangleBox[{0.12, 0.}, {0.14, 0.011637080867850098},
         RoundingRadius->0], 
        RectangleBox[{0.14, 0.}, {0.16, 0.005522682445759369},
         RoundingRadius->0], 
        RectangleBox[{0.16, 0.}, {0.18, 0.0033530571992110452},
         RoundingRadius->0], 
        RectangleBox[{0.18, 0.}, {0.2, 0.001183431952662722},
         RoundingRadius->0], 
        RectangleBox[{0.2, 0.}, {0.22, 0.0007889546351084812},
         RoundingRadius->0], 
        RectangleBox[{0.22, 0.}, {0.24, 0.0009861932938856016},
         RoundingRadius->0], 
        RectangleBox[{0.24, 0.}, {0.26, 0.000591715976331361},
         RoundingRadius->
          0]}, {}, {}}}, {{{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {}}, {{{}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {}}, {{{}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}}, {}}}}, InsetBox[
     TemplateBox[{
      "\"S = \\!\\(\\*SuperscriptBox[\\(10\\), \\(4\\)]\\)\"", 
       "\"S = \\!\\(\\*SuperscriptBox[\\(10\\), \\(5\\)]\\)\"", 
       "\"S = \\!\\(\\*SuperscriptBox[\\(10\\), \\(6\\)]\\)\""},
      "SwatchLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    Opacity[0.]]], 
                    Opacity[1], 
                    RGBColor[
                    0.803921568627451, 0.38823529411764707`, 
                    0.3333333333333333]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.023999999999999994`] -> 
                    Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    Opacity[0.]]], 
                    Opacity[0.8], 
                    RGBColor[
                    0.13333333333333333`, 0.7137254901960784, 
                    0.8588235294117647]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.023999999999999994`] -> 
                    Baseline)], #2}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    Opacity[0.]]], 
                    Opacity[0.8], 
                    RGBColor[
                    0.9254901960784314, 0.803921568627451, 
                    0.24313725490196078`]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.023999999999999994`] -> 
                    Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Lato", FontSize -> 14, 
          GrayLevel[0]}, Background -> Automatic, StripOnInput -> False], 
        TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    RowBox[{"Opacity", "[", "1", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.803921568627451, 0.38823529411764707`, 
                    0.3333333333333333], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5359477124183007, 0.25882352941176473`, 
                    0.2222222222222222], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.803921568627451`", ",", "0.38823529411764707`",
                     ",", "0.3333333333333333`"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.803921568627451, 0.38823529411764707`, 
                    0.3333333333333333]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.803921568627451, 0.38823529411764707`, 
                    0.3333333333333333], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.8`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.13333333333333333`, 0.7137254901960784, 
                    0.8588235294117647], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.08888888888888889, 0.4758169934640523, 
                    0.5725490196078431], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.13333333333333333`", ",", 
                    "0.7137254901960784`", ",", "0.8588235294117647`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.13333333333333333`, 0.7137254901960784, 
                    0.8588235294117647]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.13333333333333333`, 0.7137254901960784, 
                    0.8588235294117647], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.8`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9254901960784314, 0.803921568627451, 
                    0.24313725490196078`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6169934640522876, 0.5359477124183007, 
                    0.16209150326797386`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.9254901960784314`", ",", "0.803921568627451`", 
                    ",", "0.24313725490196078`"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.9254901960784314, 0.803921568627451, 
                    0.24313725490196078`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.9254901960784314, 0.803921568627451, 
                    0.24313725490196078`], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
               RowBox[{"{", "}"}]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"Automatic", ",", "Automatic", ",", "Automatic"}], 
                   "}"}], ",", 
                 RowBox[{"{", "None", "}"}]}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"FontFamily", "\[Rule]", "\"Lato\""}], ",", "14", 
                 ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False]}], 
               "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{0.8, 0.8}], ImageScaled[{0.5, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio, 1.618033988749895],
   Axes->{False, False},
   AxesLabel->{None, None},
   AxesOrigin->{-1.244, 0.},
   Background->GrayLevel[1],
   DisplayFunction->Identity,
   Frame->{{True, False}, {True, False}},
   FrameLabel->{{
      FormBox["\"Probability\"", TraditionalForm], None}, {
      FormBox[
      "\"\\!\\(\\*SuperscriptBox[\\(10\\), \\(2\\)]\\) \[Times] \
(\\!\\(\\*SubscriptBox[OverscriptBox[\\(\[CapitalLambda]\\), \\(^\\)], \\(\
\[Mu]\\)]\\)-\\!\\(\\*SubscriptBox[\\(\[CapitalLambda]\\), \
\\(\[Mu]\\)]\\))\"", TraditionalForm], None}},
   FrameTicks->{{Automatic, None}, {Automatic, None}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImageSize->Medium,
   LabelStyle->{FontFamily -> "Lato", 14, 
     GrayLevel[0]},
   PlotRange->{{-1.2, 1}, {All, All}},
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {None, 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{
       Directive[
        EdgeForm[
         Directive[
          Opacity[0.]]], 
        RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], {{{{}, {
           Directive[
            Opacity[0.5], 
            Directive[
             EdgeForm[
              Directive[
               Opacity[0.]]], 
             RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], 
            Directive[
             Opacity[1], 
             RGBColor[
             0.803921568627451, 0.38823529411764707`, 
              0.3333333333333333]]], {{{
              
              Rectangle[{-5.8, 0.}, {-5.78, 0.0001972386587771203}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-3.78, 0.}, {-3.76, 0.0001972386587771203}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-3.46, 0.}, {-3.44, 0.0001972386587771203}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-3.38, 0.}, {-3.36, 0.0001972386587771203}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-3.24, 0.}, {-3.22, 0.0001972386587771203}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-3.2, 0.}, {-3.18, 0.0001972386587771203}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-3.08, 0.}, {-3.06, 0.0001972386587771203}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-3.06, 0.}, {-3.04, 0.0001972386587771203}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-3.04, 0.}, {-3.02, 0.0001972386587771203}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-2.8, 0.}, {-2.78, 0.0003944773175542406}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-2.76, 0.}, {-2.74, 0.0003944773175542406}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-2.68, 0.}, {-2.66, 0.0001972386587771203}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-2.56, 0.}, {-2.54, 0.0001972386587771203}, 
               "RoundingRadius" -> 0]}}, {{
              Rectangle[{-2.52, 0.}, {-2.5, 0.0001972386587771203}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-2.42, 0.}, {-2.4, 0.0003944773175542406}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-2.4, 0.}, {-2.38, 0.0001972386587771203}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-2.38, 0.}, {-2.36, 0.0003944773175542406}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-2.36, 0.}, {-2.34, 0.0001972386587771203}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-2.34, 0.}, {-2.32, 0.0001972386587771203}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-2.3, 0.}, {-2.28, 0.0001972386587771203}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-2.28, 0.}, {-2.26, 0.0001972386587771203}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-2.26, 0.}, {-2.24, 0.0001972386587771203}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-2.24, 0.}, {-2.22, 0.0001972386587771203}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-2.22, 0.}, {-2.2, 0.0003944773175542406}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-2.2, 0.}, {-2.18, 0.0003944773175542406}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-2.18, 0.}, {-2.16, 0.0001972386587771203}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-2.16, 0.}, {-2.14, 0.0003944773175542406}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-2.14, 0.}, {-2.12, 0.0001972386587771203}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-2.12, 0.}, {-2.1, 0.0001972386587771203}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-2.1, 0.}, {-2.08, 0.0001972386587771203}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-2.08, 0.}, {-2.06, 0.0001972386587771203}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-2.06, 0.}, {-2.04, 0.0001972386587771203}, 
               "RoundingRadius" -> 0]}}, {{
              Rectangle[{-2.02, 0.}, {-2., 0.000591715976331361}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-1.96, 0.}, {-1.94, 0.0003944773175542406}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-1.94, 0.}, {-1.92, 0.001183431952662722}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-1.92, 0.}, {-1.9, 0.000591715976331361}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-1.9, 0.}, {-1.88, 0.0003944773175542406}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-1.88, 0.}, {-1.86, 0.000591715976331361}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-1.86, 0.}, {-1.84, 0.0007889546351084812}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-1.84, 0.}, {-1.82, 0.0007889546351084812}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-1.82, 0.}, {-1.8, 0.0001972386587771203}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-1.8, 0.}, {-1.78, 0.0007889546351084812}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-1.78, 0.}, {-1.76, 0.000591715976331361}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-1.76, 0.}, {-1.74, 0.0003944773175542406}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-1.74, 0.}, {-1.72, 0.000591715976331361}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-1.72, 0.}, {-1.7, 0.0001972386587771203}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-1.7, 0.}, {-1.68, 0.0007889546351084812}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-1.68, 0.}, {-1.66, 0.0007889546351084812}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-1.66, 0.}, {-1.64, 0.0003944773175542406}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-1.62, 0.}, {-1.6, 0.0003944773175542406}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-1.6, 0.}, {-1.58, 0.0003944773175542406}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-1.58, 0.}, {-1.56, 0.000591715976331361}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-1.56, 0.}, {-1.54, 0.0009861932938856016}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-1.54, 0.}, {-1.52, 0.001183431952662722}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-1.52, 0.}, {-1.5, 0.000591715976331361}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-1.5, 0.}, {-1.48, 0.000591715976331361}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-1.48, 0.}, {-1.46, 0.0007889546351084812}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-1.46, 0.}, {-1.44, 0.000591715976331361}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-1.44, 0.}, {-1.42, 0.0009861932938856016}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-1.42, 0.}, {-1.4, 0.0007889546351084812}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-1.4, 0.}, {-1.38, 0.0017751479289940828`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-1.38, 0.}, {-1.36, 0.0007889546351084812}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-1.36, 0.}, {-1.34, 0.000591715976331361}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-1.34, 0.}, {-1.32, 0.0007889546351084812}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-1.32, 0.}, {-1.3, 0.0007889546351084812}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-1.3, 0.}, {-1.28, 0.0009861932938856016}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-1.28, 0.}, {-1.26, 0.0017751479289940828`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-1.26, 0.}, {-1.24, 0.0013806706114398422`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-1.24, 0.}, {-1.22, 0.0009861932938856016}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-1.22, 0.}, {-1.2, 0.0007889546351084812}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-1.2, 0.}, {-1.18, 0.003155818540433925}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-1.18, 0.}, {-1.16, 0.0013806706114398422`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-1.16, 0.}, {-1.14, 0.0019723865877712033`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-1.14, 0.}, {-1.12, 0.0017751479289940828`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-1.12, 0.}, {-1.1, 0.002366863905325444}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-1.1, 0.}, {-1.08, 0.002564102564102564}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-1.08, 0.}, {-1.06, 0.0029585798816568047`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-1.06, 0.}, {-1.04, 0.0019723865877712033`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-1.04, 0.}, {-1.02, 0.0021696252465483235`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-1.02, 0.}, {-1., 0.0027613412228796844`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-1., 0.}, {-0.98, 0.004536489151873767}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-0.98, 0.}, {-0.96, 0.0021696252465483235`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-0.96, 0.}, {-0.94, 0.0029585798816568047`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-0.94, 0.}, {-0.92, 0.0029585798816568047`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-0.92, 0.}, {-0.9, 0.0029585798816568047`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-0.9, 0.}, {-0.88, 0.004339250493096647}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-0.88, 0.}, {-0.86, 0.0053254437869822485`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-0.86, 0.}, {-0.84, 0.004930966469428008}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-0.84, 0.}, {-0.82, 0.005522682445759369}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-0.82, 0.}, {-0.8, 0.005128205128205128}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-0.8, 0.}, {-0.78, 0.0039447731755424065`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-0.78, 0.}, {-0.76, 0.005719921104536489}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-0.76, 0.}, {-0.74, 0.004142011834319527}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-0.74, 0.}, {-0.72, 0.005719921104536489}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-0.72, 0.}, {-0.7, 0.005128205128205128}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-0.7, 0.}, {-0.68, 0.004930966469428008}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-0.68, 0.}, {-0.66, 0.008284023668639054}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-0.66, 0.}, {-0.64, 0.007100591715976331}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-0.64, 0.}, {-0.62, 0.00631163708086785}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-0.62, 0.}, {-0.6, 0.005917159763313609}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-0.6, 0.}, {-0.58, 0.00631163708086785}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-0.58, 0.}, {-0.56, 0.00631163708086785}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-0.56, 0.}, {-0.54, 0.005522682445759369}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-0.54, 0.}, {-0.52, 0.007495069033530572}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-0.52, 0.}, {-0.5, 0.009861932938856016}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-0.5, 0.}, {-0.48, 0.007297830374753451}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-0.48, 0.}, {-0.46, 0.008678500986193294}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-0.46, 0.}, {-0.44, 0.009467455621301775}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-0.44, 0.}, {-0.42, 0.009270216962524655}, 
               "RoundingRadius" -> 0]}}, {{
              Rectangle[{-0.42, 0.}, {-0.4, 0.010256410256410256`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-0.4, 0.}, {-0.38, 0.011242603550295858`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-0.38, 0.}, {-0.36, 0.010453648915187377`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-0.36, 0.}, {-0.34, 0.011439842209072978`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-0.34, 0.}, {-0.32, 0.011439842209072978`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-0.32, 0.}, {-0.3, 0.012031558185404339`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-0.3, 0.}, {-0.28, 0.011045364891518738`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-0.28, 0.}, {-0.26, 0.011439842209072978`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-0.26, 0.}, {-0.24, 0.011439842209072978`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-0.24, 0.}, {-0.22, 0.01282051282051282}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-0.22, 0.}, {-0.2, 0.01321499013806706}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-0.2, 0.}, {-0.18, 0.015581854043392506`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-0.18, 0.}, {-0.16, 0.014990138067061143`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-0.16, 0.}, {-0.14, 0.01242603550295858}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-0.14, 0.}, {-0.12, 0.014595660749506903`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-0.12, 0.}, {-0.1, 0.016568047337278107`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-0.1, 0.}, {-0.08, 0.014990138067061143`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-0.08, 0.}, {-0.06, 0.015581854043392506`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-0.06, 0.}, {-0.04, 0.013806706114398421`}, 
               "RoundingRadius" -> 0]}}, {{
              Rectangle[{-0.04, 0.}, {-0.02, 0.013806706114398421`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-0.02, 0.}, {0., 0.016173570019723867`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0., 0.}, {0.02, 0.015976331360946745`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.02, 0.}, {0.04, 0.016173570019723867`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.04, 0.}, {0.06, 0.01893491124260355}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.06, 0.}, {0.08, 0.01775147928994083}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.08, 0.}, {0.1, 0.021104536489151875`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.1, 0.}, {0.12, 0.02031558185404339}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.12, 0.}, {0.14, 0.0242603550295858}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.14, 0.}, {0.16, 0.021104536489151875`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.16, 0.}, {0.18, 0.023274161735700197`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.18, 0.}, {0.2, 0.023076923076923078`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.2, 0.}, {0.22, 0.023076923076923078`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.22, 0.}, {0.24, 0.02564102564102564}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.24, 0.}, {0.26, 0.021893491124260357`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.26, 0.}, {0.28, 0.022090729783037475`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.28, 0.}, {0.3, 0.01873767258382643}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.3, 0.}, {0.32, 0.015384615384615385`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.32, 0.}, {0.34, 0.015187376725838263`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.34, 0.}, {0.36, 0.013806706114398421`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.36, 0.}, {0.38, 0.014990138067061143`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.38, 0.}, {0.4, 0.01242603550295858}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.4, 0.}, {0.42, 0.011045364891518738`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.42, 0.}, {0.44, 0.011834319526627219`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.44, 0.}, {0.46, 0.010256410256410256`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.46, 0.}, {0.48, 0.008875739644970414}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.48, 0.}, {0.5, 0.005917159763313609}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.5, 0.}, {0.52, 0.00611439842209073}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.52, 0.}, {0.54, 0.007297830374753451}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.54, 0.}, {0.56, 0.00631163708086785}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.56, 0.}, {0.58, 0.005719921104536489}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.58, 0.}, {0.6, 0.0039447731755424065`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.6, 0.}, {0.62, 0.0027613412228796844`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.62, 0.}, {0.64, 0.004536489151873767}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.64, 0.}, {0.66, 0.0039447731755424065`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.66, 0.}, {0.68, 0.004142011834319527}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.68, 0.}, {0.7, 0.0027613412228796844`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.7, 0.}, {0.72, 0.002564102564102564}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.72, 0.}, {0.74, 0.0021696252465483235`}, 
               "RoundingRadius" -> 0]}}, {{
              Rectangle[{0.74, 0.}, {0.76, 0.0013806706114398422`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.76, 0.}, {0.78, 0.001183431952662722}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.78, 0.}, {0.8, 0.0007889546351084812}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.8, 0.}, {0.82, 0.000591715976331361}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.82, 0.}, {0.84, 0.0007889546351084812}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.84, 0.}, {0.86, 0.0003944773175542406}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.86, 0.}, {0.88, 0.000591715976331361}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.88, 0.}, {0.9, 0.0007889546351084812}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.9, 0.}, {0.92, 0.0003944773175542406}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.92, 0.}, {0.94, 0.000591715976331361}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.94, 0.}, {0.96, 0.0003944773175542406}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.96, 0.}, {0.98, 0.000591715976331361}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.98, 0.}, {1., 0.0001972386587771203}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{1.04, 0.}, {1.06, 0.0001972386587771203}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{1.06, 0.}, {1.08, 0.0001972386587771203}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{1.1, 0.}, {1.12, 0.0001972386587771203}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{1.12, 0.}, {1.14, 0.0001972386587771203}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{1.14, 0.}, {1.16, 0.0001972386587771203}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{1.16, 0.}, {1.18, 0.0001972386587771203}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{1.24, 0.}, {1.26, 0.0001972386587771203}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{1.26, 0.}, {1.28, 0.0001972386587771203}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{1.28, 0.}, {1.3, 0.0001972386587771203}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{1.4, 0.}, {1.42, 0.0001972386587771203}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{1.42, 0.}, {1.44, 0.0003944773175542406}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{1.6, 0.}, {1.62, 0.0001972386587771203}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{1.82, 0.}, {1.84, 0.0001972386587771203}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{1.9, 0.}, {1.92, 0.0001972386587771203}, 
               "RoundingRadius" -> 0]}}}}, {}, {}}}, {{{}, {
           Directive[
            Opacity[0.5], 
            Directive[
             EdgeForm[
              Directive[
               Opacity[0.]]], 
             RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], 
            Directive[
             Opacity[0.8], 
             RGBColor[
             0.13333333333333333`, 0.7137254901960784, 
              0.8588235294117647]]], {{{
              
              Rectangle[{-1.12, 0.}, {-1.1, 0.0001972386587771203}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-0.92, 0.}, {-0.9, 0.0003944773175542406}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-0.88, 0.}, {-0.86, 0.0001972386587771203}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-0.86, 0.}, {-0.84, 0.0001972386587771203}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-0.84, 0.}, {-0.82, 0.0001972386587771203}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-0.78, 0.}, {-0.76, 0.0003944773175542406}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-0.76, 0.}, {-0.74, 0.0001972386587771203}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-0.72, 0.}, {-0.7, 0.0001972386587771203}, 
               "RoundingRadius" -> 0]}}, {{
              Rectangle[{-0.68, 0.}, {-0.66, 0.0003944773175542406}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-0.66, 0.}, {-0.64, 0.0003944773175542406}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-0.64, 0.}, {-0.62, 0.0007889546351084812}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-0.62, 0.}, {-0.6, 0.0007889546351084812}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-0.58, 0.}, {-0.56, 0.0007889546351084812}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-0.56, 0.}, {-0.54, 0.0019723865877712033`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-0.54, 0.}, {-0.52, 0.002366863905325444}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-0.52, 0.}, {-0.5, 0.0021696252465483235`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-0.5, 0.}, {-0.48, 0.0029585798816568047`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-0.48, 0.}, {-0.46, 0.002366863905325444}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-0.46, 0.}, {-0.44, 0.003155818540433925}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-0.44, 0.}, {-0.42, 0.0027613412228796844`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-0.42, 0.}, {-0.4, 0.005719921104536489}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-0.4, 0.}, {-0.38, 0.004339250493096647}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-0.38, 0.}, {-0.36, 0.004733727810650888}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-0.36, 0.}, {-0.34, 0.00650887573964497}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-0.34, 0.}, {-0.32, 0.004930966469428008}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-0.32, 0.}, {-0.3, 0.009270216962524655}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-0.3, 0.}, {-0.28, 0.009664694280078896}, 
               "RoundingRadius" -> 0]}}, {{
              Rectangle[{-0.28, 0.}, {-0.26, 0.009467455621301775}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-0.26, 0.}, {-0.24, 0.010650887573964497`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-0.24, 0.}, {-0.22, 0.013412228796844181`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-0.22, 0.}, {-0.2, 0.017159763313609466`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-0.2, 0.}, {-0.18, 0.01893491124260355}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-0.18, 0.}, {-0.16, 0.02504930966469428}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-0.16, 0.}, {-0.14, 0.026232741617357003`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-0.14, 0.}, {-0.12, 0.033136094674556214`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-0.12, 0.}, {-0.1, 0.03471400394477318}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-0.1, 0.}, {-0.08, 0.04477317554240631}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-0.08, 0.}, {-0.06, 0.04319526627218935}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-0.06, 0.}, {-0.04, 0.04792899408284024}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-0.04, 0.}, {-0.02, 0.05384615384615385}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-0.02, 0.}, {0., 0.05226824457593689}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0., 0.}, {0.02, 0.05759368836291913}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.02, 0.}, {0.04, 0.04970414201183432}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.04, 0.}, {0.06, 0.05562130177514793}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.06, 0.}, {0.08, 0.05069033530571992}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.08, 0.}, {0.1, 0.04220907297830375}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.1, 0.}, {0.12, 0.03550295857988166}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.12, 0.}, {0.14, 0.03195266272189349}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.14, 0.}, {0.16, 0.029191321499013805`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.16, 0.}, {0.18, 0.020907297830374753`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.18, 0.}, {0.2, 0.021893491124260357`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.2, 0.}, {0.22, 0.01854043392504931}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.22, 0.}, {0.24, 0.015187376725838263`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.24, 0.}, {0.26, 0.011439842209072978`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.26, 0.}, {0.28, 0.01242603550295858}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.28, 0.}, {0.3, 0.008678500986193294}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.3, 0.}, {0.32, 0.006903353057199211}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.32, 0.}, {0.34, 0.006903353057199211}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.34, 0.}, {0.36, 0.004339250493096647}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.36, 0.}, {0.38, 0.004142011834319527}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.38, 0.}, {0.4, 0.002564102564102564}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.4, 0.}, {0.42, 0.003747534516765286}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.42, 0.}, {0.44, 0.0015779092702169625`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.44, 0.}, {0.46, 0.0007889546351084812}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.46, 0.}, {0.48, 0.001183431952662722}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.48, 0.}, {0.5, 0.0013806706114398422`}, 
               "RoundingRadius" -> 0]}}, {{
              Rectangle[{0.5, 0.}, {0.52, 0.0009861932938856016}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.52, 0.}, {0.54, 0.0013806706114398422`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.54, 0.}, {0.56, 0.0007889546351084812}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.56, 0.}, {0.58, 0.001183431952662722}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.58, 0.}, {0.6, 0.0003944773175542406}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.6, 0.}, {0.62, 0.0001972386587771203}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.62, 0.}, {0.64, 0.0003944773175542406}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.64, 0.}, {0.66, 0.0001972386587771203}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.66, 0.}, {0.68, 0.0001972386587771203}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.68, 0.}, {0.7, 0.0001972386587771203}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.76, 0.}, {0.78, 0.0001972386587771203}, 
               "RoundingRadius" -> 0]}}}}, {}, {}}}, {{{}, {
           Directive[
            Opacity[0.5], 
            Directive[
             EdgeForm[
              Directive[
               Opacity[0.]]], 
             RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], 
            Directive[
             Opacity[0.8], 
             RGBColor[
             0.9254901960784314, 0.803921568627451, 
              0.24313725490196078`]]], {{{
              
              Rectangle[{-0.48, 0.}, {-0.46, 0.0001972386587771203}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-0.34, 0.}, {-0.32, 0.0001972386587771203}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-0.3, 0.}, {-0.28, 0.0001972386587771203}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-0.28, 0.}, {-0.26, 0.0001972386587771203}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-0.26, 0.}, {-0.24, 0.000591715976331361}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-0.24, 0.}, {-0.22, 0.0007889546351084812}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-0.22, 0.}, {-0.2, 0.0013806706114398422`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-0.2, 0.}, {-0.18, 0.0013806706114398422`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-0.18, 0.}, {-0.16, 0.0039447731755424065`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-0.16, 0.}, {-0.14, 0.007692307692307693}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-0.14, 0.}, {-0.12, 0.009072978303747535}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-0.12, 0.}, {-0.1, 0.017159763313609466`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-0.1, 0.}, {-0.08, 0.028994082840236687`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-0.08, 0.}, {-0.06, 0.04970414201183432}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-0.06, 0.}, {-0.04, 0.08658777120315582}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-0.04, 0.}, {-0.02, 0.12603550295857988`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{-0.02, 0.}, {0., 0.1650887573964497}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0., 0.}, {0.02, 0.16587771203155818`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.02, 0.}, {0.04, 0.12682445759368835`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.04, 0.}, {0.06, 0.08165680473372781}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.06, 0.}, {0.08, 0.052662721893491124`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.08, 0.}, {0.1, 0.03254437869822485}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.1, 0.}, {0.12, 0.017159763313609466`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.12, 0.}, {0.14, 0.011637080867850098`}, 
               "RoundingRadius" -> 0]}}, {{
              Rectangle[{0.14, 0.}, {0.16, 0.005522682445759369}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.16, 0.}, {0.18, 0.0033530571992110452`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.18, 0.}, {0.2, 0.001183431952662722}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.2, 0.}, {0.22, 0.0007889546351084812}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.22, 0.}, {0.24, 0.0009861932938856016}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.24, 0.}, {0.26, 0.000591715976331361}, 
               "RoundingRadius" -> 
               0]}}}}, {}, {}}}}}, {{{{{}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {}}}, {{{{}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {}}}, \
{{{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {}}}}}, {
     AspectRatio -> GoldenRatio, Axes -> {False, False}, 
      AxesLabel -> {None, None}, AxesOrigin -> {-1.244, 0.}, Background -> 
      GrayLevel[1], Frame -> {{True, False}, {True, False}}, 
      FrameLabel -> {{"Probability", None}, {
        "\!\(\*SuperscriptBox[\(10\), \(2\)]\) \[Times] \
(\!\(\*SubscriptBox[OverscriptBox[\(\[CapitalLambda]\), \(^\)], \(\[Mu]\)]\)-\
\!\(\*SubscriptBox[\(\[CapitalLambda]\), \(\[Mu]\)]\))", None}}, 
      FrameTicks -> {{Automatic, None}, {Automatic, None}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
      LabelStyle -> {FontFamily -> "Lato", 14, 
        GrayLevel[0]}, PlotRange -> {{-1.2, 1}, {All, All}}, 
      PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {None, 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], {
     Placed[
      SwatchLegend[{{
         Directive[
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          Opacity[1], 
          RGBColor[
          0.803921568627451, 0.38823529411764707`, 0.3333333333333333]], 
         Directive[
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          Opacity[0.8], 
          RGBColor[
          0.13333333333333333`, 0.7137254901960784, 0.8588235294117647]], 
         Directive[
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          Opacity[0.8], 
          RGBColor[
          0.9254901960784314, 0.803921568627451, 0.24313725490196078`]]}, {
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]]}}, {{
        "S = \!\(\*SuperscriptBox[\(10\), \(4\)]\)", 
         "S = \!\(\*SuperscriptBox[\(10\), \(5\)]\)", 
         "S = \!\(\*SuperscriptBox[\(10\), \(6\)]\)"}, {}}, 
       LegendMarkers -> {{Automatic, Automatic, Automatic}, {None}}, 
       LabelStyle -> {FontFamily -> "Lato", 14, 
         GrayLevel[0]}, LegendLayout -> "Column"], {0.8, 0.8}, Identity]}]& ],
  
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.8291541119752197`*^9, {3.829154158435299*^9, 3.829154251967965*^9}, 
   3.829154556927785*^9, 3.829154611084703*^9, {3.8291546505351887`*^9, 
   3.82915466840897*^9}, 3.829154704385748*^9, 3.829154739053379*^9, 
   3.829161069787469*^9, 3.829161173140338*^9, 3.829230796043186*^9, 
   3.82923215464497*^9, 3.8292323306606483`*^9, 3.829233976457741*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"58e59bef-3fde-41bc-8e53-5a65ec757fc8"]
}, Open  ]],

Cell[TextData[{
 "We are interested in reconstructing the Pauli error rates of each of the \
gates as well, and the array ",
 Cell[BoxData[
  FormBox["pt", TraditionalForm]],ExpressionUUID->
  "87e503db-bc94-4a83-a79f-2091cd390fd7"],
 " contains these estimates. Then ",
 Cell[BoxData[
  FormBox["ptvd", TraditionalForm]],ExpressionUUID->
  "ff0882d6-ba07-43cc-afd1-d757b0e8ea66"],
 " computes the total variation distance between the estimated and true Pauli \
error rates for each gate. We can again plot a histogram to visualize the \
convergence with increasing ",
 Cell[BoxData[
  FormBox["S", TraditionalForm]],ExpressionUUID->
  "c51131d4-7880-4362-982b-48511c93da99"],
 "."
}], "Text",
 CellChangeTimes->{{3.829231329140037*^9, 
  3.829231427078266*^9}},ExpressionUUID->"544ffe74-71a0-44d6-b94d-\
6eab2f009020"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"pt", "=", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"ProbEst", "[", 
       RowBox[{
        RowBox[{"t", "\[LeftDoubleBracket]", "k", "\[RightDoubleBracket]"}], 
        ",", "n", ",", 
        FractionBox["1.0", 
         RowBox[{"2", " ", 
          SuperscriptBox["10", 
           RowBox[{"3", "+", "k"}]]}]]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "kmax"}], "}"}]}], "]"}], "-", 
    RowBox[{"ConstantArray", "[", 
     RowBox[{"ptrue", ",", "3"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ptvd", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Total", "/@", 
      RowBox[{"(", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"Abs", "/@", 
         RowBox[{
         "pt", "\[LeftDoubleBracket]", "k", "\[RightDoubleBracket]"}]}]}], 
       ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "kmax"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"Histogram", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["10", "2"], " ", "ptvd"}], ",", "89", ",", 
   "\"\<Probability\>\"", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"All", ",", "All"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"ChartLayout", "\[Rule]", "\"\<Overlapped\>\""}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"FontFamily", "\[Rule]", "\"\<Lato\>\""}], ",", "14", ",", 
      RowBox[{"GrayLevel", "[", "0", "]"}]}], "}"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
   RowBox[{"Axes", "\[Rule]", "False"}], ",", 
   RowBox[{"Frame", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"True", ",", "False"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<Probability\>\"", ",", "None"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\!\(\*SuperscriptBox[\(10\), \(2\)]\) \[Times] \
TVD(\!\(\*SubscriptBox[OverscriptBox[\(p\), \(^\)], \
\(j\)]\)-\!\(\*SubscriptBox[\(p\), \(j\)]\))\>\"", ",", "None"}], "}"}]}], 
     "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "None"}], ",", 
   RowBox[{"ChartLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "\"\<S = \!\(\*SuperscriptBox[\(10\), \(4\)]\)\>\"", ",", 
        "\"\<S = \!\(\*SuperscriptBox[\(10\), \(5\)]\)\>\"", ",", 
        "\"\<S = \!\(\*SuperscriptBox[\(10\), \(6\)]\)\>\""}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{".8", ",", ".8"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"Background", "\[Rule]", "White"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "GoldenRatio"}], ",", 
   RowBox[{"ChartStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"Opacity", "[", "1", "]"}], ",", 
        RowBox[{"RGBColor", "[", "\"\<#CD6355\>\"", "]"}]}], "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"Opacity", "[", ".8", "]"}], ",", 
        RowBox[{"RGBColor", "[", "\"\<#22B6DB\>\"", "]"}]}], "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"Opacity", "[", ".8", "]"}], ",", 
        RowBox[{"RGBColor", "[", "\"\<#ECCD3E\>\"", "]"}]}], "]"}]}], 
     "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.829149522844617*^9, 3.8291495249542217`*^9}, {
  3.829149609832075*^9, 3.829149646591851*^9}, {3.8291496807367067`*^9, 
  3.829149687919339*^9}, {3.8291498862318573`*^9, 3.8291498946126633`*^9}, {
  3.82915011363275*^9, 3.829150165241973*^9}, {3.829150249148525*^9, 
  3.829150249224743*^9}, {3.829150432470965*^9, 3.829150432846636*^9}, {
  3.8291508920913277`*^9, 3.829150892546283*^9}, {3.8291513115596933`*^9, 
  3.829151311851733*^9}, {3.829152244955202*^9, 3.8291522479628363`*^9}, {
  3.829152322698721*^9, 3.829152326049466*^9}, {3.8291523580318117`*^9, 
  3.829152358151163*^9}, {3.829152603871121*^9, 3.829152640518497*^9}, {
  3.8291526825814037`*^9, 3.829152719268565*^9}, {3.829152961371565*^9, 
  3.82915302320996*^9}, {3.829231431625565*^9, 3.829231441557444*^9}, {
  3.829232167349805*^9, 3.829232167910619*^9}, {3.8292323053131742`*^9, 
  3.829232317108927*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"6101fd18-5ba7-4b7c-9f62-a6e8590302e8"],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{
     {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[
      Opacity[0.]], {{}, 
       {RGBColor[0.803921568627451, 0.38823529411764707`, 0.3333333333333333],
         Opacity[1], EdgeForm[Opacity[0.]], 
        RectangleBox[{0.01, 0.}, {0.02, 0.0022271714922048997},
         RoundingRadius->0], 
        RectangleBox[{0.02, 0.}, {0.03, 0.0033407572383073497},
         RoundingRadius->0], 
        RectangleBox[{0.03, 0.}, {0.04, 0.013363028953229399},
         RoundingRadius->0], 
        RectangleBox[{0.04, 0.}, {0.05, 0.013363028953229399},
         RoundingRadius->0], 
        RectangleBox[{0.05, 0.}, {0.06, 0.021158129175946547},
         RoundingRadius->0], 
        RectangleBox[{0.06, 0.}, {0.07, 0.026726057906458798},
         RoundingRadius->0], 
        RectangleBox[{0.07, 0.}, {0.08, 0.026726057906458798},
         RoundingRadius->0], 
        RectangleBox[{0.08, 0.}, {0.09, 0.02338530066815145},
         RoundingRadius->0], 
        RectangleBox[{0.09, 0.}, {0.1, 0.030066815144766147},
         RoundingRadius->0], 
        RectangleBox[{0.1, 0.}, {0.11, 0.030066815144766147},
         RoundingRadius->0], 
        RectangleBox[{0.11, 0.}, {0.12, 0.02338530066815145},
         RoundingRadius->0], 
        RectangleBox[{0.12, 0.}, {0.13, 0.026726057906458798},
         RoundingRadius->0], 
        RectangleBox[{0.13, 0.}, {0.14, 0.02338530066815145},
         RoundingRadius->0], 
        RectangleBox[{0.14, 0.}, {0.15, 0.030066815144766147},
         RoundingRadius->0], 
        RectangleBox[{0.15, 0.}, {0.16, 0.02338530066815145},
         RoundingRadius->0], 
        RectangleBox[{0.16, 0.}, {0.17, 0.02338530066815145},
         RoundingRadius->0], 
        RectangleBox[{0.17, 0.}, {0.18, 0.021158129175946547},
         RoundingRadius->0], 
        RectangleBox[{0.18, 0.}, {0.19, 0.026726057906458798},
         RoundingRadius->0], 
        RectangleBox[{0.19, 0.}, {0.2, 0.024498886414253896},
         RoundingRadius->0], 
        RectangleBox[{0.2, 0.}, {0.21, 0.028953229398663696},
         RoundingRadius->0], 
        RectangleBox[{0.21, 0.}, {0.22, 0.030066815144766147},
         RoundingRadius->0], 
        RectangleBox[{0.22, 0.}, {0.23, 0.024498886414253896},
         RoundingRadius->0], 
        RectangleBox[{0.23, 0.}, {0.24, 0.017817371937639197},
         RoundingRadius->0], 
        RectangleBox[{0.24, 0.}, {0.25, 0.01670378619153675},
         RoundingRadius->0], 
        RectangleBox[{0.25, 0.}, {0.26, 0.02783964365256125},
         RoundingRadius->0], 
        RectangleBox[{0.26, 0.}, {0.27, 0.015590200445434299},
         RoundingRadius->0], 
        RectangleBox[{0.27, 0.}, {0.28, 0.017817371937639197},
         RoundingRadius->0], 
        RectangleBox[{0.28, 0.}, {0.29, 0.028953229398663696},
         RoundingRadius->0], 
        RectangleBox[{0.29, 0.}, {0.3, 0.017817371937639197},
         RoundingRadius->0], 
        RectangleBox[{0.3, 0.}, {0.31, 0.014476614699331848},
         RoundingRadius->0], 
        RectangleBox[{0.31, 0.}, {0.32, 0.013363028953229399},
         RoundingRadius->0], 
        RectangleBox[{0.32, 0.}, {0.33, 0.015590200445434299},
         RoundingRadius->0], 
        RectangleBox[{0.33, 0.}, {0.34, 0.01893095768374165},
         RoundingRadius->0], 
        RectangleBox[{0.34, 0.}, {0.35, 0.015590200445434299},
         RoundingRadius->0], 
        RectangleBox[{0.35, 0.}, {0.36, 0.01670378619153675},
         RoundingRadius->0], 
        RectangleBox[{0.36, 0.}, {0.37, 0.013363028953229399},
         RoundingRadius->0], 
        RectangleBox[{0.37, 0.}, {0.38, 0.011135857461024499},
         RoundingRadius->0], 
        RectangleBox[{0.38, 0.}, {0.39, 0.01670378619153675},
         RoundingRadius->0], 
        RectangleBox[{0.39, 0.}, {0.4, 0.013363028953229399},
         RoundingRadius->0], 
        RectangleBox[{0.4, 0.}, {0.41, 0.013363028953229399},
         RoundingRadius->0], 
        RectangleBox[{0.41, 0.}, {0.42, 0.014476614699331848},
         RoundingRadius->0], 
        RectangleBox[{0.42, 0.}, {0.43, 0.0077951002227171495},
         RoundingRadius->0], 
        RectangleBox[{0.43, 0.}, {0.44, 0.0077951002227171495},
         RoundingRadius->0], 
        RectangleBox[{0.44, 0.}, {0.45, 0.008908685968819599},
         RoundingRadius->0], 
        RectangleBox[{0.45, 0.}, {0.46, 0.008908685968819599},
         RoundingRadius->0], 
        RectangleBox[{0.46, 0.}, {0.47, 0.011135857461024499},
         RoundingRadius->0], 
        RectangleBox[{0.47, 0.}, {0.48, 0.0033407572383073497},
         RoundingRadius->0], 
        RectangleBox[{0.48, 0.}, {0.49, 0.0066815144766146995},
         RoundingRadius->0], 
        RectangleBox[{0.49, 0.}, {0.5, 0.0066815144766146995},
         RoundingRadius->0], 
        RectangleBox[{0.5, 0.}, {0.51, 0.0066815144766146995},
         RoundingRadius->0], 
        RectangleBox[{0.51, 0.}, {0.52, 0.008908685968819599},
         RoundingRadius->0], 
        RectangleBox[{0.52, 0.}, {0.53, 0.005567928730512249},
         RoundingRadius->0], 
        RectangleBox[{0.53, 0.}, {0.54, 0.004454342984409799},
         RoundingRadius->0], 
        RectangleBox[{0.54, 0.}, {0.55, 0.01002227171492205},
         RoundingRadius->0], 
        RectangleBox[{0.55, 0.}, {0.56, 0.0011135857461024498},
         RoundingRadius->0], 
        RectangleBox[{0.56, 0.}, {0.57, 0.005567928730512249},
         RoundingRadius->0], 
        RectangleBox[{0.57, 0.}, {0.58, 0.005567928730512249},
         RoundingRadius->0], 
        RectangleBox[{0.58, 0.}, {0.59, 0.004454342984409799},
         RoundingRadius->0], 
        RectangleBox[{0.59, 0.}, {0.6, 0.0077951002227171495},
         RoundingRadius->0], 
        RectangleBox[{0.6, 0.}, {0.61, 0.0033407572383073497},
         RoundingRadius->0], 
        RectangleBox[{0.61, 0.}, {0.62, 0.0022271714922048997},
         RoundingRadius->0], 
        RectangleBox[{0.62, 0.}, {0.63, 0.0022271714922048997},
         RoundingRadius->0], 
        RectangleBox[{0.63, 0.}, {0.64, 0.005567928730512249},
         RoundingRadius->0], 
        RectangleBox[{0.64, 0.}, {0.65, 0.0033407572383073497},
         RoundingRadius->0], 
        RectangleBox[{0.65, 0.}, {0.66, 0.0022271714922048997},
         RoundingRadius->0], 
        RectangleBox[{0.66, 0.}, {0.67, 0.0022271714922048997},
         RoundingRadius->0], 
        RectangleBox[{0.67, 0.}, {0.68, 0.0011135857461024498},
         RoundingRadius->0], 
        RectangleBox[{0.68, 0.}, {0.69, 0.0033407572383073497},
         RoundingRadius->0], 
        RectangleBox[{0.7, 0.}, {0.71, 0.004454342984409799},
         RoundingRadius->0], 
        RectangleBox[{0.71, 0.}, {0.72, 0.0022271714922048997},
         RoundingRadius->0], 
        RectangleBox[{0.74, 0.}, {0.75, 0.0033407572383073497},
         RoundingRadius->0], 
        RectangleBox[{0.78, 0.}, {0.79, 0.0022271714922048997},
         RoundingRadius->0], 
        RectangleBox[{0.81, 0.}, {0.82, 0.0011135857461024498},
         RoundingRadius->0], 
        RectangleBox[{0.82, 0.}, {0.83, 0.0011135857461024498},
         RoundingRadius->0], 
        RectangleBox[{0.83, 0.}, {0.84, 0.0022271714922048997},
         RoundingRadius->0], 
        RectangleBox[{0.84, 0.}, {0.85, 0.0011135857461024498},
         RoundingRadius->0], 
        RectangleBox[{0.85, 0.}, {0.86, 0.0011135857461024498},
         RoundingRadius->0], 
        RectangleBox[{0.87, 0.}, {0.88, 0.0011135857461024498},
         RoundingRadius->0], 
        RectangleBox[{0.9, 0.}, {0.91, 0.0011135857461024498},
         RoundingRadius->0], 
        RectangleBox[{0.91, 0.}, {0.92, 0.0011135857461024498},
         RoundingRadius->0], 
        RectangleBox[{0.92, 0.}, {0.93, 0.0011135857461024498},
         RoundingRadius->0], 
        RectangleBox[{0.94, 0.}, {0.95, 0.0011135857461024498},
         RoundingRadius->0], 
        RectangleBox[{0.95, 0.}, {0.96, 0.0011135857461024498},
         RoundingRadius->0], 
        RectangleBox[{0.96, 0.}, {0.97, 0.0011135857461024498},
         RoundingRadius->0], 
        RectangleBox[{0.98, 0.}, {0.99, 0.0011135857461024498},
         RoundingRadius->0], 
        RectangleBox[{1.02, 0.}, {1.03, 0.0011135857461024498},
         RoundingRadius->0], 
        RectangleBox[{1.03, 0.}, {1.04, 0.0011135857461024498},
         RoundingRadius->0], 
        RectangleBox[{1.11, 0.}, {1.12, 0.0011135857461024498},
         RoundingRadius->0], 
        RectangleBox[{1.18, 0.}, {1.19, 0.0011135857461024498},
         RoundingRadius->0], 
        RectangleBox[{1.21, 0.}, {1.22, 0.0011135857461024498},
         RoundingRadius->0], 
        RectangleBox[{1.27, 0.}, {1.28, 0.0011135857461024498},
         RoundingRadius->0], 
        RectangleBox[{1.29, 0.}, {1.3, 0.0011135857461024498},
         RoundingRadius->0], 
        RectangleBox[{1.3, 0.}, {1.31, 0.0011135857461024498},
         RoundingRadius->0]}, {}, {}}, {{}, 
       {RGBColor[
        0.13333333333333333`, 0.7137254901960784, 0.8588235294117647], 
        Opacity[0.8], EdgeForm[Opacity[0.]], 
        RectangleBox[{0., 0.}, {0.01, 0.0022271714922048997},
         RoundingRadius->0], 
        RectangleBox[{0.01, 0.}, {0.02, 0.017817371937639197},
         RoundingRadius->0], 
        RectangleBox[{0.02, 0.}, {0.03, 0.04899777282850779},
         RoundingRadius->0], 
        RectangleBox[{0.03, 0.}, {0.04, 0.08240534521158129},
         RoundingRadius->0], 
        RectangleBox[{0.04, 0.}, {0.05, 0.07461024498886415},
         RoundingRadius->0], 
        RectangleBox[{0.05, 0.}, {0.06, 0.07906458797327394},
         RoundingRadius->0], 
        RectangleBox[{0.06, 0.}, {0.07, 0.07461024498886415},
         RoundingRadius->0], 
        RectangleBox[{0.07, 0.}, {0.08, 0.08685968819599109},
         RoundingRadius->0], 
        RectangleBox[{0.08, 0.}, {0.09, 0.05456570155902005},
         RoundingRadius->0], 
        RectangleBox[{0.09, 0.}, {0.1, 0.07349665924276169},
         RoundingRadius->0], 
        RectangleBox[{0.1, 0.}, {0.11, 0.045657015590200446},
         RoundingRadius->0], 
        RectangleBox[{0.11, 0.}, {0.12, 0.0378619153674833},
         RoundingRadius->0], 
        RectangleBox[{0.12, 0.}, {0.13, 0.036748329621380846},
         RoundingRadius->0], 
        RectangleBox[{0.13, 0.}, {0.14, 0.0378619153674833},
         RoundingRadius->0], 
        RectangleBox[{0.14, 0.}, {0.15, 0.0378619153674833},
         RoundingRadius->0], 
        RectangleBox[{0.15, 0.}, {0.16, 0.031180400890868598},
         RoundingRadius->0], 
        RectangleBox[{0.16, 0.}, {0.17, 0.02338530066815145},
         RoundingRadius->0], 
        RectangleBox[{0.17, 0.}, {0.18, 0.01670378619153675},
         RoundingRadius->0], 
        RectangleBox[{0.18, 0.}, {0.19, 0.013363028953229399},
         RoundingRadius->0], 
        RectangleBox[{0.19, 0.}, {0.2, 0.008908685968819599},
         RoundingRadius->0], 
        RectangleBox[{0.2, 0.}, {0.21, 0.0200445434298441},
         RoundingRadius->0], 
        RectangleBox[{0.21, 0.}, {0.22, 0.013363028953229399},
         RoundingRadius->0], 
        RectangleBox[{0.22, 0.}, {0.23, 0.012249443207126948},
         RoundingRadius->0], 
        RectangleBox[{0.23, 0.}, {0.24, 0.015590200445434299},
         RoundingRadius->0], 
        RectangleBox[{0.24, 0.}, {0.25, 0.004454342984409799},
         RoundingRadius->0], 
        RectangleBox[{0.25, 0.}, {0.26, 0.008908685968819599},
         RoundingRadius->0], 
        RectangleBox[{0.26, 0.}, {0.27, 0.0066815144766146995},
         RoundingRadius->0], 
        RectangleBox[{0.27, 0.}, {0.28, 0.005567928730512249},
         RoundingRadius->0], 
        RectangleBox[{0.28, 0.}, {0.29, 0.005567928730512249},
         RoundingRadius->0], 
        RectangleBox[{0.29, 0.}, {0.3, 0.004454342984409799},
         RoundingRadius->0], 
        RectangleBox[{0.3, 0.}, {0.31, 0.0033407572383073497},
         RoundingRadius->0], 
        RectangleBox[{0.31, 0.}, {0.32, 0.0033407572383073497},
         RoundingRadius->0], 
        RectangleBox[{0.32, 0.}, {0.33, 0.0033407572383073497},
         RoundingRadius->0], 
        RectangleBox[{0.33, 0.}, {0.34, 0.0011135857461024498},
         RoundingRadius->0], 
        RectangleBox[{0.35, 0.}, {0.36, 0.0022271714922048997},
         RoundingRadius->0], 
        RectangleBox[{0.37, 0.}, {0.38, 0.0011135857461024498},
         RoundingRadius->0], 
        RectangleBox[{0.4, 0.}, {0.41, 0.0011135857461024498},
         RoundingRadius->0], 
        RectangleBox[{0.41, 0.}, {0.42, 0.0022271714922048997},
         RoundingRadius->0], 
        RectangleBox[{0.47, 0.}, {0.48, 0.0011135857461024498},
         RoundingRadius->0]}, {}, {}}, {{}, 
       {RGBColor[0.9254901960784314, 0.803921568627451, 0.24313725490196078`],
         Opacity[0.8], EdgeForm[Opacity[0.]], 
        RectangleBox[{0., 0.}, {0.01, 0.061247216035634745},
         RoundingRadius->0], 
        RectangleBox[{0.01, 0.}, {0.02, 0.21380846325167038},
         RoundingRadius->0], 
        RectangleBox[{0.02, 0.}, {0.03, 0.22160356347438753},
         RoundingRadius->0], 
        RectangleBox[{0.03, 0.}, {0.04, 0.14699331848552338},
         RoundingRadius->0], 
        RectangleBox[{0.04, 0.}, {0.05, 0.0801781737193764},
         RoundingRadius->0], 
        RectangleBox[{0.05, 0.}, {0.06, 0.0757238307349666},
         RoundingRadius->0], 
        RectangleBox[{0.06, 0.}, {0.07, 0.031180400890868598},
         RoundingRadius->0], 
        RectangleBox[{0.07, 0.}, {0.08, 0.05679287305122494},
         RoundingRadius->0], 
        RectangleBox[{0.08, 0.}, {0.09, 0.043429844097995544},
         RoundingRadius->0], 
        RectangleBox[{0.09, 0.}, {0.1, 0.021158129175946547},
         RoundingRadius->0], 
        RectangleBox[{0.1, 0.}, {0.11, 0.0200445434298441},
         RoundingRadius->0], 
        RectangleBox[{0.11, 0.}, {0.12, 0.008908685968819599},
         RoundingRadius->0], 
        RectangleBox[{0.12, 0.}, {0.13, 0.008908685968819599},
         RoundingRadius->0], 
        RectangleBox[{0.13, 0.}, {0.14, 0.0022271714922048997},
         RoundingRadius->0], 
        RectangleBox[{0.14, 0.}, {0.15, 0.0033407572383073497},
         RoundingRadius->0], 
        RectangleBox[{0.15, 0.}, {0.16, 0.0011135857461024498},
         RoundingRadius->0], 
        RectangleBox[{0.16, 0.}, {0.17, 0.0011135857461024498},
         RoundingRadius->0], 
        RectangleBox[{0.19, 0.}, {0.2, 0.0011135857461024498},
         RoundingRadius->0], 
        RectangleBox[{0.22, 0.}, {0.23, 0.0011135857461024498},
         RoundingRadius->
          0]}, {}, {}}}, {{{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}}, {}}, {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}}, {}}, {{{}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {}}}}, InsetBox[
     TemplateBox[{
      "\"S = \\!\\(\\*SuperscriptBox[\\(10\\), \\(4\\)]\\)\"", 
       "\"S = \\!\\(\\*SuperscriptBox[\\(10\\), \\(5\\)]\\)\"", 
       "\"S = \\!\\(\\*SuperscriptBox[\\(10\\), \\(6\\)]\\)\""},
      "SwatchLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    Opacity[0.]]], 
                    Opacity[1], 
                    RGBColor[
                    0.803921568627451, 0.38823529411764707`, 
                    0.3333333333333333]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.023999999999999994`] -> 
                    Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    Opacity[0.]]], 
                    Opacity[0.8], 
                    RGBColor[
                    0.13333333333333333`, 0.7137254901960784, 
                    0.8588235294117647]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.023999999999999994`] -> 
                    Baseline)], #2}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    Opacity[0.]]], 
                    Opacity[0.8], 
                    RGBColor[
                    0.9254901960784314, 0.803921568627451, 
                    0.24313725490196078`]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.023999999999999994`] -> 
                    Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Lato", FontSize -> 14, 
          GrayLevel[0]}, Background -> Automatic, StripOnInput -> False], 
        TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    RowBox[{"Opacity", "[", "1", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.803921568627451, 0.38823529411764707`, 
                    0.3333333333333333], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5359477124183007, 0.25882352941176473`, 
                    0.2222222222222222], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.803921568627451`", ",", "0.38823529411764707`",
                     ",", "0.3333333333333333`"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.803921568627451, 0.38823529411764707`, 
                    0.3333333333333333]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.803921568627451, 0.38823529411764707`, 
                    0.3333333333333333], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.8`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.13333333333333333`, 0.7137254901960784, 
                    0.8588235294117647], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.08888888888888889, 0.4758169934640523, 
                    0.5725490196078431], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.13333333333333333`", ",", 
                    "0.7137254901960784`", ",", "0.8588235294117647`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.13333333333333333`, 0.7137254901960784, 
                    0.8588235294117647]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.13333333333333333`, 0.7137254901960784, 
                    0.8588235294117647], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.8`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.9254901960784314, 0.803921568627451, 
                    0.24313725490196078`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6169934640522876, 0.5359477124183007, 
                    0.16209150326797386`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{"0.9254901960784314`", ",", "0.803921568627451`", 
                    ",", "0.24313725490196078`"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.9254901960784314, 0.803921568627451, 
                    0.24313725490196078`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.9254901960784314, 0.803921568627451, 
                    0.24313725490196078`], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Opacity", "[", "0.`", "]"}], "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
               RowBox[{"{", "}"}]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"Automatic", ",", "Automatic", ",", "Automatic"}], 
                   "}"}], ",", 
                 RowBox[{"{", "None", "}"}]}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"FontFamily", "\[Rule]", "\"Lato\""}], ",", "14", 
                 ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False]}], 
               "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{0.8, 0.8}], ImageScaled[{0.5, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio, 1.618033988749895],
   Axes->{False, False},
   AxesLabel->{None, None},
   AxesOrigin->{-0.02, 0.},
   Background->GrayLevel[1],
   DisplayFunction->Identity,
   Frame->{{True, False}, {True, False}},
   FrameLabel->{{
      FormBox["\"Probability\"", TraditionalForm], None}, {
      FormBox[
      "\"\\!\\(\\*SuperscriptBox[\\(10\\), \\(2\\)]\\) \[Times] \
TVD(\\!\\(\\*SubscriptBox[OverscriptBox[\\(p\\), \\(^\\)], \\(j\\)]\\)-\\!\\(\
\\*SubscriptBox[\\(p\\), \\(j\\)]\\))\"", TraditionalForm], None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImageSize->Medium,
   LabelStyle->{FontFamily -> "Lato", 14, 
     GrayLevel[0]},
   PlotRange->{{0, 1}, {All, All}},
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {None, 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{
       Directive[
        EdgeForm[
         Directive[
          Opacity[0.]]], 
        RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], {{{{}, {
           Directive[
            Opacity[0.5], 
            Directive[
             EdgeForm[
              Directive[
               Opacity[0.]]], 
             RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], 
            Directive[
             Opacity[1], 
             RGBColor[
             0.803921568627451, 0.38823529411764707`, 
              0.3333333333333333]]], {{{
              
              Rectangle[{0.01, 0.}, {0.02, 0.0022271714922048997`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.02, 0.}, {0.03, 0.0033407572383073497`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.03, 0.}, {0.04, 0.013363028953229399`}, 
               "RoundingRadius" -> 0]}}, {{
              Rectangle[{0.04, 0.}, {0.05, 0.013363028953229399`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.05, 0.}, {0.06, 0.021158129175946547`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.06, 0.}, {0.07, 0.026726057906458798`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.07, 0.}, {0.08, 0.026726057906458798`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.08, 0.}, {0.09, 0.02338530066815145}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.09, 0.}, {0.1, 0.030066815144766147`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.1, 0.}, {0.11, 0.030066815144766147`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.11, 0.}, {0.12, 0.02338530066815145}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.12, 0.}, {0.13, 0.026726057906458798`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.13, 0.}, {0.14, 0.02338530066815145}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.14, 0.}, {0.15, 0.030066815144766147`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.15, 0.}, {0.16, 0.02338530066815145}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.16, 0.}, {0.17, 0.02338530066815145}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.17, 0.}, {0.18, 0.021158129175946547`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.18, 0.}, {0.19, 0.026726057906458798`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.19, 0.}, {0.2, 0.024498886414253896`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.2, 0.}, {0.21, 0.028953229398663696`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.21, 0.}, {0.22, 0.030066815144766147`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.22, 0.}, {0.23, 0.024498886414253896`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.23, 0.}, {0.24, 0.017817371937639197`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.24, 0.}, {0.25, 0.01670378619153675}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.25, 0.}, {0.26, 0.02783964365256125}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.26, 0.}, {0.27, 0.015590200445434299`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.27, 0.}, {0.28, 0.017817371937639197`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.28, 0.}, {0.29, 0.028953229398663696`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.29, 0.}, {0.3, 0.017817371937639197`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.3, 0.}, {0.31, 0.014476614699331848`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.31, 0.}, {0.32, 0.013363028953229399`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.32, 0.}, {0.33, 0.015590200445434299`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.33, 0.}, {0.34, 0.01893095768374165}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.34, 0.}, {0.35, 0.015590200445434299`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.35, 0.}, {0.36, 0.01670378619153675}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.36, 0.}, {0.37, 0.013363028953229399`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.37, 0.}, {0.38, 0.011135857461024499`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.38, 0.}, {0.39, 0.01670378619153675}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.39, 0.}, {0.4, 0.013363028953229399`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.4, 0.}, {0.41, 0.013363028953229399`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.41, 0.}, {0.42, 0.014476614699331848`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.42, 0.}, {0.43, 0.0077951002227171495`}, 
               "RoundingRadius" -> 0]}}, {{
              Rectangle[{0.43, 0.}, {0.44, 0.0077951002227171495`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.44, 0.}, {0.45, 0.008908685968819599}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.45, 0.}, {0.46, 0.008908685968819599}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.46, 0.}, {0.47, 0.011135857461024499`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.47, 0.}, {0.48, 0.0033407572383073497`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.48, 0.}, {0.49, 0.0066815144766146995`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.49, 0.}, {0.5, 0.0066815144766146995`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.5, 0.}, {0.51, 0.0066815144766146995`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.51, 0.}, {0.52, 0.008908685968819599}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.52, 0.}, {0.53, 0.005567928730512249}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.53, 0.}, {0.54, 0.004454342984409799}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.54, 0.}, {0.55, 0.01002227171492205}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.55, 0.}, {0.56, 0.0011135857461024498`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.56, 0.}, {0.57, 0.005567928730512249}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.57, 0.}, {0.58, 0.005567928730512249}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.58, 0.}, {0.59, 0.004454342984409799}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.59, 0.}, {0.6, 0.0077951002227171495`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.6, 0.}, {0.61, 0.0033407572383073497`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.61, 0.}, {0.62, 0.0022271714922048997`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.62, 0.}, {0.63, 0.0022271714922048997`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.63, 0.}, {0.64, 0.005567928730512249}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.64, 0.}, {0.65, 0.0033407572383073497`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.65, 0.}, {0.66, 0.0022271714922048997`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.66, 0.}, {0.67, 0.0022271714922048997`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.67, 0.}, {0.68, 0.0011135857461024498`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.68, 0.}, {0.69, 0.0033407572383073497`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.7, 0.}, {0.71, 0.004454342984409799}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.71, 0.}, {0.72, 0.0022271714922048997`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.74, 0.}, {0.75, 0.0033407572383073497`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.78, 0.}, {0.79, 0.0022271714922048997`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.81, 0.}, {0.82, 0.0011135857461024498`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.82, 0.}, {0.83, 0.0011135857461024498`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.83, 0.}, {0.84, 0.0022271714922048997`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.84, 0.}, {0.85, 0.0011135857461024498`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.85, 0.}, {0.86, 0.0011135857461024498`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.87, 0.}, {0.88, 0.0011135857461024498`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.9, 0.}, {0.91, 0.0011135857461024498`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.91, 0.}, {0.92, 0.0011135857461024498`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.92, 0.}, {0.93, 0.0011135857461024498`}, 
               "RoundingRadius" -> 0]}}, {{
              Rectangle[{0.94, 0.}, {0.95, 0.0011135857461024498`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.95, 0.}, {0.96, 0.0011135857461024498`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.96, 0.}, {0.97, 0.0011135857461024498`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.98, 0.}, {0.99, 0.0011135857461024498`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{1.02, 0.}, {1.03, 0.0011135857461024498`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{1.03, 0.}, {1.04, 0.0011135857461024498`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{1.11, 0.}, {1.12, 0.0011135857461024498`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{1.18, 0.}, {1.19, 0.0011135857461024498`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{1.21, 0.}, {1.22, 0.0011135857461024498`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{1.27, 0.}, {1.28, 0.0011135857461024498`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{1.29, 0.}, {1.3, 0.0011135857461024498`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{1.3, 0.}, {1.31, 0.0011135857461024498`}, 
               "RoundingRadius" -> 0]}}}}, {}, {}}}, {{{}, {
           Directive[
            Opacity[0.5], 
            Directive[
             EdgeForm[
              Directive[
               Opacity[0.]]], 
             RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], 
            Directive[
             Opacity[0.8], 
             RGBColor[
             0.13333333333333333`, 0.7137254901960784, 
              0.8588235294117647]]], {{{
              
              Rectangle[{0., 0.}, {0.01, 0.0022271714922048997`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.01, 0.}, {0.02, 0.017817371937639197`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.02, 0.}, {0.03, 0.04899777282850779}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.03, 0.}, {0.04, 0.08240534521158129}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.04, 0.}, {0.05, 0.07461024498886415}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.05, 0.}, {0.06, 0.07906458797327394}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.06, 0.}, {0.07, 0.07461024498886415}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.07, 0.}, {0.08, 0.08685968819599109}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.08, 0.}, {0.09, 0.05456570155902005}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.09, 0.}, {0.1, 0.07349665924276169}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.1, 0.}, {0.11, 0.045657015590200446`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.11, 0.}, {0.12, 0.0378619153674833}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.12, 0.}, {0.13, 0.036748329621380846`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.13, 0.}, {0.14, 0.0378619153674833}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.14, 0.}, {0.15, 0.0378619153674833}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.15, 0.}, {0.16, 0.031180400890868598`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.16, 0.}, {0.17, 0.02338530066815145}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.17, 0.}, {0.18, 0.01670378619153675}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.18, 0.}, {0.19, 0.013363028953229399`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.19, 0.}, {0.2, 0.008908685968819599}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.2, 0.}, {0.21, 0.0200445434298441}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.21, 0.}, {0.22, 0.013363028953229399`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.22, 0.}, {0.23, 0.012249443207126948`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.23, 0.}, {0.24, 0.015590200445434299`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.24, 0.}, {0.25, 0.004454342984409799}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.25, 0.}, {0.26, 0.008908685968819599}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.26, 0.}, {0.27, 0.0066815144766146995`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.27, 0.}, {0.28, 0.005567928730512249}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.28, 0.}, {0.29, 0.005567928730512249}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.29, 0.}, {0.3, 0.004454342984409799}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.3, 0.}, {0.31, 0.0033407572383073497`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.31, 0.}, {0.32, 0.0033407572383073497`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.32, 0.}, {0.33, 0.0033407572383073497`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.33, 0.}, {0.34, 0.0011135857461024498`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.35, 0.}, {0.36, 0.0022271714922048997`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.37, 0.}, {0.38, 0.0011135857461024498`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.4, 0.}, {0.41, 0.0011135857461024498`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.41, 0.}, {0.42, 0.0022271714922048997`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.47, 0.}, {0.48, 0.0011135857461024498`}, 
               "RoundingRadius" -> 0]}}}}, {}, {}}}, {{{}, {
           Directive[
            Opacity[0.5], 
            Directive[
             EdgeForm[
              Directive[
               Opacity[0.]]], 
             RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], 
            Directive[
             Opacity[0.8], 
             RGBColor[
             0.9254901960784314, 0.803921568627451, 
              0.24313725490196078`]]], {{{
              Rectangle[{0., 0.}, {0.01, 0.061247216035634745`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.01, 0.}, {0.02, 0.21380846325167038`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.02, 0.}, {0.03, 0.22160356347438753`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.03, 0.}, {0.04, 0.14699331848552338`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.04, 0.}, {0.05, 0.0801781737193764}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.05, 0.}, {0.06, 0.0757238307349666}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.06, 0.}, {0.07, 0.031180400890868598`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.07, 0.}, {0.08, 0.05679287305122494}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.08, 0.}, {0.09, 0.043429844097995544`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.09, 0.}, {0.1, 0.021158129175946547`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.1, 0.}, {0.11, 0.0200445434298441}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.11, 0.}, {0.12, 0.008908685968819599}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.12, 0.}, {0.13, 0.008908685968819599}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.13, 0.}, {0.14, 0.0022271714922048997`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.14, 0.}, {0.15, 0.0033407572383073497`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.15, 0.}, {0.16, 0.0011135857461024498`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.16, 0.}, {0.17, 0.0011135857461024498`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.19, 0.}, {0.2, 0.0011135857461024498`}, 
               "RoundingRadius" -> 0]}}, {{
              
              Rectangle[{0.22, 0.}, {0.23, 0.0011135857461024498`}, 
               "RoundingRadius" -> 
               0]}}}}, {}, {}}}}}, {{{{{}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}}, {}}}, {{{{}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {}}}, {{{{}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {}}}}}, {
     AspectRatio -> GoldenRatio, Axes -> {False, False}, 
      AxesLabel -> {None, None}, AxesOrigin -> {-0.02, 0.}, Background -> 
      GrayLevel[1], Frame -> {{True, False}, {True, False}}, 
      FrameLabel -> {{"Probability", None}, {
        "\!\(\*SuperscriptBox[\(10\), \(2\)]\) \[Times] \
TVD(\!\(\*SubscriptBox[OverscriptBox[\(p\), \(^\)], \
\(j\)]\)-\!\(\*SubscriptBox[\(p\), \(j\)]\))", None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
      LabelStyle -> {FontFamily -> "Lato", 14, 
        GrayLevel[0]}, PlotRange -> {{0, 1}, {All, All}}, 
      PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {None, 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], {
     Placed[
      SwatchLegend[{{
         Directive[
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          Opacity[1], 
          RGBColor[
          0.803921568627451, 0.38823529411764707`, 0.3333333333333333]], 
         Directive[
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          Opacity[0.8], 
          RGBColor[
          0.13333333333333333`, 0.7137254901960784, 0.8588235294117647]], 
         Directive[
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          Opacity[0.8], 
          RGBColor[
          0.9254901960784314, 0.803921568627451, 0.24313725490196078`]]}, {
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]], 
         Directive[
          Opacity[0.5], 
          EdgeForm[
           Directive[
            Opacity[0.]]], 
          GrayLevel[1]]}}, {{
        "S = \!\(\*SuperscriptBox[\(10\), \(4\)]\)", 
         "S = \!\(\*SuperscriptBox[\(10\), \(5\)]\)", 
         "S = \!\(\*SuperscriptBox[\(10\), \(6\)]\)"}, {}}, 
       LegendMarkers -> {{Automatic, Automatic, Automatic}, {None}}, 
       LabelStyle -> {FontFamily -> "Lato", 14, 
         GrayLevel[0]}, LegendLayout -> "Column"], {0.8, 0.8}, Identity]}]& ],
  
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.829149696699335*^9, {3.829149906392085*^9, 3.8291499482061987`*^9}, 
   3.829150003104044*^9, {3.829150062435113*^9, 3.829150215915142*^9}, {
   3.829150253154787*^9, 3.829150277533474*^9}, 3.829150581203631*^9, 
   3.8291527495656424`*^9, {3.8291528589957867`*^9, 3.829152866769516*^9}, {
   3.829152913579249*^9, 3.829152938783845*^9}, 3.8291530263872623`*^9, {
   3.8291534965452623`*^9, 3.829153505884801*^9}, 3.829154533984837*^9, 
   3.829154570355616*^9, 3.829154752304296*^9, 3.8291550104987507`*^9, {
   3.8291551038556337`*^9, 3.8291551666542397`*^9}, {3.829155219164041*^9, 
   3.829155230265347*^9}, {3.829161236216354*^9, 3.829161256259574*^9}, 
   3.829230816953071*^9, {3.829232159228817*^9, 3.8292321710280027`*^9}, 
   3.8292323365736628`*^9, 3.829238017803372*^9},
 CellLabel->"Out[65]=",ExpressionUUID->"d8ccfb5f-7fcb-4fa6-87a9-48e7038f0388"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{830, 990},
WindowMargins->{{224, Automatic}, {Automatic, 0}},
WindowOpacity->1,
TaggingRules->{
 "WelcomeScreenSettings" -> {"FEStarting" -> False}, "TryRealOnly" -> False},
FrontEndVersion->"12.1 for Mac OS X x86 (64-bit) (June 19, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"66a8d5bb-12f3-46fb-af02-078e0c07f889"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[422, 15, 181, 3, 69, "Chapter",ExpressionUUID->"d501fe16-a944-4b5b-8a66-7091374bd53a"],
Cell[CellGroupData[{
Cell[628, 22, 280, 4, 67, "Section",ExpressionUUID->"ccf9d091-0aac-4e5f-ad0d-ec0e430a876b"],
Cell[CellGroupData[{
Cell[933, 30, 448, 7, 54, "Subsection",ExpressionUUID->"c2c91782-a176-404c-9c0e-c3fec582a7a8"],
Cell[1384, 39, 2219, 54, 175, "Text",ExpressionUUID->"cfbbd463-515e-4775-920d-8c1d994439fc"],
Cell[3606, 95, 5241, 147, 320, "Input",ExpressionUUID->"e189e09d-98c2-4d4a-8b7a-3e9d441bccaf"],
Cell[8850, 244, 1142, 18, 150, "Text",ExpressionUUID->"6d93d8df-1510-495d-a87b-5916e1117626"],
Cell[9995, 264, 4642, 92, 199, "Input",ExpressionUUID->"9f36c2f9-dc50-4f57-ae53-8131f11b9ac8"],
Cell[14640, 358, 555, 11, 58, "Text",ExpressionUUID->"d315c8bc-399c-4036-8336-d5d94b27df6d"],
Cell[15198, 371, 950, 21, 30, "Input",ExpressionUUID->"685e8b64-0066-4d8d-a9f1-3f6db813e97d"],
Cell[16151, 394, 872, 19, 81, "Text",ExpressionUUID->"dd5a95a1-3fdf-45c3-8181-df2bbcb23615"],
Cell[17026, 415, 2114, 48, 182, "Input",ExpressionUUID->"c33f1d63-7e4c-481e-90e7-dc93f5c0f99d"],
Cell[19143, 465, 772, 17, 58, "Text",ExpressionUUID->"2b42e94f-1c0e-4a4d-a393-940c5f7826d9"],
Cell[19918, 484, 4232, 97, 409, "Input",ExpressionUUID->"210d2605-7036-49e2-81a4-d988a00871b1"],
Cell[24153, 583, 772, 15, 81, "Text",ExpressionUUID->"67f78d7a-540b-4f28-9e3d-e75ff920e433"],
Cell[24928, 600, 3017, 60, 157, "Input",ExpressionUUID->"2c8ef934-6c47-461a-994a-c182cf2303c7"],
Cell[27948, 662, 842, 18, 81, "Text",ExpressionUUID->"9edf9123-e84d-45fe-9d95-d95746efae49"],
Cell[28793, 682, 1996, 42, 123, "Input",ExpressionUUID->"46c80772-34eb-4fd0-8f1b-b086028ef35b"],
Cell[30792, 726, 1155, 29, 81, "Text",ExpressionUUID->"b748ddfb-f6a9-4a36-b7aa-3ac871f3b98c"],
Cell[31950, 757, 1644, 39, 110, "Text",ExpressionUUID->"13b4ad4c-fb96-4d71-8ed4-0a57054af95b"],
Cell[33597, 798, 1177, 24, 150, "Text",ExpressionUUID->"e0f72c30-b7e0-4bcd-91a5-c40f32095282"],
Cell[34777, 824, 300, 7, 58, "Text",ExpressionUUID->"5db6c958-8a02-46ab-a839-b442a3651585"],
Cell[35080, 833, 13729, 356, 955, "Input",ExpressionUUID->"aef7c2a1-5704-49e3-b532-bff5dd24e011"],
Cell[48812, 1191, 4032, 61, 725, "Text",ExpressionUUID->"3371b452-2d2d-486f-8b18-8637e4851ebc"],
Cell[52847, 1254, 7446, 172, 354, "Input",ExpressionUUID->"97b0c15b-36aa-4d4b-84c0-3094cca51f2a"],
Cell[60296, 1428, 349, 9, 35, "Text",ExpressionUUID->"c46662e5-be1e-4e00-a006-f22483a79c10"],
Cell[60648, 1439, 6603, 167, 472, "Input",ExpressionUUID->"1226bef0-0376-4df3-a64f-9d0033c889d5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[67288, 1611, 271, 4, 38, "Subsection",ExpressionUUID->"4b9ce8ca-f72f-4615-a453-b4253fcb5529"],
Cell[67562, 1617, 5774, 151, 449, "Text",ExpressionUUID->"10d0ecbf-5f2c-48f1-95b4-08d12bf51076"],
Cell[CellGroupData[{
Cell[73361, 1772, 11843, 225, 682, "Input",ExpressionUUID->"73493cbf-78a9-4568-bb03-b9ecb4dc3e56"],
Cell[CellGroupData[{
Cell[85229, 2001, 1320, 22, 24, "Print",ExpressionUUID->"ffd6db5e-fde9-441b-88d5-22adece9310a"],
Cell[86552, 2025, 1320, 22, 24, "Print",ExpressionUUID->"1357c9d4-ddd9-4b60-adf8-65b38b7b1529"],
Cell[87875, 2049, 1320, 22, 24, "Print",ExpressionUUID->"79b1e9ba-fa57-4e7c-856d-58d17611a5b5"],
Cell[89198, 2073, 1319, 22, 24, "Print",ExpressionUUID->"d674d284-88c7-4894-a8b3-24f3f0c0c2ca"],
Cell[90520, 2097, 1322, 22, 24, "Print",ExpressionUUID->"42e2981e-5834-4f9e-8c1b-9d067e1e0422"],
Cell[91845, 2121, 1318, 22, 24, "Print",ExpressionUUID->"2669df78-9f66-463d-baca-e16596f6a7ca"],
Cell[93166, 2145, 1318, 22, 24, "Print",ExpressionUUID->"83297c1d-0207-44b5-8abf-1709cf0599bd"],
Cell[94487, 2169, 1026, 16, 82, "Print",ExpressionUUID->"4234c35b-b60a-4fc5-9bd8-ba1701fbbefb"],
Cell[95516, 2187, 2174, 46, 60, "Print",ExpressionUUID->"9ae1a392-8abb-4517-848e-2e2425b57c7d"],
Cell[97693, 2235, 1390, 25, 63, "Print",ExpressionUUID->"51dc29c9-8672-4d0c-bcca-ef597f8af921"],
Cell[99086, 2262, 1145, 20, 24, "Print",ExpressionUUID->"73b155ab-88f8-49e6-ae35-d3c20b765220"]
}, Open  ]]
}, Open  ]],
Cell[100258, 2286, 778, 18, 58, "Text",ExpressionUUID->"b3ce5e53-f6d1-4ea2-a912-802ec0e43d21"],
Cell[101039, 2306, 1076, 23, 52, "Input",ExpressionUUID->"21c129dd-819f-4496-9a61-1dfc6bdb9add"]
}, Open  ]],
Cell[CellGroupData[{
Cell[102152, 2334, 321, 5, 38, "Subsection",ExpressionUUID->"af4f8508-a69e-49cb-b7b9-6f900b5ea4a4"],
Cell[102476, 2341, 672, 15, 81, "Text",ExpressionUUID->"1aca5d29-2c62-4b2a-bf9e-104023de08bd"],
Cell[103151, 2358, 3769, 81, 178, "Input",ExpressionUUID->"f4336043-c4b9-4ad5-bf5e-5324921409b2"],
Cell[106923, 2441, 597, 16, 35, "Text",ExpressionUUID->"3c4d1cc4-b63b-4e4d-93af-743267f9e57f"],
Cell[CellGroupData[{
Cell[107545, 2461, 2367, 49, 157, "Input",ExpressionUUID->"3ebda8a8-301c-417f-a223-6cfb74367f1a"],
Cell[109915, 2512, 1559, 33, 449, "Output",ExpressionUUID->"c2316655-5bd2-49b6-92a6-a5e023ff4f6f"]
}, Open  ]],
Cell[111489, 2548, 9895, 212, 724, InheritFromParent,ExpressionUUID->"801d7f24-a8a8-4dc8-8757-7acdbb43525a"],
Cell[CellGroupData[{
Cell[121409, 2764, 2012, 50, 199, "Input",ExpressionUUID->"ff6836dc-1154-4d00-b2f8-0e6103b8b35a"],
Cell[123424, 2816, 2560, 59, 449, "Output",ExpressionUUID->"9f270e86-b715-49bb-96e8-bf59ede8cf40"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[126045, 2882, 365, 6, 67, "Section",ExpressionUUID->"a2a90bfc-f11f-4a04-98dd-50f1058c1875"],
Cell[CellGroupData[{
Cell[126435, 2892, 221, 4, 54, "Subsection",ExpressionUUID->"fd5fd911-ba5d-417b-9024-ef7338175788"],
Cell[126659, 2898, 200, 3, 35, "Text",ExpressionUUID->"91613752-fbd2-4882-926f-9824c2d9736f"],
Cell[126862, 2903, 846, 19, 30, "Input",ExpressionUUID->"0b8401b6-54f6-4666-9462-8aeb0d684131"],
Cell[127711, 2924, 906, 26, 58, "Text",ExpressionUUID->"b198f055-4c85-4b35-bd92-a2f268a1c8c2"],
Cell[128620, 2952, 2784, 75, 224, "Input",ExpressionUUID->"143a8298-9696-4334-aae2-b850533a4d7d"],
Cell[131407, 3029, 534, 9, 58, "Text",ExpressionUUID->"84c0bd3f-28d3-4993-8ffe-ce02b9386c51"],
Cell[131944, 3040, 836, 18, 34, "Input",ExpressionUUID->"f551acbb-62e6-4942-b22b-ecde78b2f9e4"],
Cell[CellGroupData[{
Cell[132805, 3062, 182, 3, 45, "Subsubsection",ExpressionUUID->"db90b4e8-abb0-40e3-8106-1d6040f0c729"],
Cell[CellGroupData[{
Cell[133012, 3069, 1559, 34, 127, "Text",ExpressionUUID->"4021d18b-5b8c-4f38-834d-3fd9e3bb83ce",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[134574, 3105, 299, 5, 35, "Text",ExpressionUUID->"8366896e-1eec-4a5a-9dfa-92b2fabb4fbb",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[134876, 3112, 1953, 51, 73, "Input",ExpressionUUID->"7ca777a3-8b9a-4da4-b86c-b8ea5b3bab9f",
 Evaluatable->False,
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[136832, 3165, 528, 10, 58, "Text",ExpressionUUID->"da561bce-5999-475a-8546-4bd75aae19dc",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[137363, 3177, 2874, 86, 100, "Input",ExpressionUUID->"ad6b1048-19d1-4d6f-89ab-745e9c7e896d",
 Evaluatable->False,
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[140240, 3265, 340, 7, 35, "Text",ExpressionUUID->"e7b2d136-cc11-4c30-be6c-69ae5961839c",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[140583, 3274, 794, 21, 52, "Input",ExpressionUUID->"ea1c07e3-7e8b-406d-8ad4-d5e8b4e39c00",
 Evaluatable->False,
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[141380, 3297, 779, 18, 81, "Text",ExpressionUUID->"a0674a9f-1733-4236-b041-a8a5bed71dcc",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[142162, 3317, 760, 21, 52, "Input",ExpressionUUID->"2554a7de-21a4-4d25-88d5-a95adadffa03",
 Evaluatable->False,
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[142925, 3340, 1000, 24, 81, "Text",ExpressionUUID->"1799fd51-36d2-497e-bd76-a016bb4f15d4",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[143928, 3366, 896, 16, 30, "Input",ExpressionUUID->"6583d677-2abf-41ac-a501-9d170570a539",
 Evaluatable->False,
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[144827, 3384, 2281, 66, 112, "Text",ExpressionUUID->"23ade204-6bbd-476b-a527-8a6560f00bdf",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[147111, 3452, 1149, 29, 49, "Input",ExpressionUUID->"28854aa4-4749-42d2-ad08-c5d0cfb95235",
 Evaluatable->False,
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[148263, 3483, 303, 5, 35, "Text",ExpressionUUID->"a06bc29f-fcb0-48b9-9420-88564c71bf47",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Open  ]],
Cell[148581, 3491, 6116, 170, 410, "Input",ExpressionUUID->"8c05b36c-2d33-4210-9580-e0e9c13f29f6"],
Cell[154700, 3663, 527, 14, 35, "Text",ExpressionUUID->"63c81b10-73e2-47ea-9db0-8355637e7a14"],
Cell[155230, 3679, 2972, 77, 171, "Input",ExpressionUUID->"ea6781f8-a49d-4e9a-8783-0a28219dcab2"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[158251, 3762, 161, 3, 38, "Subsection",ExpressionUUID->"67447b27-fbc2-4a8d-974b-2145e2a18699"],
Cell[158415, 3767, 480, 11, 58, "Text",ExpressionUUID->"5a1cd1bd-1cdf-41f4-b77b-e1b99dbf9260"],
Cell[CellGroupData[{
Cell[158920, 3782, 2625, 45, 115, "Input",ExpressionUUID->"5b25beca-abb0-4fc1-b4f7-266d9b5effdd"],
Cell[161548, 3829, 478997, 7898, 154, "Print",ExpressionUUID->"ada8475f-886d-4b1d-b64d-d91d8e0e4848"]
}, Open  ]],
Cell[640560, 11730, 433, 8, 58, "Text",ExpressionUUID->"7c33564b-5b6f-4442-9d53-ed1ec32b8d0e"],
Cell[640996, 11740, 1153, 22, 73, "Input",ExpressionUUID->"2dc6181c-0de6-4d7a-b843-e89251bb67a5"],
Cell[642152, 11764, 1825, 43, 173, "Text",ExpressionUUID->"993e04e9-417d-45b9-bf8b-f106d1494725"],
Cell[CellGroupData[{
Cell[644002, 11811, 3036, 78, 287, "Input",ExpressionUUID->"8bec09de-08a9-4eb4-ac85-9a9cba7f3c1f"],
Cell[CellGroupData[{
Cell[647063, 11893, 411, 9, 24, "Print",ExpressionUUID->"f33908c8-fe75-4885-ae43-4f950a390a74"],
Cell[647477, 11904, 411, 9, 24, "Print",ExpressionUUID->"2fe74e4b-2463-423c-bb00-9988b187da21"],
Cell[647891, 11915, 411, 9, 24, "Print",ExpressionUUID->"c307376c-b45d-4861-b4b8-3e2a44828122"]
}, Open  ]]
}, Open  ]],
Cell[648329, 11928, 242, 6, 35, "Text",ExpressionUUID->"d2315bdc-7626-4af9-bfa8-fc599e6c5429"],
Cell[CellGroupData[{
Cell[648596, 11938, 5185, 106, 228, "Input",ExpressionUUID->"7a2f1b2b-c248-40ad-9c39-43a63a72a9bc"],
Cell[653784, 12046, 1068058, 21283, 449, "Output",ExpressionUUID->"58e59bef-3fde-41bc-8e53-5a65ec757fc8"]
}, Open  ]],
Cell[1721857, 33332, 819, 20, 81, "Text",ExpressionUUID->"544ffe74-71a0-44d6-b94d-6eab2f009020"],
Cell[CellGroupData[{
Cell[1722701, 33356, 4506, 112, 290, "Input",ExpressionUUID->"6101fd18-5ba7-4b7c-9f62-a6e8590302e8"],
Cell[1727210, 33470, 387798, 7776, 449, "Output",ExpressionUUID->"d8ccfb5f-7fcb-4fa6-87a9-48e7038f0388"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}, Open  ]]
}
]
*)

